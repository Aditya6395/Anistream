<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ExoPlayer.Common</name>
    </assembly>
    <members>
        <member name="T:Com.Google.Android.Exoplayer2.Audio.AudioAttributes">
            <summary>Attributes for audio playback, which configure the underlying platform <c>android.media.AudioTrack</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Audio.AudioAttributes.AllowedCapturePolicy">
            <summary>The <c>C.AudioAllowedCapturePolicy</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Audio.AudioAttributes.ContentType">
            <summary>The <c>C.AudioContentType</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Audio.AudioAttributes.Default">
            <summary>The default audio attributes, where the content type is <c>C#AUDIO_CONTENT_TYPE_UNKNOWN</c>,
            usage is <c>C#USAGE_MEDIA</c>, capture policy is <c>C#ALLOW_CAPTURE_BY_ALL</c> and no flags
            are set.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Audio.AudioAttributes.Flags">
            <summary>The <c>C.AudioFlags</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Audio.AudioAttributes.SpatializationBehavior">
            <summary>The <c>C.SpatializationBehavior</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Audio.AudioAttributes.Usage">
            <summary>The <c>C.AudioUsage</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Audio.AuxEffectInfo">
            <summary>Represents auxiliary effect information, which can be used to attach an auxiliary effect to an
            underlying <c>AudioTrack</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Audio.AuxEffectInfo.EffectId">
            <summary>The identifier of the effect, or <c>#NO_AUX_EFFECT_ID</c> if there is no effect.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.AuxEffectInfo.NoAuxEffectId">
            <summary>Value for <c>#effectId</c> representing no auxiliary effect.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Audio.AuxEffectInfo.SendLevel">
            <summary>The send level for the effect.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.AuxEffectInfo.#ctor(System.Int32,System.Single)">
            <param name="effectId">The effect identifier. This is the value returned by <c>AudioEffect#getId()</c> on the effect, or <c>#NO_AUX_EFFECT_ID</c> which represents no
                effect. This value is passed to <c>AudioTrack#attachAuxEffect(int)</c> on the underlying
                audio track.</param>
            <param name="sendLevel">The send level for the effect, where 0 represents no effect and a value of 1
                is full send. If <c>effectId</c> is not <c>#NO_AUX_EFFECT_ID</c>, this value is passed
                to <c>AudioTrack#setAuxEffectSendLevel(float)</c> on the underlying audio track.</param>
            <summary>Creates an instance with the given effect identifier and send level.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.BasePlayer">
            <summary>Abstract base <c>Player</c> which implements common implementation independent methods.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandAdjustDeviceVolume">
            <summary>Command to increase and decrease the device volume and mute it.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandChangeMediaItems">
            <summary>Command to change the <c>MediaItem MediaItems</c> in the playlist.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandGetAudioAttributes">
            <summary>Command to get the player current <c>AudioAttributes</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandGetCurrentMediaItem">
            <summary>Command to get the currently playing <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandGetDeviceVolume">
            <summary>Command to get the device volume and whether it is muted.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandGetMediaItemsMetadata">
            <summary>Command to get the <c>MediaItem MediaItems</c> metadata.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandGetText">
            <summary>Command to get the text that should currently be displayed by the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandGetTimeline">
            <summary>Command to get the information about the current timeline.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandGetTracks">
            <summary>Command to get details of the current track selection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandGetVolume">
            <summary>Command to get the player volume.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandInvalid">
            <summary>Represents an invalid <c>Command</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandPlayPause">
            <summary>Command to start, pause or resume playback.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandPrepare">
            <summary>Command to prepare the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSeekBack">
            <summary>Command to seek back by a fixed increment into the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSeekForward">
            <summary>Command to seek forward by a fixed increment into the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSeekInCurrentMediaItem">
            <summary>Command to seek anywhere into the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSeekToDefaultPosition">
            <summary>Command to seek to the default position of the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSeekToMediaItem">
            <summary>Command to seek anywhere in any <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSeekToNext">
            <summary>Command to seek to a later position in the current or next <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSeekToNextMediaItem">
            <summary>Command to seek to the default position of the next <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSeekToPrevious">
            <summary>Command to seek to an earlier position in the current or previous <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSeekToPreviousMediaItem">
            <summary>Command to seek to the default position of the previous <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSetDeviceVolume">
            <summary>Command to set the device volume and mute it.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSetMediaItem">
            <summary>Command to set a <c>MediaItem MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSetMediaItemsMetadata">
            <summary>Command to set the <c>MediaItem MediaItems</c> metadata.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSetRepeatMode">
            <summary>Command to set the repeat mode.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSetShuffleMode">
            <summary>Command to enable shuffling.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSetSpeedAndPitch">
            <summary>Command to set the playback speed and pitch.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSetTrackSelectionParameters">
            <summary>Command to set the player's track selection parameters.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSetVideoSurface">
            <summary>Command to set and clear the surface on which to render the video.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandSetVolume">
            <summary>Command to set the player volume.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.CommandStop">
            <summary>Command to stop playback or release the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.DiscontinuityReasonAutoTransition">
            <summary>Automatic playback transition from one period in the timeline to the next.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.DiscontinuityReasonInternal">
            <summary>Discontinuity introduced internally (e.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.DiscontinuityReasonRemove">
            <summary>Discontinuity caused by the removal of the current period from the <c>Timeline</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.DiscontinuityReasonSeek">
            <summary>Seek within the current period or to another period.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.DiscontinuityReasonSeekAdjustment">
            <summary>Seek adjustment due to being unable to seek to the requested position or because the seek was
            permitted to be inexact.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.DiscontinuityReasonSkip">
            <summary>Discontinuity introduced by a skipped period (for instance a skipped ad).</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventAudioAttributesChanged">
            <summary>
              <c>#getAudioAttributes()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventAudioSessionId">
            <summary>The audio session id was set.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventAvailableCommandsChanged">
            <summary>
              <c>#isCommandAvailable(int)</c> changed for at least one <c>Command</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventCues">
            <summary>
              <c>#getCurrentCues()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventDeviceInfoChanged">
            <summary>
              <c>#getDeviceInfo()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventDeviceVolumeChanged">
            <summary>
              <c>#getDeviceVolume()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventIsPlayingChanged">
            <summary>
              <c>#isPlaying()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventMaxSeekToPreviousPositionChanged">
            <summary>
              <c>#getMaxSeekToPreviousPosition()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventMediaItemTransition">
            <summary>
              <c>#getCurrentMediaItem()</c> changed or the player started repeating the current item.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventMediaMetadataChanged">
            <summary>
              <c>#getMediaMetadata()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventMetadata">
            <summary>Metadata associated with the current playback time changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventPlaybackParametersChanged">
            <summary>
              <c>#getPlaybackParameters()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventPlaybackStateChanged">
            <summary>
              <c>#getPlaybackState()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventPlaybackSuppressionReasonChanged">
            <summary>
              <c>#getPlaybackSuppressionReason()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventPlayerError">
            <summary>
              <c>#getPlayerError()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventPlaylistMetadataChanged">
            <summary>
              <c>#getPlaylistMetadata()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventPlayWhenReadyChanged">
            <summary>
              <c>#getPlayWhenReady()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventPositionDiscontinuity">
            <summary>A position discontinuity occurred.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventRenderedFirstFrame">
            <summary>A frame is rendered for the first time since setting the surface, or since the renderer was
            reset, or since the stream being rendered was changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventRepeatModeChanged">
            <summary>
              <c>#getRepeatMode()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventSeekBackIncrementChanged">
            <summary>
              <c>#getSeekBackIncrement()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventSeekForwardIncrementChanged">
            <summary>
              <c>#getSeekForwardIncrement()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventShuffleModeEnabledChanged">
            <summary>
              <c>#getShuffleModeEnabled()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventSkipSilenceEnabledChanged">
            <summary>Skipping silences in the audio stream is enabled or disabled.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventSurfaceSizeChanged">
            <summary>The size of the surface onto which the video is being rendered changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventTimelineChanged">
            <summary>
              <c>#getCurrentTimeline()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventTracksChanged">
            <summary>
              <c>#getCurrentTracks()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventTrackSelectionParametersChanged">
            <summary>
              <c>#getTrackSelectionParameters()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventVideoSizeChanged">
            <summary>
              <c>#getVideoSize()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.EventVolumeChanged">
            <summary>
              <c>#getVolume()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.MediaItemTransitionReasonAuto">
            <summary>Playback has automatically transitioned to the next media item.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.MediaItemTransitionReasonPlaylistChanged">
            <summary>The current media item has changed because of a change in the playlist.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.MediaItemTransitionReasonRepeat">
            <summary>The media item has been repeated.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.MediaItemTransitionReasonSeek">
            <summary>A seek to another media item has occurred.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.PlaybackSuppressionReasonNone">
            <summary>Playback is not suppressed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.PlaybackSuppressionReasonTransientAudioFocusLoss">
            <summary>Playback is suppressed due to transient audio focus loss.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.PlayWhenReadyChangeReasonAudioBecomingNoisy">
            <summary>Playback has been paused to avoid becoming noisy.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.PlayWhenReadyChangeReasonAudioFocusLoss">
            <summary>Playback has been paused because of a loss of audio focus.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.PlayWhenReadyChangeReasonEndOfMediaItem">
            <summary>Playback has been paused at the end of a media item.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.PlayWhenReadyChangeReasonRemote">
            <summary>Playback has been started or paused because of a remote change.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.PlayWhenReadyChangeReasonUserRequest">
            <summary>Playback has been started or paused by a call to <c>#setPlayWhenReady(boolean)</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.RepeatModeAll">
            <summary>Repeats the entire timeline infinitely.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.RepeatModeOff">
            <summary>Normal playback without repetition.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.RepeatModeOne">
            <summary>Repeats the currently playing <c>MediaItem</c> infinitely during ongoing playback.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.StateBuffering">
            <summary>The player is not able to immediately play the media, but is doing work toward being able to do
            so.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.StateEnded">
            <summary>The player has finished playing the media.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.StateIdle">
            <summary>The player is idle, meaning it holds only limited resources.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.StateReady">
            <summary>The player is able to immediately play from its current position.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.TimelineChangeReasonPlaylistChanged">
            <summary>Timeline changed as a result of a change of the playlist items or the order of the items.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.BasePlayer.InterfaceConsts.TimelineChangeReasonSourceUpdate">
            <summary>Timeline changed as a result of a source update (e.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayer.CanAdvertiseSession">
            <summary>To be added</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayer.ClearVideoSurface">
            <summary>Clears any <c>Surface</c>, <c>SurfaceHolder</c>, <c>SurfaceView</c> or <c>TextureView</c>
            currently set on the player.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayer.DecreaseDeviceVolume">
            <summary>Decreases the volume of the device.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayer.IncreaseDeviceVolume">
            <summary>Increases the volume of the device.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayer.MoveMediaItems(System.Int32,System.Int32,System.Int32)">
            <param name="fromIndex">The start of the range to move.</param>
            <param name="toIndex">The first item not to be included in the range (exclusive).</param>
            <param name="newIndex">The new index of the first media item of the range. If the new index is larger
                than the size of the remaining playlist after removing the range, the range is moved to the
                end of the playlist.</param>
            <summary>Moves the media item range to the new index.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayer.Prepare">
            <summary>Prepares the player.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayer.Release">
            <summary>Releases the player.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayer.RemoveMediaItems(System.Int32,System.Int32)">
            <param name="fromIndex">The index at which to start removing media items.</param>
            <param name="toIndex">The index of the first item to be kept (exclusive). If the index is larger than
                the size of the playlist, media items to the end of the playlist are removed.</param>
            <summary>Removes a range of media items from the playlist.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayer.SeekTo(System.Int32,System.Int64)">
            <param name="mediaItemIndex">The index of the <c>MediaItem</c>.</param>
            <param name="positionMs">The seek position in the specified <c>MediaItem</c>, or <c>C#TIME_UNSET</c>
                to seek to the media item's default position.</param>
            <summary>Seeks to a position specified in milliseconds in the specified <c>MediaItem</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayer.Stop">
            <summary>Stops playback without resetting the playlist.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.AudioAttributes">
            <summary>Returns the attributes for audio playback.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.BufferedPosition">
            <summary>Returns an estimate of the position in the current content or ad up to which data is buffered,
            in milliseconds.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.ContentBufferedPosition">
            <summary>If <c>#isPlayingAd()</c> returns <c>true</c>, returns an estimate of the content position in
            the current content up to which data is buffered, in milliseconds.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.ContentPosition">
            <summary>If <c>#isPlayingAd()</c> returns <c>true</c>, returns the content position that will be
            played once all ads in the ad group have finished playing, in milliseconds.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.CurrentAdGroupIndex">
            <summary>If <c>#isPlayingAd()</c> returns true, returns the index of the ad group in the period
            currently being played.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.CurrentAdIndexInAdGroup">
            <summary>If <c>#isPlayingAd()</c> returns true, returns the index of the ad in its ad group.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.CurrentMediaItemIndex">
            <summary>Returns the index of the current <c>MediaItem</c> in the <c>#getCurrentTimeline()
            timeline</c>, or the prospective index if the <c>#getCurrentTimeline() current timeline</c> is
            empty.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.CurrentPeriodIndex">
            <summary>Returns the index of the period currently being played.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.CurrentPosition">
            <summary>Returns the playback position in the current content or ad, in milliseconds, or the prospective
            position in milliseconds if the <c>#getCurrentTimeline() current timeline</c> is empty.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.CurrentTimeline">
            <summary>Returns the current <c>Timeline</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.CurrentTracks">
            <summary>Returns the current tracks.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.DeviceInfo">
            <summary>Gets the device information.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.DeviceMuted">
            <summary>Gets whether the device is muted or not. -or- Sets the mute state of the device.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.DeviceVolume">
            <summary>Gets the current volume of the device. -or- Sets the volume of the device.</summary>
            <param name="volume">The volume to set.</param>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.Duration">
            <summary>Returns the duration of the current content or ad in milliseconds, or <c>C#TIME_UNSET</c> if
            the duration is not known.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.IsLoading">
            <summary>Whether the player is currently loading the source.</summary>
            <returns>Whether the player is currently loading the source.</returns>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.IsPlayingAd">
            <summary>Returns whether the player is currently playing an ad.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.MaxSeekToPreviousPosition">
            <summary>Returns the maximum position for which <c>#seekToPrevious()</c> seeks to the previous <c>MediaItem</c>, in milliseconds.</summary>
            <returns>The maximum seek to previous position, in milliseconds.</returns>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.MediaMetadata">
            <summary>Returns the current combined <c>MediaMetadata</c>, or <c>MediaMetadata#EMPTY</c> if not
            supported.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.PlayWhenReady">
            <summary>Whether playback will proceed when <c>#getPlaybackState()</c> == <c>#STATE_READY</c>. -or- Sets whether playback should proceed when <c>#getPlaybackState()</c> == <c>#STATE_READY</c>.</summary>
            <returns>Whether playback will proceed when ready.</returns>
            <param name="playWhenReady">Whether playback should proceed when ready.</param>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.PlaybackParameters">
            <summary>Returns the currently active playback parameters. -or- Attempts to set the playback parameters.</summary>
            <param name="playbackParameters">The playback parameters.</param>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.PlaybackState">
            <summary>Returns the current <c>State playback state</c> of the player.</summary>
            <returns>The current <c>State playback state</c>.</returns>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.PlaybackSuppressionReason">
            <summary>Returns the reason why playback is suppressed even though <c>#getPlayWhenReady()</c> is <c>true</c>, or <c>#PLAYBACK_SUPPRESSION_REASON_NONE</c> if playback is not suppressed.</summary>
            <returns>The current <c>PlaybackSuppressionReason playback suppression reason</c>.</returns>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.PlayerError">
            <summary>Returns the error that caused playback to fail.</summary>
            <returns>The error, or <c>null</c>.</returns>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.PlaylistMetadata">
            <summary>Returns the playlist <c>MediaMetadata</c>, as set by <c>#setPlaylistMetadata(MediaMetadata)</c>, or <c>MediaMetadata#EMPTY</c> if not supported. -or- Sets the playlist <c>MediaMetadata</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.RepeatMode">
            <summary>Returns the current <c>RepeatMode</c> used for playback. -or- Sets the <c>RepeatMode</c> to be used for playback.</summary>
            <returns>The current repeat mode.</returns>
            <param name="repeatMode">The repeat mode.</param>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.SeekBackIncrement">
            <summary>Returns the <c>#seekBack()</c> increment.</summary>
            <returns>The seek back increment, in milliseconds.</returns>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.SeekForwardIncrement">
            <summary>Returns the <c>#seekForward()</c> increment.</summary>
            <returns>The seek forward increment, in milliseconds.</returns>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.ShuffleModeEnabled">
            <summary>Returns whether shuffling of media items is enabled. -or- Sets whether shuffling of media items is enabled.</summary>
            <param name="shuffleModeEnabled">Whether shuffling is enabled.</param>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.TotalBufferedDuration">
            <summary>Returns an estimate of the total buffered duration from the current position, in milliseconds.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.TrackSelectionParameters">
            <summary>Sets the parameters constraining the track selection.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.VideoSize">
            <summary>Gets the size of the video.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.BasePlayerInvoker.Volume">
            <summary>Returns the audio volume, with 0 being silence and 1 being unity gain (signal unchanged). -or- Sets the audio volume, valid values are between 0 (silence) and 1 (unity gain, signal
            unchanged), inclusive.</summary>
            <returns>The linear gain applied to all audio channels.</returns>
            <param name="volume">Linear output gain to apply to all audio channels.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayerInvoker.ClearVideoSurface">
            <summary>Clears any <c>Surface</c>, <c>SurfaceHolder</c>, <c>SurfaceView</c> or <c>TextureView</c>
            currently set on the player.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayerInvoker.DecreaseDeviceVolume">
            <summary>Decreases the volume of the device.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayerInvoker.IncreaseDeviceVolume">
            <summary>Increases the volume of the device.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayerInvoker.MoveMediaItems(System.Int32,System.Int32,System.Int32)">
            <param name="fromIndex">The start of the range to move.</param>
            <param name="toIndex">The first item not to be included in the range (exclusive).</param>
            <param name="newIndex">The new index of the first media item of the range. If the new index is larger
                than the size of the remaining playlist after removing the range, the range is moved to the
                end of the playlist.</param>
            <summary>Moves the media item range to the new index.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayerInvoker.Prepare">
            <summary>Prepares the player.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayerInvoker.Release">
            <summary>Releases the player.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayerInvoker.RemoveMediaItems(System.Int32,System.Int32)">
            <param name="fromIndex">The index at which to start removing media items.</param>
            <param name="toIndex">The index of the first item to be kept (exclusive). If the index is larger than
                the size of the playlist, media items to the end of the playlist are removed.</param>
            <summary>Removes a range of media items from the playlist.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayerInvoker.SeekTo(System.Int32,System.Int64)">
            <param name="mediaItemIndex">The index of the <c>MediaItem</c>.</param>
            <param name="positionMs">The seek position in the specified <c>MediaItem</c>, or <c>C#TIME_UNSET</c>
                to seek to the media item's default position.</param>
            <summary>Seeks to a position specified in milliseconds in the specified <c>MediaItem</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.BasePlayerInvoker.Stop">
            <summary>Stops playback without resetting the playlist.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.BundleListRetriever">
            <summary>A <c>Binder</c> to transfer a list of <c>Bundle Bundles</c> across processes by splitting the
            list into multiple transactions.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.C">
            <summary>Defines constants used by the library.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.AllowCaptureByAll">
            <summary>See <c>android.media.AudioAttributes#ALLOW_CAPTURE_BY_ALL</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.AllowCaptureByNone">
            <summary>See <c>android.media.AudioAttributes#ALLOW_CAPTURE_BY_NONE</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.AllowCaptureBySystem">
            <summary>See <c>android.media.AudioAttributes#ALLOW_CAPTURE_BY_SYSTEM</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.AudioContentTypeMovie">
            <summary>See <c>AudioAttributes#CONTENT_TYPE_MOVIE</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.AudioContentTypeMusic">
            <summary>See <c>AudioAttributes#CONTENT_TYPE_MUSIC</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.AudioContentTypeSonification">
            <summary>See <c>AudioAttributes#CONTENT_TYPE_SONIFICATION</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.AudioContentTypeSpeech">
            <summary>See <c>AudioAttributes#CONTENT_TYPE_SPEECH</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.AudioContentTypeUnknown">
            <summary>See <c>AudioAttributes#CONTENT_TYPE_UNKNOWN</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.AudioSessionIdUnset">
            <summary>Represents an unset <c>android.media.AudioTrack</c> session identifier.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.BitsPerByte">
            <summary>The number of bits per byte.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.BufferFlagDecodeOnly">
            <summary>Indicates that a buffer should be decoded but not rendered.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.BufferFlagEncrypted">
            <summary>Indicates that a buffer is (at least partially) encrypted.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.BufferFlagEndOfStream">
            <summary>Flag for empty buffers that signal that the end of the stream was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.BufferFlagFirstSample">
            <summary>Indicates that a buffer is known to contain the first media sample of the stream.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.BufferFlagHasSupplementalData">
            <summary>Indicates that a buffer has supplemental data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.BufferFlagKeyFrame">
            <summary>Indicates that a buffer holds a synchronization sample.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.BufferFlagLastSample">
            <summary>Indicates that a buffer is known to contain the last media sample of the stream.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.BytesPerFloat">
            <summary>The number of bytes per float.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.CENCTYPECbc1">
            <summary>"cbc1" scheme type name as defined in ISO/IEC 23001-7:2016.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.CENCTYPECbcs">
            <summary>"cbcs" scheme type name as defined in ISO/IEC 23001-7:2016.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.CENCTYPECenc">
            <summary>"cenc" scheme type name as defined in ISO/IEC 23001-7:2016.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.CENCTYPECens">
            <summary>"cens" scheme type name as defined in ISO/IEC 23001-7:2016.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.C.ClearkeyUuid">
            <summary>UUID for the ClearKey DRM scheme.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.C.CommonPsshUuid">
            <summary>UUID for the W3C <see href="https://w3c.github.io/encrypted-media/format-registry/initdata/cenc.html">Common PSSH
            box</see>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ContentTypeDash">
            <summary>Value representing a DASH manifest.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ContentTypeHls">
            <summary>Value representing an HLS manifest.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ContentTypeOther">
            <summary>Value representing files other than DASH, HLS or Smooth Streaming manifests, or RTSP URIs.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ContentTypeRtsp">
            <summary>Value representing an RTSP stream.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ContentTypeSs">
            <summary>Value representing a Smooth Streaming manifest.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.CryptoTypeCustomBase">
            <summary>Applications or extensions may define custom <c>CRYPTO_TYPE_*</c> constants greater than or
            equal to this value.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.CryptoTypeFramework">
            <summary>Framework crypto in which a <c>MediaCodec</c> is configured with a <c>MediaCrypto</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.CryptoTypeNone">
            <summary>No crypto.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.CryptoTypeUnsupported">
            <summary>An unsupported crypto type.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.DataTypeAd">
            <summary>A data type constant for ads loader data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.DataTypeCustomBase">
            <summary>Applications or extensions may define custom <c>DATA_TYPE_*</c> constants greater than or
            equal to this value.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.DataTypeDrm">
            <summary>A data type constant for drm or encryption data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.DataTypeManifest">
            <summary>A data type constant for a manifest file.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.DataTypeMedia">
            <summary>A data type constant for media, typically containing media samples.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.DataTypeMediaInitialization">
            <summary>A data type constant for media, typically containing only initialization data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.DataTypeMediaProgressiveLive">
            <summary>A data type constant for live progressive media streams, typically containing media samples.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.DataTypeTimeSynchronization">
            <summary>A data type constant for time synchronization data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.DataTypeUnknown">
            <summary>A data type constant for data of unknown or unspecified type.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.DefaultBufferSegmentSize">
            <summary>A default size in bytes for an individual allocation that forms part of a larger buffer.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.DefaultMaxSeekToPreviousPositionMs">
            <summary>A default maximum position for which a seek to previous will seek to the previous window, in
            milliseconds.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.DefaultSeekBackIncrementMs">
            <summary>A default seek back increment, in milliseconds.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.DefaultSeekForwardIncrementMs">
            <summary>A default seek forward increment, in milliseconds.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.EncodingAacErBsac">
            <summary>AAC Error Resilient Bit-Sliced Arithmetic Coding.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.EncodingPcm16bitBigEndian">
            <summary>Like <c>#ENCODING_PCM_16BIT</c>, but with the bytes in big endian order.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.EncodingPcm24bit">
            <summary>PCM encoding with 24 bits per sample.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.EncodingPcm32bit">
            <summary>PCM encoding with 32 bits per sample.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.FormatExceedsCapabilities">
            <summary>The <c>Renderer</c> is capable of rendering formats with the same MIME type, but the
            properties of the format exceed the renderer's capabilities.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.FormatHandled">
            <summary>The <c>Renderer</c> is capable of rendering the format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.FormatUnsupportedDrm">
            <summary>The <c>Renderer</c> is capable of rendering formats with the same MIME type, but is not
            capable of rendering the format because the format's drm protection is not supported.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.FormatUnsupportedSubtype">
            <summary>The <c>Renderer</c> is a general purpose renderer for formats of the same top-level type, but
            is not capable of rendering the format or any other format with the same MIME type because the
            sub-type is not supported.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.FormatUnsupportedType">
            <summary>The <c>Renderer</c> is not capable of rendering the format, either because it does not support
            the format's top-level type, or because it's a specialized renderer for a different MIME type.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.IndexUnset">
            <summary>Represents an unset or unknown index.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.LanguageUndetermined">
            <summary>Represents an undetermined language as an ISO 639-2 language code.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.LengthUnset">
            <summary>Represents an unset or unknown length.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.MicrosPerSecond">
            <summary>The number of microseconds in one second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.MillisPerSecond">
            <summary>The number of milliseconds in one second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.NanosPerSecond">
            <summary>The number of nanoseconds in one second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.NetworkType2g">
            <summary>Network type for a 2G cellular connection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.NetworkType3g">
            <summary>Network type for a 3G cellular connection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.NetworkType4g">
            <summary>Network type for a 4G cellular connection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.NetworkType5gNsa">
            <summary>Network type for a 5G non-stand-alone (NSA) cellular connection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.NetworkType5gSa">
            <summary>Network type for a 5G stand-alone (SA) cellular connection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.NetworkTypeCellularUnknown">
            <summary>Network type for cellular connections which cannot be mapped to one of <c>#NETWORK_TYPE_2G</c>, <c>#NETWORK_TYPE_3G</c>, or <c>#NETWORK_TYPE_4G</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.NetworkTypeEthernet">
            <summary>Network type for an Ethernet connection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.NetworkTypeOffline">
            <summary>No network connection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.NetworkTypeOther">
            <summary>Network type for other connections which are not Wifi or cellular (e.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.NetworkTypeUnknown">
            <summary>Unknown network type.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.NetworkTypeWifi">
            <summary>Network type for a Wifi connection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.PercentageUnset">
            <summary>Represents an unset or unknown percentage.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.C.PlayreadyUuid">
            <summary>UUID for the PlayReady DRM scheme.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.PositionUnset">
            <summary>Represents an unset or unknown position.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.PriorityDownload">
            <summary>Priority for media downloading.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.PriorityPlayback">
            <summary>Priority for media playback.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ProjectionCubemap">
            <summary>Cube map projection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ProjectionEquirectangular">
            <summary>Equirectangular spherical projection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ProjectionMesh">
            <summary>3-D mesh projection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ProjectionRectangular">
            <summary>Conventional rectangular projection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RateUnset">
            <summary>Represents an unset or unknown rate.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RateUnsetInt">
            <summary>Represents an unset or unknown integer rate.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ResultBufferRead">
            <summary>A return value for methods where a buffer was read.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ResultEndOfInput">
            <summary>A return value for methods where the end of an input was encountered.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ResultFormatRead">
            <summary>A return value for methods where a format was read.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ResultMaxLengthExceeded">
            <summary>A return value for methods where the length of parsed data exceeds the maximum length allowed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.ResultNothingRead">
            <summary>A return value for methods where nothing was read.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagAlternate">
            <summary>Indicates an alternate track.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagCaption">
            <summary>Indicates the track contains captions.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagCommentary">
            <summary>Indicates the track contains commentary, for example from the director.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagDescribesMusicAndSound">
            <summary>Indicates the track contains a textual description of music and sound.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagDescribesVideo">
            <summary>Indicates the track contains an audio or textual description of a video track.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagDub">
            <summary>Indicates the track is in a different language from the original, for example dubbed audio or
            translated captions.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagEasyToRead">
            <summary>Indicates the track contains a text that has been edited for ease of reading.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagEmergency">
            <summary>Indicates the track contains information about a current emergency.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagEnhancedDialogIntelligibility">
            <summary>Indicates the track is designed for improved intelligibility of dialogue.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagMain">
            <summary>Indicates a main track.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagSign">
            <summary>Indicates the track contains a visual sign-language interpretation of an audio track.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagSubtitle">
            <summary>Indicates the track contains subtitles.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagSupplementary">
            <summary>Indicates a supplementary track, meaning the track has lower importance than the main track(s).</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagTranscribesDialog">
            <summary>Indicates the track contains a transcription of spoken dialog.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.RoleFlagTrickPlay">
            <summary>Indicates the track is intended for trick play.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.SansSerifName">
            <summary>The name of the sans-serif font family.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.SelectionFlagAutoselect">
            <summary>Indicates that the player may choose to play the track in absence of an explicit user
            preference.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.SelectionFlagDefault">
            <summary>Indicates that the track should be selected if user preferences do not state otherwise.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.SelectionFlagForced">
            <summary>Indicates that the track should be selected if its language matches the language of the
            selected audio track and user preferences do not state otherwise.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.SelectionReasonAdaptive">
            <summary>A selection reason constant for an adaptive track selection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.SelectionReasonCustomBase">
            <summary>Applications or extensions may define custom <c>SELECTION_REASON_*</c> constants greater than
            or equal to this value.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.SelectionReasonInitial">
            <summary>A selection reason constant for an initial track selection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.SelectionReasonManual">
            <summary>A selection reason constant for an manual (i.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.SelectionReasonTrickPlay">
            <summary>A selection reason constant for a trick play track selection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.SelectionReasonUnknown">
            <summary>A selection reason constant for selections whose reasons are unknown or unspecified.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.SerifName">
            <summary>The name of the serif font family.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.SsaiScheme">
            <summary>The <c>Uri#getScheme() URI scheme</c> used for content with server side ad insertion.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.StereoModeLeftRight">
            <summary>Indicates Left-Right stereo layout, used with 360/3D/VR videos.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.StereoModeMono">
            <summary>Indicates Monoscopic stereo layout, used with 360/3D/VR videos.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.StereoModeStereoMesh">
            <summary>Indicates a stereo layout where the left and right eyes have separate meshes, used with
            360/3D/VR videos.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.StereoModeTopBottom">
            <summary>Indicates Top-Bottom stereo layout, used with 360/3D/VR videos.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.StreamTypeDefault">
            <summary>The default stream type used by audio renderers.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.TimeEndOfSource">
            <summary>Special constant representing a time corresponding to the end of a source.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.TimeUnset">
            <summary>Special constant representing an unset or unknown time or duration.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.TrackTypeAudio">
            <summary>A type constant for audio tracks.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.TrackTypeCameraMotion">
            <summary>A type constant for camera motion tracks.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.TrackTypeCustomBase">
            <summary>Applications or extensions may define custom <c>TRACK_TYPE_*</c> constants greater than or
            equal to this value.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.TrackTypeDefault">
            <summary>A type constant for tracks of some default type, where the type itself is unknown.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.TrackTypeImage">
            <summary>A type constant for image tracks.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.TrackTypeMetadata">
            <summary>A type constant for metadata tracks.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.TrackTypeNone">
            <summary>A type constant for a fake or empty track.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.TrackTypeText">
            <summary>A type constant for text tracks.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.TrackTypeUnknown">
            <summary>A type constant for tracks of unknown type.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.TrackTypeVideo">
            <summary>A type constant for video tracks.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.C.UuidNil">
            <summary>The Nil UUID as defined by <see href="https://tools.ietf.org/html/rfc4122#section-4.1.7">RFC4122</see>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.VideoChangeFrameRateStrategyOff">
            <summary>Strategy to never call <c>Surface#setFrameRate</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.VideoChangeFrameRateStrategyOnlyIfSeamless">
            <summary>Strategy to call <c>Surface#setFrameRate</c> with <c>Surface#CHANGE_FRAME_RATE_ONLY_IF_SEAMLESS</c> when the output frame rate is known.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.VideoOutputModeNone">
            <summary>Video decoder output mode is not set.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.VideoOutputModeSurfaceYuv">
            <summary>Video decoder output mode that renders 4:2:0 YUV planes directly to a surface.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.VideoOutputModeYuv">
            <summary>Video decoder output mode that outputs raw 4:2:0 YUV planes.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.VideoScalingModeDefault">
            <summary>A default video scaling mode for <c>MediaCodec</c>-based renderers.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.VideoScalingModeScaleToFit">
            <summary>See <c>MediaCodec#VIDEO_SCALING_MODE_SCALE_TO_FIT</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.VideoScalingModeScaleToFitWithCropping">
            <summary>See <c>MediaCodec#VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.WakeModeLocal">
            <summary>A wake mode that will cause the player to hold a <c>android.os.PowerManager.WakeLock</c>
            during playback.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.WakeModeNetwork">
            <summary>A wake mode that will cause the player to hold a <c>android.os.PowerManager.WakeLock</c> and a
            <c>android.net.wifi.WifiManager.WifiLock</c> during playback.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.C.WakeModeNone">
            <summary>A wake mode that will not cause the player to hold any locks.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.C.WidevineUuid">
            <summary>UUID for the Widevine DRM scheme.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.DeviceInfo">
            <summary>Information about the playback device.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.DeviceInfo.MaxVolume">
            <summary>The maximum volume that the device supports.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.DeviceInfo.MinVolume">
            <summary>The minimum volume that the device supports.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.DeviceInfo.PlaybackType">
            <summary>The type of playback.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.DeviceInfo.PlaybackTypeLocal">
            <summary>Playback happens on the local device (e.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.DeviceInfo.PlaybackTypeRemote">
            <summary>Playback happens outside of the device (e.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.DeviceInfo.Unknown">
            <summary>Unknown DeviceInfo.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.DeviceInfo.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Creates device information.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Drm.DrmInitData">
            <summary>Initialization data for one or more DRM schemes.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Drm.DrmInitData.SchemeDataCount">
            <summary>Number of <c>SchemeData</c>s.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Drm.DrmInitData.SchemeType">
            <summary>The protection scheme type, or null if not applicable or unknown.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Drm.DrmInitData.#ctor(System.String,System.Collections.Generic.IList{Com.Google.Android.Exoplayer2.Drm.DrmInitData.SchemeData})">
            <param name="schemeType">See <c>#schemeType</c>.</param>
            <param name="schemeDatas">Scheme initialization data for possibly multiple DRM schemes.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Drm.DrmInitData.#ctor(System.Collections.Generic.IList{Com.Google.Android.Exoplayer2.Drm.DrmInitData.SchemeData})">
            <param name="schemeDatas">Scheme initialization data for possibly multiple DRM schemes.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Drm.DrmInitData.CopyWithSchemeType(System.String)">
            <param name="schemeType">A protection scheme type. May be null.</param>
            <summary>Returns a copy with the specified protection scheme type.</summary>
            <returns>A copy with the specified protection scheme type.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Drm.DrmInitData.CreateSessionCreationData(Com.Google.Android.Exoplayer2.Drm.DrmInitData,Com.Google.Android.Exoplayer2.Drm.DrmInitData)">
            <param name="manifestData">DRM session acquisition data obtained from the manifest.</param>
            <param name="mediaData">DRM session acquisition data obtained from the media.</param>
            <summary>Merges <c>DrmInitData</c> obtained from a media manifest and a media stream.</summary>
            <returns>A <c>DrmInitData</c> obtained from merging a media manifest and a media stream.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Drm.DrmInitData.Merge(Com.Google.Android.Exoplayer2.Drm.DrmInitData)">
            <param name="drmInitData">The instance to merge.</param>
            <summary>Returns an instance containing the <c>#schemeDatas</c> from both this and <c>other</c>.</summary>
            <returns>The merged result.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.ExoPlayerLibraryInfo">
            <summary>Information about the media libraries.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ExoPlayerLibraryInfo.AssertionsEnabled">
            <summary>Whether the library was compiled with <c>Assertions</c> checks enabled.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ExoPlayerLibraryInfo.Tag">
            <summary>A tag to use when logging library information.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ExoPlayerLibraryInfo.TraceEnabled">
            <summary>Whether the library was compiled with <c>TraceUtil</c> trace enabled.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ExoPlayerLibraryInfo.Version">
            <summary>The version of the library expressed as a string, for example "1.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ExoPlayerLibraryInfo.VersionInt">
            <summary>The version of the library expressed as an integer, for example 1002003.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ExoPlayerLibraryInfo.VersionSlashy">
            <summary>The version of the library expressed as <c>TAG + "/" + VERSION</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ExoPlayerLibraryInfo.RegisterModule(System.String)">
            <param name="name">The name of the module being registered.</param>
            <summary>Registers a module to be returned in the <c>#registeredModules()</c> string.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ExoPlayerLibraryInfo.RegisteredModules">
            <summary>Returns a string consisting of registered module names separated by ", ".</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Format">
            <summary>Represents a media format.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.AccessibilityChannel">
            <summary>The Accessibility channel, or <c>#NO_VALUE</c> if not known or applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.AverageBitrate">
            <summary>The average bitrate in bits per second, or <c>#NO_VALUE</c> if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.Bitrate">
            <summary>The bitrate in bits per second.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.ChannelCount">
            <summary>The number of audio channels, or <c>#NO_VALUE</c> if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.Codecs">
            <summary>Codecs of the format as described in RFC 6381, or null if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.ColorInfo">
            <summary>The color metadata associated with the video, or null if not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.ContainerMimeType">
            <summary>The mime type of the container, or null if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.CryptoType">
            <summary>The type of crypto that must be used to decode samples associated with this format, or <c>C#CRYPTO_TYPE_NONE</c> if the content is not encrypted.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.DrmInitData">
            <summary>DRM initialization data if the stream is protected, or null otherwise.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.EncoderDelay">
            <summary>The number of frames to trim from the start of the decoded audio stream, or 0 if not
            applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.EncoderPadding">
            <summary>The number of frames to trim from the end of the decoded audio stream, or 0 if not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.FrameRate">
            <summary>The frame rate in frames per second, or <c>#NO_VALUE</c> if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.Height">
            <summary>The height of the video in pixels, or <c>#NO_VALUE</c> if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.Id">
            <summary>An identifier for the format, or null if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.InitializationData">
            <summary>Initialization data that must be provided to the decoder.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.Label">
            <summary>The human readable label, or null if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.Language">
            <summary>The language as an IETF BCP 47 conformant tag, or null if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.MaxInputSize">
            <summary>The maximum size of a buffer of data (typically one sample), or <c>#NO_VALUE</c> if unknown or
            not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.Metadata">
            <summary>Metadata, or null if unknown or not applicable.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Format.NoValue">
            <summary>A value for various fields to indicate that the field's value is unknown or not applicable.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Format.OffsetSampleRelative">
            <summary>A value for <c>#subsampleOffsetUs</c> to indicate that subsample timestamps are relative to
            the timestamps of their parent samples.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.PcmEncoding">
            <summary>The <c>C.PcmEncoding</c> for PCM audio.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.PeakBitrate">
            <summary>The peak bitrate in bits per second, or <c>#NO_VALUE</c> if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.PixelWidthHeightRatio">
            <summary>The width to height ratio of pixels in the video, or 1.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.ProjectionData">
            <summary>The projection data for 360/VR video, or null if not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.RoleFlags">
            <summary>Track role flags.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.RotationDegrees">
            <summary>The clockwise rotation that should be applied to the video for it to be rendered in the correct
            orientation, or 0 if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.SampleMimeType">
            <summary>The sample mime type, or null if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.SampleRate">
            <summary>The audio sampling rate in Hz, or <c>#NO_VALUE</c> if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.SelectionFlags">
            <summary>Track selection flags.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.StereoMode">
            <summary>The stereo layout for 360/3D/VR video, or <c>#NO_VALUE</c> if not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.SubsampleOffsetUs">
            <summary>For samples that contain subsamples, this is an offset that should be added to subsample
            timestamps.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.Width">
            <summary>The width of the video in pixels, or <c>#NO_VALUE</c> if unknown or not applicable.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Format.PixelCount">
            <summary>Returns the number of pixels if this is a video format whose <c>#width</c> and <c>#height</c>
            are known, or <c>#NO_VALUE</c> otherwise</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Format.CopyWithCryptoType(System.Int32)">
            <summary>Returns a copy of this format with the specified <c>#cryptoType</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Format.InitializationDataEquals(Com.Google.Android.Exoplayer2.Format)">
            <param name="other">The other format whose <c>#initializationData</c> is being compared.</param>
            <summary>Returns whether the <c>#initializationData</c>s belonging to this format and <c>other</c> are
            equal.</summary>
            <returns>Whether the <c>#initializationData</c>s belonging to this format and <c>other</c> are
                equal.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Format.ToLogString(Com.Google.Android.Exoplayer2.Format)">
            <summary>Returns a prettier <c>String</c> than <c>#toString()</c>, intended for logging.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.ForwardingPlayer">
            <summary>A <c>Player</c> that forwards operations to another <c>Player</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandAdjustDeviceVolume">
            <summary>Command to increase and decrease the device volume and mute it.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandChangeMediaItems">
            <summary>Command to change the <c>MediaItem MediaItems</c> in the playlist.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandGetAudioAttributes">
            <summary>Command to get the player current <c>AudioAttributes</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandGetCurrentMediaItem">
            <summary>Command to get the currently playing <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandGetDeviceVolume">
            <summary>Command to get the device volume and whether it is muted.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandGetMediaItemsMetadata">
            <summary>Command to get the <c>MediaItem MediaItems</c> metadata.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandGetText">
            <summary>Command to get the text that should currently be displayed by the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandGetTimeline">
            <summary>Command to get the information about the current timeline.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandGetTracks">
            <summary>Command to get details of the current track selection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandGetVolume">
            <summary>Command to get the player volume.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandInvalid">
            <summary>Represents an invalid <c>Command</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandPlayPause">
            <summary>Command to start, pause or resume playback.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandPrepare">
            <summary>Command to prepare the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSeekBack">
            <summary>Command to seek back by a fixed increment into the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSeekForward">
            <summary>Command to seek forward by a fixed increment into the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSeekInCurrentMediaItem">
            <summary>Command to seek anywhere into the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSeekToDefaultPosition">
            <summary>Command to seek to the default position of the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSeekToMediaItem">
            <summary>Command to seek anywhere in any <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSeekToNext">
            <summary>Command to seek to a later position in the current or next <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSeekToNextMediaItem">
            <summary>Command to seek to the default position of the next <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSeekToPrevious">
            <summary>Command to seek to an earlier position in the current or previous <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSeekToPreviousMediaItem">
            <summary>Command to seek to the default position of the previous <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSetDeviceVolume">
            <summary>Command to set the device volume and mute it.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSetMediaItem">
            <summary>Command to set a <c>MediaItem MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSetMediaItemsMetadata">
            <summary>Command to set the <c>MediaItem MediaItems</c> metadata.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSetRepeatMode">
            <summary>Command to set the repeat mode.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSetShuffleMode">
            <summary>Command to enable shuffling.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSetSpeedAndPitch">
            <summary>Command to set the playback speed and pitch.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSetTrackSelectionParameters">
            <summary>Command to set the player's track selection parameters.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSetVideoSurface">
            <summary>Command to set and clear the surface on which to render the video.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandSetVolume">
            <summary>Command to set the player volume.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.CommandStop">
            <summary>Command to stop playback or release the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.DiscontinuityReasonAutoTransition">
            <summary>Automatic playback transition from one period in the timeline to the next.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.DiscontinuityReasonInternal">
            <summary>Discontinuity introduced internally (e.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.DiscontinuityReasonRemove">
            <summary>Discontinuity caused by the removal of the current period from the <c>Timeline</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.DiscontinuityReasonSeek">
            <summary>Seek within the current period or to another period.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.DiscontinuityReasonSeekAdjustment">
            <summary>Seek adjustment due to being unable to seek to the requested position or because the seek was
            permitted to be inexact.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.DiscontinuityReasonSkip">
            <summary>Discontinuity introduced by a skipped period (for instance a skipped ad).</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventAudioAttributesChanged">
            <summary>
              <c>#getAudioAttributes()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventAudioSessionId">
            <summary>The audio session id was set.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventAvailableCommandsChanged">
            <summary>
              <c>#isCommandAvailable(int)</c> changed for at least one <c>Command</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventCues">
            <summary>
              <c>#getCurrentCues()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventDeviceInfoChanged">
            <summary>
              <c>#getDeviceInfo()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventDeviceVolumeChanged">
            <summary>
              <c>#getDeviceVolume()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventIsPlayingChanged">
            <summary>
              <c>#isPlaying()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventMaxSeekToPreviousPositionChanged">
            <summary>
              <c>#getMaxSeekToPreviousPosition()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventMediaItemTransition">
            <summary>
              <c>#getCurrentMediaItem()</c> changed or the player started repeating the current item.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventMediaMetadataChanged">
            <summary>
              <c>#getMediaMetadata()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventMetadata">
            <summary>Metadata associated with the current playback time changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventPlaybackParametersChanged">
            <summary>
              <c>#getPlaybackParameters()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventPlaybackStateChanged">
            <summary>
              <c>#getPlaybackState()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventPlaybackSuppressionReasonChanged">
            <summary>
              <c>#getPlaybackSuppressionReason()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventPlayerError">
            <summary>
              <c>#getPlayerError()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventPlaylistMetadataChanged">
            <summary>
              <c>#getPlaylistMetadata()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventPlayWhenReadyChanged">
            <summary>
              <c>#getPlayWhenReady()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventPositionDiscontinuity">
            <summary>A position discontinuity occurred.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventRenderedFirstFrame">
            <summary>A frame is rendered for the first time since setting the surface, or since the renderer was
            reset, or since the stream being rendered was changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventRepeatModeChanged">
            <summary>
              <c>#getRepeatMode()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventSeekBackIncrementChanged">
            <summary>
              <c>#getSeekBackIncrement()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventSeekForwardIncrementChanged">
            <summary>
              <c>#getSeekForwardIncrement()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventShuffleModeEnabledChanged">
            <summary>
              <c>#getShuffleModeEnabled()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventSkipSilenceEnabledChanged">
            <summary>Skipping silences in the audio stream is enabled or disabled.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventSurfaceSizeChanged">
            <summary>The size of the surface onto which the video is being rendered changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventTimelineChanged">
            <summary>
              <c>#getCurrentTimeline()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventTracksChanged">
            <summary>
              <c>#getCurrentTracks()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventTrackSelectionParametersChanged">
            <summary>
              <c>#getTrackSelectionParameters()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventVideoSizeChanged">
            <summary>
              <c>#getVideoSize()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.EventVolumeChanged">
            <summary>
              <c>#getVolume()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.MediaItemTransitionReasonAuto">
            <summary>Playback has automatically transitioned to the next media item.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.MediaItemTransitionReasonPlaylistChanged">
            <summary>The current media item has changed because of a change in the playlist.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.MediaItemTransitionReasonRepeat">
            <summary>The media item has been repeated.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.MediaItemTransitionReasonSeek">
            <summary>A seek to another media item has occurred.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.PlaybackSuppressionReasonNone">
            <summary>Playback is not suppressed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.PlaybackSuppressionReasonTransientAudioFocusLoss">
            <summary>Playback is suppressed due to transient audio focus loss.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.PlayWhenReadyChangeReasonAudioBecomingNoisy">
            <summary>Playback has been paused to avoid becoming noisy.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.PlayWhenReadyChangeReasonAudioFocusLoss">
            <summary>Playback has been paused because of a loss of audio focus.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.PlayWhenReadyChangeReasonEndOfMediaItem">
            <summary>Playback has been paused at the end of a media item.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.PlayWhenReadyChangeReasonRemote">
            <summary>Playback has been started or paused because of a remote change.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.PlayWhenReadyChangeReasonUserRequest">
            <summary>Playback has been started or paused by a call to <c>#setPlayWhenReady(boolean)</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.RepeatModeAll">
            <summary>Repeats the entire timeline infinitely.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.RepeatModeOff">
            <summary>Normal playback without repetition.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.RepeatModeOne">
            <summary>Repeats the currently playing <c>MediaItem</c> infinitely during ongoing playback.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.StateBuffering">
            <summary>The player is not able to immediately play the media, but is doing work toward being able to do
            so.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.StateEnded">
            <summary>The player has finished playing the media.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.StateIdle">
            <summary>The player is idle, meaning it holds only limited resources.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.StateReady">
            <summary>The player is able to immediately play from its current position.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.TimelineChangeReasonPlaylistChanged">
            <summary>Timeline changed as a result of a change of the playlist items or the order of the items.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.ForwardingPlayer.InterfaceConsts.TimelineChangeReasonSourceUpdate">
            <summary>Timeline changed as a result of a source update (e.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.#ctor(Com.Google.Android.Exoplayer2.IPlayer)">
            <summary>Creates a new instance that forwards all operations to <c>player</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.AudioAttributes">
            <summary>Calls <c>Player#getAudioAttributes()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.BufferedPercentage">
            <summary>Calls <c>Player#getBufferedPercentage()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.BufferedPosition">
            <summary>Calls <c>Player#getBufferedPosition()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.ContentBufferedPosition">
            <summary>Calls <c>Player#getContentBufferedPosition()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.ContentDuration">
            <summary>Calls <c>Player#getContentDuration()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.ContentPosition">
            <summary>Calls <c>Player#getContentPosition()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.CurrentAdGroupIndex">
            <summary>Calls <c>Player#getCurrentAdGroupIndex()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.CurrentAdIndexInAdGroup">
            <summary>Calls <c>Player#getCurrentAdIndexInAdGroup()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.CurrentCues">
            <summary>Calls <c>Player#getCurrentCues()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.CurrentLiveOffset">
            <summary>Calls <c>Player#getCurrentLiveOffset()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.CurrentManifest">
            <summary>Calls <c>Player#getCurrentManifest()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.CurrentMediaItem">
            <summary>Calls <c>Player#getCurrentMediaItem()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.CurrentMediaItemIndex">
            <summary>Calls <c>Player#getCurrentMediaItemIndex()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.CurrentPeriodIndex">
            <summary>Calls <c>Player#getCurrentPeriodIndex()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.CurrentPosition">
            <summary>Calls <c>Player#getCurrentPosition()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.CurrentTimeline">
            <summary>Calls <c>Player#getCurrentTimeline()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.CurrentTracks">
            <summary>Calls <c>Player#getCurrentTracks()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.CurrentWindowIndex">
            <summary>Calls <c>Player#getCurrentWindowIndex()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.DeviceInfo">
            <summary>Calls <c>Player#getDeviceInfo()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.DeviceMuted">
            <summary>Calls <c>Player#isDeviceMuted()</c> on the delegate and returns the result. -or- Calls <c>Player#setDeviceMuted(boolean)</c> on the delegate.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.DeviceVolume">
            <summary>Calls <c>Player#getDeviceVolume()</c> on the delegate and returns the result. -or- Calls <c>Player#setDeviceVolume(int)</c> on the delegate.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.Duration">
            <summary>Calls <c>Player#getDuration()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.HasNext">
            <summary>Calls <c>Player#hasNext()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.HasNextMediaItem">
            <summary>Calls <c>Player#hasNextMediaItem()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.HasNextWindow">
            <summary>Calls <c>Player#hasNextWindow()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.HasPrevious">
            <summary>Calls <c>Player#hasPrevious()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.HasPreviousMediaItem">
            <summary>Calls <c>Player#hasPreviousMediaItem()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.HasPreviousWindow">
            <summary>Calls <c>Player#hasPreviousWindow()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.IsCurrentMediaItemDynamic">
            <summary>Calls <c>Player#isCurrentMediaItemDynamic()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.IsCurrentMediaItemLive">
            <summary>Calls <c>Player#isCurrentMediaItemLive()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.IsCurrentMediaItemSeekable">
            <summary>Calls <c>Player#isCurrentMediaItemSeekable()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.IsCurrentWindowDynamic">
            <summary>Calls <c>Player#isCurrentWindowDynamic()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.IsCurrentWindowLive">
            <summary>Calls <c>Player#isCurrentWindowLive()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.IsCurrentWindowSeekable">
            <summary>Calls <c>Player#isCurrentWindowSeekable()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.IsLoading">
            <summary>Calls <c>Player#isLoading()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.IsPlaying">
            <summary>Calls <c>Player#isPlaying()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.IsPlayingAd">
            <summary>Calls <c>Player#isPlayingAd()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.MaxSeekToPreviousPosition">
            <summary>Calls <c>Player#getMaxSeekToPreviousPosition()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.MediaItemCount">
            <summary>Calls <c>Player#getMediaItemCount()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.MediaMetadata">
            <summary>Calls <c>Player#getMediaMetadata()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.NextMediaItemIndex">
            <summary>Calls <c>Player#getNextMediaItemIndex()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.NextWindowIndex">
            <summary>Calls <c>Player#getNextWindowIndex()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.PlayWhenReady">
            <summary>Calls <c>Player#getPlayWhenReady()</c> on the delegate and returns the result. -or- Calls <c>Player#setPlayWhenReady(boolean)</c> on the delegate.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.PlaybackParameters">
            <summary>Calls <c>Player#getPlaybackParameters()</c> on the delegate and returns the result. -or- Calls <c>Player#setPlaybackParameters(PlaybackParameters)</c> on the delegate.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.PlaybackState">
            <summary>Calls <c>Player#getPlaybackState()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.PlaybackSuppressionReason">
            <summary>Calls <c>Player#getPlaybackSuppressionReason()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.PlayerError">
            <summary>Calls <c>Player#getPlayerError()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.PlaylistMetadata">
            <summary>Calls <c>Player#getPlaylistMetadata()</c> on the delegate and returns the result. -or- Calls <c>Player#setPlaylistMetadata(MediaMetadata)</c> on the delegate.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.PreviousMediaItemIndex">
            <summary>Calls <c>Player#getPreviousMediaItemIndex()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.PreviousWindowIndex">
            <summary>Calls <c>Player#getPreviousWindowIndex()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.RepeatMode">
            <summary>Calls <c>Player#getRepeatMode()</c> on the delegate and returns the result. -or- Calls <c>Player#setRepeatMode(int)</c> on the delegate.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekBackIncrement">
            <summary>Calls <c>Player#getSeekBackIncrement()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekForwardIncrement">
            <summary>Calls <c>Player#getSeekForwardIncrement()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.ShuffleModeEnabled">
            <summary>Calls <c>Player#getShuffleModeEnabled()</c> on the delegate and returns the result. -or- Calls <c>Player#setShuffleModeEnabled(boolean)</c> on the delegate.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.TotalBufferedDuration">
            <summary>Calls <c>Player#getTotalBufferedDuration()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.TrackSelectionParameters">
            <summary>Calls <c>Player#getTrackSelectionParameters()</c> on the delegate and returns the result. -or- Calls <c>Player#setTrackSelectionParameters(TrackSelectionParameters)</c> on the delegate.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.VideoSize">
            <summary>Calls <c>Player#getVideoSize()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.Volume">
            <summary>Calls <c>Player#getVolume()</c> on the delegate and returns the result. -or- Calls <c>Player#setVolume(float)</c> on the delegate.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ForwardingPlayer.WrappedPlayer">
            <summary>Returns the <c>Player</c> to which operations are forwarded.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.AddMediaItem(Com.Google.Android.Exoplayer2.MediaItem)">
            <summary>Calls <c>Player#addMediaItem(MediaItem)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.AddMediaItem(System.Int32,Com.Google.Android.Exoplayer2.MediaItem)">
            <summary>Calls <c>Player#addMediaItem(int, MediaItem)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.AddMediaItems(System.Int32,System.Collections.Generic.IList{Com.Google.Android.Exoplayer2.MediaItem})">
            <summary>Calls <c>Player#addMediaItems(int, List)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.AddMediaItems(System.Collections.Generic.IList{Com.Google.Android.Exoplayer2.MediaItem})">
            <summary>Calls <c>Player#addMediaItems(List)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.CanAdvertiseSession">
            <summary>Calls <c>Player#canAdvertiseSession()</c> on the delegate and returns the result.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.ClearMediaItems">
            <summary>Calls <c>Player#clearMediaItems()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.ClearVideoSurface">
            <summary>Calls <c>Player#clearVideoSurface()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.DecreaseDeviceVolume">
            <summary>Calls <c>Player#decreaseDeviceVolume()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.GetMediaItemAt(System.Int32)">
            <summary>Calls <c>Player#getMediaItemAt(int)</c> on the delegate and returns the result.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.IncreaseDeviceVolume">
            <summary>Calls <c>Player#increaseDeviceVolume()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.IsCommandAvailable(System.Int32)">
            <summary>Calls <c>Player#isCommandAvailable(int)</c> on the delegate and returns the result.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.MoveMediaItem(System.Int32,System.Int32)">
            <summary>Calls <c>Player#moveMediaItem(int, int)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.MoveMediaItems(System.Int32,System.Int32,System.Int32)">
            <summary>Calls <c>Player#moveMediaItems(int, int, int)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.Next">
            <summary>Calls <c>Player#next()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.Pause">
            <summary>Calls <c>Player#pause()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.Play">
            <summary>Calls <c>Player#play()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.Prepare">
            <summary>Calls <c>Player#prepare()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.Previous">
            <summary>Calls <c>Player#previous()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.Release">
            <summary>Calls <c>Player#release()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.RemoveMediaItem(System.Int32)">
            <summary>Calls <c>Player#removeMediaItem(int)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.RemoveMediaItems(System.Int32,System.Int32)">
            <summary>Calls <c>Player#removeMediaItems(int, int)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekBack">
            <summary>Calls <c>Player#seekBack()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekForward">
            <summary>Calls <c>Player#seekForward()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekTo(System.Int32,System.Int64)">
            <summary>Calls <c>Player#seekTo(int, long)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekTo(System.Int64)">
            <summary>Calls <c>Player#seekTo(long)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekToDefaultPosition">
            <summary>Calls <c>Player#seekToDefaultPosition()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekToDefaultPosition(System.Int32)">
            <summary>Calls <c>Player#seekToDefaultPosition(int)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekToNext">
            <summary>Calls <c>Player#seekToNext()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekToNextMediaItem">
            <summary>Calls <c>Player#seekToNextMediaItem()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekToNextWindow">
            <summary>Calls <c>Player#seekToNextWindow()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekToPrevious">
            <summary>Calls <c>Player#seekToPrevious()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekToPreviousMediaItem">
            <summary>Calls <c>Player#seekToPreviousMediaItem()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SeekToPreviousWindow">
            <summary>Calls <c>Player#seekToPreviousWindow()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SetMediaItem(Com.Google.Android.Exoplayer2.MediaItem)">
            <summary>Calls <c>Player#setMediaItem(MediaItem)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SetMediaItem(Com.Google.Android.Exoplayer2.MediaItem,System.Boolean)">
            <summary>Calls <c>Player#setMediaItem(MediaItem, boolean)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SetMediaItem(Com.Google.Android.Exoplayer2.MediaItem,System.Int64)">
            <summary>Calls <c>Player#setMediaItem(MediaItem, long)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SetMediaItems(System.Collections.Generic.IList{Com.Google.Android.Exoplayer2.MediaItem})">
            <summary>Calls <c>Player#setMediaItems(List)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SetMediaItems(System.Collections.Generic.IList{Com.Google.Android.Exoplayer2.MediaItem},System.Int32,System.Int64)">
            <summary>Calls <c>Player#setMediaItems(List, int, long)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.SetPlaybackSpeed(System.Single)">
            <summary>Calls <c>Player#setPlaybackSpeed(float)</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.Stop">
            <summary>Calls <c>Player#stop()</c> on the delegate.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ForwardingPlayer.Stop(System.Boolean)">
            <summary>Calls <c>Player#stop(boolean)</c> on the delegate.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.HeartRating">
            <summary>A rating expressed as "heart" or "no heart".</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.HeartRating.#ctor">
            <summary>Creates a unrated instance.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.HeartRating.#ctor(System.Boolean)">
            <param name="isHeart">
              <c>true</c> for "heart", <c>false</c> for "no heart".</param>
            <summary>Creates a rated instance.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.HeartRating.IsHeart">
            <summary>Returns whether the rating is "heart".</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.IBundleable">
            <summary>Interface for classes whose instance can be stored in a <c>Bundle</c> by <c>#toBundle()</c> and
            can be restored from the <c>Bundle</c> by using the static <c>CREATOR</c> field that implements
            <c>Bundleable.Creator</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.IllegalSeekPositionException">
            <summary>Thrown when an attempt is made to seek to a position that does not exist in the player's <c>Timeline</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.IllegalSeekPositionException.PositionMs">
            <summary>The seek position in the specified window.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.IllegalSeekPositionException.Timeline">
            <summary>The <c>Timeline</c> in which the seek was attempted.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.IllegalSeekPositionException.WindowIndex">
            <summary>The index of the window being seeked to.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IllegalSeekPositionException.#ctor(Com.Google.Android.Exoplayer2.Timeline,System.Int32,System.Int64)">
            <param name="timeline">The <c>Timeline</c> in which the seek was attempted.</param>
            <param name="windowIndex">The index of the window being seeked to.</param>
            <param name="positionMs">The seek position in the specified window.</param>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandAdjustDeviceVolume">
            <summary>Command to increase and decrease the device volume and mute it.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandChangeMediaItems">
            <summary>Command to change the <c>MediaItem MediaItems</c> in the playlist.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandGetAudioAttributes">
            <summary>Command to get the player current <c>AudioAttributes</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandGetCurrentMediaItem">
            <summary>Command to get the currently playing <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandGetDeviceVolume">
            <summary>Command to get the device volume and whether it is muted.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandGetMediaItemsMetadata">
            <summary>Command to get the <c>MediaItem MediaItems</c> metadata.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandGetText">
            <summary>Command to get the text that should currently be displayed by the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandGetTimeline">
            <summary>Command to get the information about the current timeline.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandGetTracks">
            <summary>Command to get details of the current track selection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandGetVolume">
            <summary>Command to get the player volume.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandInvalid">
            <summary>Represents an invalid <c>Command</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandPlayPause">
            <summary>Command to start, pause or resume playback.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandPrepare">
            <summary>Command to prepare the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSeekBack">
            <summary>Command to seek back by a fixed increment into the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSeekForward">
            <summary>Command to seek forward by a fixed increment into the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSeekInCurrentMediaItem">
            <summary>Command to seek anywhere into the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSeekToDefaultPosition">
            <summary>Command to seek to the default position of the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSeekToMediaItem">
            <summary>Command to seek anywhere in any <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSeekToNext">
            <summary>Command to seek to a later position in the current or next <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSeekToNextMediaItem">
            <summary>Command to seek to the default position of the next <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSeekToPrevious">
            <summary>Command to seek to an earlier position in the current or previous <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSeekToPreviousMediaItem">
            <summary>Command to seek to the default position of the previous <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSetDeviceVolume">
            <summary>Command to set the device volume and mute it.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSetMediaItem">
            <summary>Command to set a <c>MediaItem MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSetMediaItemsMetadata">
            <summary>Command to set the <c>MediaItem MediaItems</c> metadata.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSetRepeatMode">
            <summary>Command to set the repeat mode.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSetShuffleMode">
            <summary>Command to enable shuffling.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSetSpeedAndPitch">
            <summary>Command to set the playback speed and pitch.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSetTrackSelectionParameters">
            <summary>Command to set the player's track selection parameters.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSetVideoSurface">
            <summary>Command to set and clear the surface on which to render the video.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandSetVolume">
            <summary>Command to set the player volume.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.CommandStop">
            <summary>Command to stop playback or release the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.DiscontinuityReasonAutoTransition">
            <summary>Automatic playback transition from one period in the timeline to the next.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.DiscontinuityReasonInternal">
            <summary>Discontinuity introduced internally (e.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.DiscontinuityReasonRemove">
            <summary>Discontinuity caused by the removal of the current period from the <c>Timeline</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.DiscontinuityReasonSeek">
            <summary>Seek within the current period or to another period.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.DiscontinuityReasonSeekAdjustment">
            <summary>Seek adjustment due to being unable to seek to the requested position or because the seek was
            permitted to be inexact.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.DiscontinuityReasonSkip">
            <summary>Discontinuity introduced by a skipped period (for instance a skipped ad).</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventAudioAttributesChanged">
            <summary>
              <c>#getAudioAttributes()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventAudioSessionId">
            <summary>The audio session id was set.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventAvailableCommandsChanged">
            <summary>
              <c>#isCommandAvailable(int)</c> changed for at least one <c>Command</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventCues">
            <summary>
              <c>#getCurrentCues()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventDeviceInfoChanged">
            <summary>
              <c>#getDeviceInfo()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventDeviceVolumeChanged">
            <summary>
              <c>#getDeviceVolume()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventIsPlayingChanged">
            <summary>
              <c>#isPlaying()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventMaxSeekToPreviousPositionChanged">
            <summary>
              <c>#getMaxSeekToPreviousPosition()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventMediaItemTransition">
            <summary>
              <c>#getCurrentMediaItem()</c> changed or the player started repeating the current item.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventMediaMetadataChanged">
            <summary>
              <c>#getMediaMetadata()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventMetadata">
            <summary>Metadata associated with the current playback time changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventPlaybackParametersChanged">
            <summary>
              <c>#getPlaybackParameters()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventPlaybackStateChanged">
            <summary>
              <c>#getPlaybackState()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventPlaybackSuppressionReasonChanged">
            <summary>
              <c>#getPlaybackSuppressionReason()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventPlayerError">
            <summary>
              <c>#getPlayerError()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventPlaylistMetadataChanged">
            <summary>
              <c>#getPlaylistMetadata()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventPlayWhenReadyChanged">
            <summary>
              <c>#getPlayWhenReady()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventPositionDiscontinuity">
            <summary>A position discontinuity occurred.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventRenderedFirstFrame">
            <summary>A frame is rendered for the first time since setting the surface, or since the renderer was
            reset, or since the stream being rendered was changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventRepeatModeChanged">
            <summary>
              <c>#getRepeatMode()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventSeekBackIncrementChanged">
            <summary>
              <c>#getSeekBackIncrement()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventSeekForwardIncrementChanged">
            <summary>
              <c>#getSeekForwardIncrement()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventShuffleModeEnabledChanged">
            <summary>
              <c>#getShuffleModeEnabled()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventSkipSilenceEnabledChanged">
            <summary>Skipping silences in the audio stream is enabled or disabled.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventSurfaceSizeChanged">
            <summary>The size of the surface onto which the video is being rendered changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventTimelineChanged">
            <summary>
              <c>#getCurrentTimeline()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventTracksChanged">
            <summary>
              <c>#getCurrentTracks()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventTrackSelectionParametersChanged">
            <summary>
              <c>#getTrackSelectionParameters()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventVideoSizeChanged">
            <summary>
              <c>#getVideoSize()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.EventVolumeChanged">
            <summary>
              <c>#getVolume()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.MediaItemTransitionReasonAuto">
            <summary>Playback has automatically transitioned to the next media item.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.MediaItemTransitionReasonPlaylistChanged">
            <summary>The current media item has changed because of a change in the playlist.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.MediaItemTransitionReasonRepeat">
            <summary>The media item has been repeated.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.MediaItemTransitionReasonSeek">
            <summary>A seek to another media item has occurred.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.PlaybackSuppressionReasonNone">
            <summary>Playback is not suppressed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.PlaybackSuppressionReasonTransientAudioFocusLoss">
            <summary>Playback is suppressed due to transient audio focus loss.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.PlayWhenReadyChangeReasonAudioBecomingNoisy">
            <summary>Playback has been paused to avoid becoming noisy.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.PlayWhenReadyChangeReasonAudioFocusLoss">
            <summary>Playback has been paused because of a loss of audio focus.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.PlayWhenReadyChangeReasonEndOfMediaItem">
            <summary>Playback has been paused at the end of a media item.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.PlayWhenReadyChangeReasonRemote">
            <summary>Playback has been started or paused because of a remote change.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.PlayWhenReadyChangeReasonUserRequest">
            <summary>Playback has been started or paused by a call to <c>#setPlayWhenReady(boolean)</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.RepeatModeAll">
            <summary>Repeats the entire timeline infinitely.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.RepeatModeOff">
            <summary>Normal playback without repetition.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.RepeatModeOne">
            <summary>Repeats the currently playing <c>MediaItem</c> infinitely during ongoing playback.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.StateBuffering">
            <summary>The player is not able to immediately play the media, but is doing work toward being able to do
            so.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.StateEnded">
            <summary>The player has finished playing the media.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.StateIdle">
            <summary>The player is idle, meaning it holds only limited resources.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.StateReady">
            <summary>The player is able to immediately play from its current position.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.TimelineChangeReasonPlaylistChanged">
            <summary>Timeline changed as a result of a change of the playlist items or the order of the items.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Player.TimelineChangeReasonSourceUpdate">
            <summary>Timeline changed as a result of a source update (e.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.IPlayer">
            <summary>A media player interface defining traditional high-level functionality, such as the ability to
            play, pause, seek and query properties of the currently playing media.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandAdjustDeviceVolume">
            <summary>Command to increase and decrease the device volume and mute it.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandChangeMediaItems">
            <summary>Command to change the <c>MediaItem MediaItems</c> in the playlist.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandGetAudioAttributes">
            <summary>Command to get the player current <c>AudioAttributes</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandGetCurrentMediaItem">
            <summary>Command to get the currently playing <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandGetDeviceVolume">
            <summary>Command to get the device volume and whether it is muted.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandGetMediaItemsMetadata">
            <summary>Command to get the <c>MediaItem MediaItems</c> metadata.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandGetText">
            <summary>Command to get the text that should currently be displayed by the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandGetTimeline">
            <summary>Command to get the information about the current timeline.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandGetTracks">
            <summary>Command to get details of the current track selection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandGetVolume">
            <summary>Command to get the player volume.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandInvalid">
            <summary>Represents an invalid <c>Command</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandPlayPause">
            <summary>Command to start, pause or resume playback.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandPrepare">
            <summary>Command to prepare the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSeekBack">
            <summary>Command to seek back by a fixed increment into the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSeekForward">
            <summary>Command to seek forward by a fixed increment into the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSeekInCurrentMediaItem">
            <summary>Command to seek anywhere into the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSeekToDefaultPosition">
            <summary>Command to seek to the default position of the current <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSeekToMediaItem">
            <summary>Command to seek anywhere in any <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSeekToNext">
            <summary>Command to seek to a later position in the current or next <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSeekToNextMediaItem">
            <summary>Command to seek to the default position of the next <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSeekToPrevious">
            <summary>Command to seek to an earlier position in the current or previous <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSeekToPreviousMediaItem">
            <summary>Command to seek to the default position of the previous <c>MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSetDeviceVolume">
            <summary>Command to set the device volume and mute it.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSetMediaItem">
            <summary>Command to set a <c>MediaItem MediaItem</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSetMediaItemsMetadata">
            <summary>Command to set the <c>MediaItem MediaItems</c> metadata.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSetRepeatMode">
            <summary>Command to set the repeat mode.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSetShuffleMode">
            <summary>Command to enable shuffling.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSetSpeedAndPitch">
            <summary>Command to set the playback speed and pitch.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSetTrackSelectionParameters">
            <summary>Command to set the player's track selection parameters.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSetVideoSurface">
            <summary>Command to set and clear the surface on which to render the video.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandSetVolume">
            <summary>Command to set the player volume.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.CommandStop">
            <summary>Command to stop playback or release the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.DiscontinuityReasonAutoTransition">
            <summary>Automatic playback transition from one period in the timeline to the next.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.DiscontinuityReasonInternal">
            <summary>Discontinuity introduced internally (e.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.DiscontinuityReasonRemove">
            <summary>Discontinuity caused by the removal of the current period from the <c>Timeline</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.DiscontinuityReasonSeek">
            <summary>Seek within the current period or to another period.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.DiscontinuityReasonSeekAdjustment">
            <summary>Seek adjustment due to being unable to seek to the requested position or because the seek was
            permitted to be inexact.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.DiscontinuityReasonSkip">
            <summary>Discontinuity introduced by a skipped period (for instance a skipped ad).</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventAudioAttributesChanged">
            <summary>
              <c>#getAudioAttributes()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventAudioSessionId">
            <summary>The audio session id was set.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventAvailableCommandsChanged">
            <summary>
              <c>#isCommandAvailable(int)</c> changed for at least one <c>Command</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventCues">
            <summary>
              <c>#getCurrentCues()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventDeviceInfoChanged">
            <summary>
              <c>#getDeviceInfo()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventDeviceVolumeChanged">
            <summary>
              <c>#getDeviceVolume()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventIsPlayingChanged">
            <summary>
              <c>#isPlaying()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventMaxSeekToPreviousPositionChanged">
            <summary>
              <c>#getMaxSeekToPreviousPosition()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventMediaItemTransition">
            <summary>
              <c>#getCurrentMediaItem()</c> changed or the player started repeating the current item.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventMediaMetadataChanged">
            <summary>
              <c>#getMediaMetadata()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventMetadata">
            <summary>Metadata associated with the current playback time changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventPlaybackParametersChanged">
            <summary>
              <c>#getPlaybackParameters()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventPlaybackStateChanged">
            <summary>
              <c>#getPlaybackState()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventPlaybackSuppressionReasonChanged">
            <summary>
              <c>#getPlaybackSuppressionReason()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventPlayerError">
            <summary>
              <c>#getPlayerError()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventPlaylistMetadataChanged">
            <summary>
              <c>#getPlaylistMetadata()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventPlayWhenReadyChanged">
            <summary>
              <c>#getPlayWhenReady()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventPositionDiscontinuity">
            <summary>A position discontinuity occurred.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventRenderedFirstFrame">
            <summary>A frame is rendered for the first time since setting the surface, or since the renderer was
            reset, or since the stream being rendered was changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventRepeatModeChanged">
            <summary>
              <c>#getRepeatMode()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventSeekBackIncrementChanged">
            <summary>
              <c>#getSeekBackIncrement()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventSeekForwardIncrementChanged">
            <summary>
              <c>#getSeekForwardIncrement()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventShuffleModeEnabledChanged">
            <summary>
              <c>#getShuffleModeEnabled()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventSkipSilenceEnabledChanged">
            <summary>Skipping silences in the audio stream is enabled or disabled.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventSurfaceSizeChanged">
            <summary>The size of the surface onto which the video is being rendered changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventTimelineChanged">
            <summary>
              <c>#getCurrentTimeline()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventTracksChanged">
            <summary>
              <c>#getCurrentTracks()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventTrackSelectionParametersChanged">
            <summary>
              <c>#getTrackSelectionParameters()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventVideoSizeChanged">
            <summary>
              <c>#getVideoSize()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.EventVolumeChanged">
            <summary>
              <c>#getVolume()</c> changed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.MediaItemTransitionReasonAuto">
            <summary>Playback has automatically transitioned to the next media item.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.MediaItemTransitionReasonPlaylistChanged">
            <summary>The current media item has changed because of a change in the playlist.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.MediaItemTransitionReasonRepeat">
            <summary>The media item has been repeated.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.MediaItemTransitionReasonSeek">
            <summary>A seek to another media item has occurred.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.PlaybackSuppressionReasonNone">
            <summary>Playback is not suppressed.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.PlaybackSuppressionReasonTransientAudioFocusLoss">
            <summary>Playback is suppressed due to transient audio focus loss.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.PlayWhenReadyChangeReasonAudioBecomingNoisy">
            <summary>Playback has been paused to avoid becoming noisy.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.PlayWhenReadyChangeReasonAudioFocusLoss">
            <summary>Playback has been paused because of a loss of audio focus.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.PlayWhenReadyChangeReasonEndOfMediaItem">
            <summary>Playback has been paused at the end of a media item.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.PlayWhenReadyChangeReasonRemote">
            <summary>Playback has been started or paused because of a remote change.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.PlayWhenReadyChangeReasonUserRequest">
            <summary>Playback has been started or paused by a call to <c>#setPlayWhenReady(boolean)</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.RepeatModeAll">
            <summary>Repeats the entire timeline infinitely.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.RepeatModeOff">
            <summary>Normal playback without repetition.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.RepeatModeOne">
            <summary>Repeats the currently playing <c>MediaItem</c> infinitely during ongoing playback.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.StateBuffering">
            <summary>The player is not able to immediately play the media, but is doing work toward being able to do
            so.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.StateEnded">
            <summary>The player has finished playing the media.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.StateIdle">
            <summary>The player is idle, meaning it holds only limited resources.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.StateReady">
            <summary>The player is able to immediately play from its current position.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.TimelineChangeReasonPlaylistChanged">
            <summary>Timeline changed as a result of a change of the playlist items or the order of the items.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.IPlayer.TimelineChangeReasonSourceUpdate">
            <summary>Timeline changed as a result of a source update (e.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.AddMediaItem(Com.Google.Android.Exoplayer2.MediaItem)">
            <param name="mediaItem">The <c>MediaItem</c> to add.</param>
            <summary>Adds a media item to the end of the playlist.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.AddMediaItem(System.Int32,Com.Google.Android.Exoplayer2.MediaItem)">
            <param name="index">The index at which to add the media item. If the index is larger than the size of
                the playlist, the media item is added to the end of the playlist.</param>
            <param name="mediaItem">The <c>MediaItem</c> to add.</param>
            <summary>Adds a media item at the given index of the playlist.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.CanAdvertiseSession">
            <summary>Returns whether the player can be used to advertise a media session.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.ClearMediaItems">
            <summary>Clears the playlist.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.ClearVideoSurface">
            <summary>Clears any <c>Surface</c>, <c>SurfaceHolder</c>, <c>SurfaceView</c> or <c>TextureView</c>
            currently set on the player.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.DecreaseDeviceVolume">
            <summary>Decreases the volume of the device.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.GetMediaItemAt(System.Int32)">
            <summary>Returns the <c>MediaItem</c> at the given index.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.IncreaseDeviceVolume">
            <summary>Increases the volume of the device.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.MoveMediaItem(System.Int32,System.Int32)">
            <param name="currentIndex">The current index of the media item to move.</param>
            <param name="newIndex">The new index of the media item. If the new index is larger than the size of
                the playlist the item is moved to the end of the playlist.</param>
            <summary>Moves the media item at the current index to the new index.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.MoveMediaItems(System.Int32,System.Int32,System.Int32)">
            <param name="fromIndex">The start of the range to move.</param>
            <param name="toIndex">The first item not to be included in the range (exclusive).</param>
            <param name="newIndex">The new index of the first media item of the range. If the new index is larger
                than the size of the remaining playlist after removing the range, the range is moved to the
                end of the playlist.</param>
            <summary>Moves the media item range to the new index.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.Pause">
            <summary>Pauses playback.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.Play">
            <summary>Resumes playback as soon as <c>#getPlaybackState()</c> == <c>#STATE_READY</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.Prepare">
            <summary>Prepares the player.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.Release">
            <summary>Releases the player.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.RemoveMediaItem(System.Int32)">
            <param name="index">The index at which to remove the media item.</param>
            <summary>Removes the media item at the given index of the playlist.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.RemoveMediaItems(System.Int32,System.Int32)">
            <param name="fromIndex">The index at which to start removing media items.</param>
            <param name="toIndex">The index of the first item to be kept (exclusive). If the index is larger than
                the size of the playlist, media items to the end of the playlist are removed.</param>
            <summary>Removes a range of media items from the playlist.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.SeekBack">
            <summary>Seeks back in the current <c>MediaItem</c> by <c>#getSeekBackIncrement()</c> milliseconds.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.SeekForward">
            <summary>Seeks forward in the current <c>MediaItem</c> by <c>#getSeekForwardIncrement()</c>
            milliseconds.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.SeekTo(System.Int32,System.Int64)">
            <param name="mediaItemIndex">The index of the <c>MediaItem</c>.</param>
            <param name="positionMs">The seek position in the specified <c>MediaItem</c>, or <c>C#TIME_UNSET</c>
                to seek to the media item's default position.</param>
            <summary>Seeks to a position specified in milliseconds in the specified <c>MediaItem</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.SeekTo(System.Int64)">
            <param name="positionMs">The seek position in the current <c>MediaItem</c>, or <c>C#TIME_UNSET</c>
                to seek to the media item's default position.</param>
            <summary>Seeks to a position specified in milliseconds in the current <c>MediaItem</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.SeekToDefaultPosition">
            <summary>Seeks to the default position associated with the current <c>MediaItem</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.SeekToDefaultPosition(System.Int32)">
            <param name="mediaItemIndex">The index of the <c>MediaItem</c> whose associated default position
                should be seeked to.</param>
            <summary>Seeks to the default position associated with the specified <c>MediaItem</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.SeekToNext">
            <summary>Seeks to a later position in the current or next <c>MediaItem</c> (if available).</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.SeekToNextMediaItem">
            <summary>Seeks to the default position of the next <c>MediaItem</c>, which may depend on the current
            repeat mode and whether shuffle mode is enabled.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.SeekToPreviousMediaItem">
            <summary>Seeks to the default position of the previous <c>MediaItem</c>, which may depend on the
            current repeat mode and whether shuffle mode is enabled.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.SetMediaItem(Com.Google.Android.Exoplayer2.MediaItem)">
            <param name="mediaItem">The new <c>MediaItem</c>.</param>
            <summary>Clears the playlist, adds the specified <c>MediaItem</c> and resets the position to the
            default position.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.SetMediaItem(Com.Google.Android.Exoplayer2.MediaItem,System.Boolean)">
            <param name="mediaItem">The new <c>MediaItem</c>.</param>
            <param name="resetPosition">Whether the playback position should be reset to the default position. If
                false, playback will start from the position defined by <c>#getCurrentMediaItemIndex()</c>
                and <c>#getCurrentPosition()</c>.</param>
            <summary>Clears the playlist and adds the specified <c>MediaItem</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.SetMediaItem(Com.Google.Android.Exoplayer2.MediaItem,System.Int64)">
            <param name="mediaItem">The new <c>MediaItem</c>.</param>
            <param name="startPositionMs">The position in milliseconds to start playback from.</param>
            <summary>Clears the playlist and adds the specified <c>MediaItem</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.SetPlaybackSpeed(System.Single)">
            <param name="speed">The linear factor by which playback will be sped up. Must be higher than 0. 1 is
                normal speed, 2 is twice as fast, 0.5 is half normal speed...</param>
            <summary>Changes the rate at which playback occurs.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.IPlayer.Stop">
            <summary>Stops playback without resetting the playlist.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.MediaItem">
            <summary>Representation of a media item.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.MediaItem.DefaultMediaId">
            <summary>The default media ID that is used if the media ID is not explicitly set by <c>Builder#setMediaId(String)</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaItem.Empty">
            <summary>Empty <c>MediaItem</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaItem.MediaId">
            <summary>Identifies the media item.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaItem.MediaMetadata">
            <summary>The media metadata.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.MediaItem.FromUri(System.String)">
            <param name="uri">The URI.</param>
            <summary>Creates a <c>MediaItem</c> for the given URI.</summary>
            <returns>An <c>MediaItem</c> for the given URI.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.MediaMetadata">
            <summary>Metadata of a <c>MediaItem</c>, playlist, or a combination of multiple sources of <c>Metadata</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.AlbumArtist">
            <summary>Optional album artist.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.AlbumTitle">
            <summary>Optional album title.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.Artist">
            <summary>Optional artist.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.ArtworkData">
            <summary>Optional artwork data as a compressed byte array.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.ArtworkDataType">
            <summary>Optional <c>PictureType</c> of the artwork data.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.Compilation">
            <summary>Optional compilation.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.Composer">
            <summary>Optional composer.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.Conductor">
            <summary>Optional conductor.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.Description">
            <summary>Optional description.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.DiscNumber">
            <summary>Optional disc number.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.DisplayTitle">
            <summary>Optional display title.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.Empty">
            <summary>Empty <c>MediaMetadata</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.FolderType">
            <summary>Optional <c>FolderType</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.MediaMetadata.FolderTypeAlbums">
            <summary>Type for a folder containing media categorized by album.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.MediaMetadata.FolderTypeArtists">
            <summary>Type for a folder containing media categorized by artist.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.MediaMetadata.FolderTypeGenres">
            <summary>Type for a folder containing media categorized by genre.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.MediaMetadata.FolderTypeMixed">
            <summary>Type for a folder containing media of mixed types.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.MediaMetadata.FolderTypeNone">
            <summary>Type for an item that is not a folder.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.MediaMetadata.FolderTypePlaylists">
            <summary>Type for a folder containing a playlist.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.MediaMetadata.FolderTypeTitles">
            <summary>Type for a folder containing only playable media.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.MediaMetadata.FolderTypeYears">
            <summary>Type for a folder containing media categorized by year.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.Genre">
            <summary>Optional genre.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.IsPlayable">
            <summary>Optional boolean for media playability.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.OverallRating">
            <summary>Optional overall <c>Rating</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.RecordingDay">
            <summary>Optional day of the recording date.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.RecordingMonth">
            <summary>Optional month of the recording date.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.RecordingYear">
            <summary>Optional year of the recording date.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.ReleaseDay">
            <summary>Optional day of the release date.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.ReleaseMonth">
            <summary>Optional month of the release date.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.ReleaseYear">
            <summary>Optional year of the release date.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.Station">
            <summary>Optional name of the station streaming the media.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.Subtitle">
            <summary>Optional subtitle.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.Title">
            <summary>Optional title.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.TotalDiscCount">
            <summary>Optional total number of discs.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.TotalTrackCount">
            <summary>Optional total number of tracks.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.TrackNumber">
            <summary>Optional track number.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.UserRating">
            <summary>Optional user <c>Rating</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.MediaMetadata.Writer">
            <summary>Optional writer.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Metadata">
            <summary>A collection of metadata entries.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Metadata.#ctor(System.Collections.Generic.IList{Com.Google.Android.Exoplayer2.Metadata.Metadata.IEntry})">
            <param name="entries">The metadata entries.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Metadata.CopyWithAppendedEntriesFrom(Com.Google.Android.Exoplayer2.Metadata.Metadata)">
            <param name="other">The metadata that holds the entries to append. If null, this methods returns this
                instance.</param>
            <summary>Returns a copy of this metadata with the entries of the specified metadata appended.</summary>
            <returns>The metadata instance with the appended entries.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Metadata.Length">
            <summary>Returns the number of metadata entries.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Offline.StreamKey">
            <summary>A key for a subset of media that can be separately loaded (a "stream").</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Offline.StreamKey.GroupIndex">
            <summary>The group index.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Offline.StreamKey.PeriodIndex">
            <summary>The period index.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Offline.StreamKey.StreamIndex">
            <summary>The stream index.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Offline.StreamKey.#ctor(System.Int32,System.Int32)">
            <param name="groupIndex">The group index.</param>
            <param name="streamIndex">The stream index.</param>
            <summary>Creates an instance with <c>#periodIndex</c> set to 0.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Offline.StreamKey.#ctor(System.Int32,System.Int32,System.Int32)">
            <param name="periodIndex">The period index.</param>
            <param name="groupIndex">The group index.</param>
            <param name="streamIndex">The stream index.</param>
            <summary>Creates an instance.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.ParserException">
            <summary>Thrown when an error occurs parsing media data and metadata.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ParserException.ContentIsMalformed">
            <summary>Whether the parsing error was caused by a bitstream not following the expected format.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ParserException.DataType">
            <summary>The <c>DataType data type</c> of the parsed bitstream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ParserException.CreateForMalformedContainer(System.String,Java.Lang.Throwable)">
            <param name="message">See <c>#getMessage()</c>.</param>
            <param name="cause">See <c>#getCause()</c>.</param>
            <summary>Creates a new instance for which <c>#contentIsMalformed</c> is true and <c>#dataType</c> is
            <c>C#DATA_TYPE_MEDIA</c>.</summary>
            <returns>The created instance.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ParserException.CreateForMalformedDataOfUnknownType(System.String,Java.Lang.Throwable)">
            <param name="message">See <c>#getMessage()</c>.</param>
            <param name="cause">See <c>#getCause()</c>.</param>
            <summary>Creates a new instance for which <c>#contentIsMalformed</c> is true and <c>#dataType</c> is
            <c>C#DATA_TYPE_UNKNOWN</c>.</summary>
            <returns>The created instance.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ParserException.CreateForMalformedManifest(System.String,Java.Lang.Throwable)">
            <param name="message">See <c>#getMessage()</c>.</param>
            <param name="cause">See <c>#getCause()</c>.</param>
            <summary>Creates a new instance for which <c>#contentIsMalformed</c> is true and <c>#dataType</c> is
            <c>C#DATA_TYPE_MANIFEST</c>.</summary>
            <returns>The created instance.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ParserException.CreateForManifestWithUnsupportedFeature(System.String,Java.Lang.Throwable)">
            <param name="message">See <c>#getMessage()</c>.</param>
            <param name="cause">See <c>#getCause()</c>.</param>
            <summary>Creates a new instance for which <c>#contentIsMalformed</c> is false and <c>#dataType</c> is
            <c>C#DATA_TYPE_MANIFEST</c>.</summary>
            <returns>The created instance.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ParserException.CreateForUnsupportedContainerFeature(System.String)">
            <param name="message">See <c>#getMessage()</c>.</param>
            <summary>Creates a new instance for which <c>#contentIsMalformed</c> is false and <c>#dataType</c> is
            <c>C#DATA_TYPE_MEDIA</c>.</summary>
            <returns>The created instance.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.PercentageRating">
            <summary>A rating expressed as a percentage.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.PercentageRating.#ctor">
            <summary>Creates a unrated instance.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.PercentageRating.#ctor(System.Single)">
            <param name="percent">The percentage value of the rating.</param>
            <summary>Creates a rated instance with the given percentage.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.PercentageRating.Percent">
            <summary>Returns the percent value of this rating.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.PlaybackException">
            <summary>Thrown when a non locally recoverable playback failure occurs.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.CustomErrorCodeBase">
            <summary>Player implementations that want to surface custom errors can use error codes greater than this
            value, so as to avoid collision with other error codes defined in this class.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCode">
            <summary>An error code which identifies the cause of the playback failure.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeAudioTrackInitFailed">
            <summary>Caused by an AudioTrack initialization failure.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeAudioTrackWriteFailed">
            <summary>Caused by an AudioTrack write operation failure.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeBehindLiveWindow">
            <summary>Caused by the loading position falling behind the sliding window of available live content.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDecoderInitFailed">
            <summary>Caused by a decoder initialization failure.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDecoderQueryFailed">
            <summary>Caused by a decoder query failure.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDecodingFailed">
            <summary>Caused by a failure while trying to decode media samples.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDecodingFormatExceedsCapabilities">
            <summary>Caused by trying to decode content whose format exceeds the capabilities of the device.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDecodingFormatUnsupported">
            <summary>Caused by trying to decode content whose format is not supported.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDrmContentError">
            <summary>Caused by attempting to play incompatible DRM-protected content.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDrmDeviceRevoked">
            <summary>Caused by the device having revoked DRM privileges.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDrmDisallowedOperation">
            <summary>Caused by an operation being disallowed by a license policy.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDrmLicenseAcquisitionFailed">
            <summary>Caused by a failure while trying to obtain a license.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDrmLicenseExpired">
            <summary>Caused by an expired DRM license being loaded into an open DRM session.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDrmProvisioningFailed">
            <summary>Caused by a failure while provisioning the device.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDrmSchemeUnsupported">
            <summary>Caused by a chosen DRM protection scheme not being supported by the device.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDrmSystemError">
            <summary>Caused by an error in the DRM system.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeDrmUnspecified">
            <summary>Caused by an unspecified error related to DRM protection.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeFailedRuntimeCheck">
            <summary>Caused by a failed runtime check.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeIoBadHttpStatus">
            <summary>Caused by an HTTP server returning an unexpected HTTP response status code.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeIoCleartextNotPermitted">
            <summary>Caused by the player trying to access cleartext HTTP traffic (meaning http:// rather than
            https://) when the app's Network Security Configuration does not permit it.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeIoFileNotFound">
            <summary>Caused by a non-existent file.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeIoInvalidHttpContentType">
            <summary>Caused by a server returning a resource with an invalid "Content-Type" HTTP header value.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeIoNetworkConnectionFailed">
            <summary>Caused by a network connection failure.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeIoNetworkConnectionTimeout">
            <summary>Caused by a network timeout, meaning the server is taking too long to fulfill a request.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeIoNoPermission">
            <summary>Caused by lack of permission to perform an IO operation.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeIoReadPositionOutOfRange">
            <summary>Caused by reading data out of the data bound.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeIoUnspecified">
            <summary>Caused by an Input/Output error which could not be identified.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeParsingContainerMalformed">
            <summary>Caused by a parsing error associated with a media container format bitstream.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeParsingContainerUnsupported">
            <summary>Caused by attempting to extract a file with an unsupported media container format, or an
            unsupported media container feature.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeParsingManifestMalformed">
            <summary>Caused by a parsing error associated with a media manifest.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeParsingManifestUnsupported">
            <summary>Caused by an unsupported feature in a media manifest.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeRemoteError">
            <summary>Caused by an unidentified error in a remote Player, which is a Player that runs on a different
            host or process.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeTimeout">
            <summary>Caused by a generic timeout.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeUnspecified">
            <summary>Caused by an error whose cause could not be identified.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.PlaybackException.FieldCustomIdBase">
            <summary>Defines a minimum field ID value for subclasses to use when implementing <c>#toBundle()</c>
            and <c>Bundleable.Creator</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.PlaybackException.TimestampMs">
            <summary>The value of <c>SystemClock#elapsedRealtime()</c> when this exception was created.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.PlaybackException.#ctor(System.String,Java.Lang.Throwable,System.Int32)">
            <param name="errorCode">A number which identifies the cause of the error. May be one of the <c>ErrorCode ErrorCodes</c>.</param>
            <param name="cause">See <c>#getCause()</c>.</param>
            <param name="message">See <c>#getMessage()</c>.</param>
            <summary>Creates an instance.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.PlaybackException.#ctor(System.String,Java.Lang.Throwable,System.Int32,System.Int64)">
            <summary>Creates a new instance using the given values.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.PlaybackException.ErrorCodeName">
            <summary>Equivalent to <c>PlaybackException#getErrorCodeName(int)
            PlaybackException.getErrorCodeName(this.errorCode)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.PlaybackException.ErrorInfoEquals(Com.Google.Android.Exoplayer2.PlaybackException)">
            <summary>Returns whether the error data associated to this exception equals the error data associated to
            <c>other</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.PlaybackException.GetErrorCodeName(System.Int32)">
            <summary>Returns the name of a given <c>errorCode</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.PlaybackException.KeyForField(System.Int32)">
            <summary>Converts the given field number to a string which can be used as a field key when implementing
            <c>#toBundle()</c> and <c>Bundleable.Creator</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.PlaybackParameters">
            <summary>Parameters that apply to playback, including speed setting.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.PlaybackParameters.Default">
            <summary>The default playback parameters: real-time playback with no silence skipping.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.PlaybackParameters.Pitch">
            <summary>The factor by which pitch will be shifted.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.PlaybackParameters.Speed">
            <summary>The factor by which playback will be sped up.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.PlaybackParameters.#ctor(System.Single)">
            <param name="speed">The factor by which playback will be sped up. Must be greater than zero.</param>
            <summary>Creates new playback parameters that set the playback speed.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.PlaybackParameters.#ctor(System.Single,System.Single)">
            <param name="speed">The factor by which playback will be sped up. Must be greater than zero.</param>
            <param name="pitch">The factor by which the pitch of audio will be adjusted. Must be greater than
                zero. Useful values are <c>1</c> (to time-stretch audio) and the same value as passed in
                as the <c>speed</c> (to resample audio, which is useful for slow-motion videos).</param>
            <summary>Creates new playback parameters that set the playback speed/pitch.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.PlaybackParameters.GetMediaTimeUsForPlayoutTimeMs(System.Int64)">
            <param name="timeMs">The time to scale, in milliseconds.</param>
            <summary>Returns the media time in microseconds that will elapse in <c>timeMs</c> milliseconds of
            wallclock time.</summary>
            <returns>The scaled time, in microseconds.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.PlaybackParameters.WithSpeed(System.Single)">
            <param name="speed">The new speed. Must be greater than zero.</param>
            <summary>Returns a copy with the given speed.</summary>
            <returns>The copied playback parameters.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Rating">
            <summary>A rating for media content.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.RatingInvoker.IsRated">
            <summary>Whether the rating exists or not.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState">
            <summary>Represents ad group times and information on the state and URIs of ads within each ad group.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.AdGroupCount">
            <summary>The number of ad groups.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.AdResumePositionUs">
            <summary>The position offset in the first unplayed ad at which to begin playback, in microseconds.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.AdsId">
            <summary>The opaque identifier for ads with which this instance is associated, or <c>null</c> if unset.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.AdStateAvailable">
            <summary>State for an ad that has a URL but has not yet been played.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.AdStateError">
            <summary>State for an ad that could not be loaded.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.AdStatePlayed">
            <summary>State for an ad that was played in full.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.AdStateSkipped">
            <summary>State for an ad that was skipped.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.AdStateUnavailable">
            <summary>State for an ad that does not yet have a URL.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.ContentDurationUs">
            <summary>The duration of the content period in microseconds, if known.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.None">
            <summary>Ad playback state with no ads.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.RemovedAdGroupCount">
            <summary>The number of ad groups the have been removed.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.#ctor(Java.Lang.Object,System.Int64[])">
            <param name="adsId">The opaque identifier for ads with which this instance is associated.</param>
            <param name="adGroupTimesUs">The times of ad groups in microseconds, relative to the start of the
                <c>Timeline.Period</c> they belong to. A final element with the value <c>C#TIME_END_OF_SOURCE</c> indicates that there is a postroll ad.</param>
            <summary>Creates a new ad playback state with the specified ad group times.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.FromAdPlaybackState(Java.Lang.Object,Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState)">
            <param name="adsId">The new ads ID.</param>
            <param name="adPlaybackState">The ad playback state to copy.</param>
            <summary>Returns a copy of the ad playback state with the given ads ID.</summary>
            <returns>The new ad playback state.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.GetAdGroupIndexAfterPositionUs(System.Int64,System.Int64)">
            <param name="positionUs">The period position after which to find an ad group, in microseconds, or
                <c>C#TIME_END_OF_SOURCE</c> for the end of the stream (in which case there can be no ad
                group after the position).</param>
            <param name="periodDurationUs">The duration of the containing timeline period, in microseconds, or
                <c>C#TIME_UNSET</c> if not known.</param>
            <summary>Returns the index of the next ad group after <c>positionUs</c> that should be played.</summary>
            <returns>The index of the ad group, or <c>C#INDEX_UNSET</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.GetAdGroupIndexForPositionUs(System.Int64,System.Int64)">
            <param name="positionUs">The period position at or before which to find an ad group, in microseconds,
                or <c>C#TIME_END_OF_SOURCE</c> for the end of the stream (in which case the index of any
                unplayed postroll ad group will be returned).</param>
            <param name="periodDurationUs">The duration of the containing timeline period, in microseconds, or
                <c>C#TIME_UNSET</c> if not known.</param>
            <summary>Returns the index of the ad group at or before <c>positionUs</c> that should be played before
            the content at <c>positionUs</c>.</summary>
            <returns>The index of the ad group, or <c>C#INDEX_UNSET</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.IsAdInErrorState(System.Int32,System.Int32)">
            <summary>Returns whether the specified ad has been marked as in <c>#AD_STATE_ERROR</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithAdCount(System.Int32,System.Int32)">
            <summary>Returns an instance with the number of ads in <c>adGroupIndex</c> resolved to <c>adCount</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithAdDurationsUs(System.Int32,System.Int64[])">
            <summary>Returns an instance with the specified ad durations, in microseconds, in the specified ad
            group.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithAdDurationsUs(System.Int64[][])">
            <summary>Returns an instance with the specified ad durations, in microseconds.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithAdGroupTimeUs(System.Int32,System.Int64)">
            <param name="adGroupIndex">The index of the ad group.</param>
            <param name="adGroupTimeUs">The new ad group time, in microseconds, or <c>C#TIME_END_OF_SOURCE</c> to
                indicate a postroll ad.</param>
            <summary>Returns an instance with the specified ad group time.</summary>
            <returns>The updated ad playback state.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithAdLoadError(System.Int32,System.Int32)">
            <summary>Returns an instance with the specified ad marked as having a load error.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithAdResumePositionUs(System.Int64)">
            <summary>Returns an instance with the specified ad resume position, in microseconds, relative to the
            start of the current ad.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithContentDurationUs(System.Int64)">
            <summary>Returns an instance with the specified content duration, in microseconds.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithContentResumeOffsetUs(System.Int32,System.Int64)">
            <summary>Returns an instance with the specified <c>AdGroup#contentResumeOffsetUs</c>, in microseconds,
            for the specified ad group.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithIsServerSideInserted(System.Int32,System.Boolean)">
            <summary>Returns an instance with the specified value for <c>AdGroup#isServerSideInserted</c> in the
            specified ad group.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithNewAdGroup(System.Int32,System.Int64)">
            <param name="adGroupIndex">The insertion index of the new group.</param>
            <param name="adGroupTimeUs">The ad group time, in microseconds, or <c>C#TIME_END_OF_SOURCE</c> to
                indicate a postroll ad.</param>
            <summary>Returns an instance with a new ad group.</summary>
            <returns>The updated ad playback state.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithPlayedAd(System.Int32,System.Int32)">
            <summary>Returns an instance with the specified ad marked as played.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithRemovedAdGroupCount(System.Int32)">
            <summary>Returns an instance with the specified number of <c>#removedAdGroupCount removed ad
            groups</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithResetAdGroup(System.Int32)">
            <summary>Returns an instance with all ads in the specified ad group reset from final states (played,
            skipped, error) to either available or unavailable, which allows to play them again.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithSkippedAd(System.Int32,System.Int32)">
            <summary>Returns an instance with the specified ad marked as skipped.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.Ads.AdPlaybackState.WithSkippedAdGroup(System.Int32)">
            <summary>Returns an instance with all ads in the specified ad group skipped (except for those already
            marked as played or in the error state).</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Source.MediaPeriodId">
            <summary>Identifies a specific playback of a <c>Timeline.Period</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.MediaPeriodId.AdGroupIndex">
            <summary>If the media period is in an ad group, the index of the ad group in the period.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.MediaPeriodId.AdIndexInAdGroup">
            <summary>If the media period is in an ad group, the index of the ad in its ad group in the period.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.MediaPeriodId.NextAdGroupIndex">
            <summary>The index of the next ad group to which the media period's content is clipped, or <c>C#INDEX_UNSET</c> if there is no following ad group or if this media period is an ad.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.MediaPeriodId.PeriodUid">
            <summary>The unique id of the timeline period.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.MediaPeriodId.WindowSequenceNumber">
            <summary>The sequence number of the window in the buffered sequence of windows this media period is part
            of.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.MediaPeriodId.#ctor(Com.Google.Android.Exoplayer2.Source.MediaPeriodId)">
            <summary>Copy constructor for inheritance.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.MediaPeriodId.#ctor(Java.Lang.Object)">
            <param name="periodUid">The unique id of the timeline period.</param>
            <summary>Creates a media period identifier for a period which is not part of a buffered sequence of
            windows.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.MediaPeriodId.#ctor(Java.Lang.Object,System.Int32,System.Int32,System.Int64)">
            <param name="periodUid">The unique id of the timeline period that contains the ad group.</param>
            <param name="adGroupIndex">The index of the ad group.</param>
            <param name="adIndexInAdGroup">The index of the ad in the ad group.</param>
            <param name="windowSequenceNumber">The sequence number of the window in the buffered sequence of
                windows this media period is part of.</param>
            <summary>Creates a media period identifier that identifies an ad within an ad group at the specified
            timeline period.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.MediaPeriodId.#ctor(Java.Lang.Object,System.Int64)">
            <param name="periodUid">The unique id of the timeline period.</param>
            <param name="windowSequenceNumber">The sequence number of the window in the buffered sequence of
                windows this media period is part of.</param>
            <summary>Creates a media period identifier for the specified period in the timeline.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.MediaPeriodId.#ctor(Java.Lang.Object,System.Int64,System.Int32)">
            <param name="periodUid">The unique id of the timeline period.</param>
            <param name="windowSequenceNumber">The sequence number of the window in the buffered sequence of
                windows this media period is part of.</param>
            <param name="nextAdGroupIndex">The index of the next ad group to which the media period's content is
                clipped.</param>
            <summary>Creates a media period identifier for the specified clipped period in the timeline.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.MediaPeriodId.IsAd">
            <summary>Returns whether this period identifier identifies an ad in an ad group in a period.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.MediaPeriodId.CopyWithPeriodUid(Java.Lang.Object)">
            <summary>Returns a copy of this period identifier but with <c>newPeriodUid</c> as its period uid.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.MediaPeriodId.CopyWithWindowSequenceNumber(System.Int64)">
            <summary>Returns a copy of this period identifier with a new <c>windowSequenceNumber</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Source.TrackGroup">
            <summary>An immutable group of tracks available within a media stream.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.TrackGroup.Id">
            <summary>An identifier for the track group.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.TrackGroup.Length">
            <summary>The number of tracks in the group.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Source.TrackGroup.Type">
            <summary>The type of tracks in the group.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.TrackGroup.CopyWithId(System.String)">
            <param name="id">The identifier for the copy of the track group.</param>
            <summary>Returns a copy of this track group with the specified <c>id</c>.</summary>
            <returns>The copied track group.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.TrackGroup.GetFormat(System.Int32)">
            <param name="index">The index of the track.</param>
            <summary>Returns the format of the track at a given index.</summary>
            <returns>The track's format.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Source.TrackGroup.IndexOf(Com.Google.Android.Exoplayer2.Format)">
            <param name="format">The format.</param>
            <summary>Returns the index of the track with the given format in the group.</summary>
            <returns>The index of the track, or <c>C#INDEX_UNSET</c> if no such track exists.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.StarRating">
            <summary>A rating expressed as a fractional number of stars.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.StarRating.#ctor(System.Int32)">
            <param name="maxStars">The maximum number of stars this rating can have.</param>
            <summary>Creates a unrated instance with <c>maxStars</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.StarRating.#ctor(System.Int32,System.Single)">
            <param name="maxStars">The maximum number of stars this rating can have.</param>
            <param name="starRating">A fractional number of stars of this rating from <c>0f</c> to <c>maxStars</c>.</param>
            <summary>Creates a rated instance with <c>maxStars</c> and the given fractional number of stars.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.StarRating.MaxStars">
            <summary>Returns the maximum number of stars.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.StarRating.GetStarRating">
            <summary>Returns the fractional number of stars of this rating.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Cue">
            <summary>Contains information about a specific cue, including textual content and formatting data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Cue.AnchorTypeEnd">
            <summary>Anchors the right (for horizontal positions) or bottom (for vertical positions) edge of the cue
            box.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Cue.AnchorTypeMiddle">
            <summary>Anchors the middle of the cue box.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Cue.AnchorTypeStart">
            <summary>Anchors the left (for horizontal positions) or top (for vertical positions) edge of the cue
            box.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.BitmapHeight">
            <summary>The bitmap height as a fraction of the of the viewport size, or <c>#DIMEN_UNSET</c> if the
            bitmap should be displayed at its natural height given the bitmap dimensions and the specified
            <c>#size</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Cue.DimenUnset">
            <summary>An unset position, width or size.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.Empty">
            <summary>The empty cue.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.Line">
            <summary>The position of the cue box within the viewport in the direction orthogonal to the writing
            direction (determined by <c>#verticalType</c>), or <c>#DIMEN_UNSET</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.LineAnchor">
            <summary>The cue box anchor positioned by <c>#line</c> when <c>#lineType</c> is <c>#LINE_TYPE_FRACTION</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.LineType">
            <summary>The type of the <c>#line</c> value.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Cue.LineTypeFraction">
            <summary>Value for <c>#lineType</c> when <c>#line</c> is a fractional position.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Cue.LineTypeNumber">
            <summary>Value for <c>#lineType</c> when <c>#line</c> is a line number.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.Position">
            <summary>The fractional position of the <c>#positionAnchor</c> of the cue box within the viewport in
            the direction orthogonal to <c>#line</c>, or <c>#DIMEN_UNSET</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.PositionAnchor">
            <summary>The cue box anchor positioned by <c>#position</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.ShearDegrees">
            <summary>The shear angle in degrees to be applied to this Cue, expressed in graphics coordinates.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.Size">
            <summary>The size of the cue box in the writing direction specified as a fraction of the viewport size
            in that direction, or <c>#DIMEN_UNSET</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.Text">
            <summary>The cue text, or null if this is an image cue.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.TextSize">
            <summary>The default text size for this cue's text, or <c>#DIMEN_UNSET</c> if this cue has no default
            text size.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.TextSizeType">
            <summary>The default text size type for this cue's text, or <c>#TYPE_UNSET</c> if this cue has no
            default text size.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Cue.TextSizeTypeAbsolute">
            <summary>Text size is measured in number of pixels.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Cue.TextSizeTypeFractional">
            <summary>Text size is measured as a fraction of the viewport size minus the view padding.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Cue.TextSizeTypeFractionalIgnorePadding">
            <summary>Text size is measured as a fraction of the viewport size, ignoring the view padding</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Cue.TypeUnset">
            <summary>An unset anchor, line, text size or vertical type value.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.VerticalType">
            <summary>The vertical formatting of this Cue, or <c>#TYPE_UNSET</c> if the cue has no vertical setting
            (and so should be horizontal).</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Cue.VerticalTypeLr">
            <summary>Vertical left-to-right (e.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Cue.VerticalTypeRl">
            <summary>Vertical right-to-left (e.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.WindowColor">
            <summary>The fill color of the window.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cue.WindowColorSet">
            <summary>Specifies whether or not the <c>#windowColor</c> property is set.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.Cue.#ctor(Java.Lang.ICharSequence)">
            <param name="text">See <c>#text</c>.</param>
            <summary>Creates a text cue whose <c>#textAlignment</c> is null, whose type parameters are set to
            <c>#TYPE_UNSET</c> and whose dimension parameters are set to <c>#DIMEN_UNSET</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.CueGroup">
            <summary>Class to represent the state of active <c>Cue Cues</c> at a particular time.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.CueGroup.Empty">
            <summary>Empty <c>CueGroup</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.CueGroup.#ctor(System.Collections.Generic.IList{Com.Google.Android.Exoplayer2.Text.Cue})">
            <summary>Creates a CueGroup.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Span.HorizontalTextInVerticalContextSpan">
            <summary>A styling span for horizontal text in a vertical context.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Span.ILanguageFeatureSpan">
            <summary>Marker interface for span classes that carry language features rather than style information.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Span.RubySpan">
            <summary>A styling span for ruby text.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Span.RubySpan.Position">
            <summary>The position of the ruby text relative to the base text.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Span.RubySpan.RubyText">
            <summary>The ruby text, i.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Span.SpanUtil">
            <summary>Utility methods for Android <see href="https://developer.android.com/guide/topics/text/spans">span
            styling</see>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Span.TextAnnotation">
            <summary>Properties of a text annotation (i.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Span.TextAnnotation.PositionAfter">
            <summary>For horizontal text, the text annotation should be positioned below the base text.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Span.TextAnnotation.PositionBefore">
            <summary>For horizontal text, the text annotation should be positioned above the base text.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Span.TextAnnotation.PositionUnknown">
            <summary>The text annotation position is unknown.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Span.TextEmphasisSpan">
            <summary>A styling span for text emphasis marks.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Span.TextEmphasisSpan.MarkFill">
            <summary>The mark fill for the text emphasis mark.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Span.TextEmphasisSpan.MarkShape">
            <summary>The mark shape used for text emphasis.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Span.TextEmphasisSpan.Position">
            <summary>The position of the text emphasis relative to the base text.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.ThumbRating">
            <summary>A rating expressed as "thumbs up" or "thumbs down".</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ThumbRating.#ctor">
            <summary>Creates a unrated instance.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.ThumbRating.#ctor(System.Boolean)">
            <param name="isThumbsUp">
              <c>true</c> for "thumbs up", <c>false</c> for "thumbs down".</param>
            <summary>Creates a rated instance.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.ThumbRating.IsThumbsUp">
            <summary>Returns whether the rating is "thumbs up".</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Timeline">
            <summary>A flexible representation of the structure of media.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Timeline.Empty">
            <summary>An empty timeline.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Timeline.IsEmpty">
            <summary>Returns whether the timeline is empty.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Timeline.GetFirstWindowIndex(System.Boolean)">
            <param name="shuffleModeEnabled">Whether shuffling is enabled.</param>
            <summary>Returns the index of the first window in the playback order depending on whether shuffling is
            enabled.</summary>
            <returns>The index of the first window in the playback order, or <c>C#INDEX_UNSET</c> if the
                timeline is empty.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Timeline.GetIndexOfPeriod(Java.Lang.Object)">
            <param name="uid">A unique identifier for a period.</param>
            <summary>Returns the index of the period identified by its unique <c>Period#uid</c>, or <c>C#INDEX_UNSET</c> if the period is not in the timeline.</summary>
            <returns>The index of the period, or <c>C#INDEX_UNSET</c> if the period was not found.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Timeline.GetLastWindowIndex(System.Boolean)">
            <param name="shuffleModeEnabled">Whether shuffling is enabled.</param>
            <summary>Returns the index of the last window in the playback order depending on whether shuffling is
            enabled.</summary>
            <returns>The index of the last window in the playback order, or <c>C#INDEX_UNSET</c> if the
                timeline is empty.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Timeline.GetNextWindowIndex(System.Int32,System.Int32,System.Boolean)">
            <param name="windowIndex">Index of a window in the timeline.</param>
            <param name="repeatMode">A repeat mode.</param>
            <param name="shuffleModeEnabled">Whether shuffling is enabled.</param>
            <summary>Returns the index of the window after the window at index <c>windowIndex</c> depending on the
            <c>repeatMode</c> and whether shuffling is enabled.</summary>
            <returns>The index of the next window, or <c>C#INDEX_UNSET</c> if this is the last window.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Timeline.GetPreviousWindowIndex(System.Int32,System.Int32,System.Boolean)">
            <param name="windowIndex">Index of a window in the timeline.</param>
            <param name="repeatMode">A repeat mode.</param>
            <param name="shuffleModeEnabled">Whether shuffling is enabled.</param>
            <summary>Returns the index of the window before the window at index <c>windowIndex</c> depending on the
            <c>repeatMode</c> and whether shuffling is enabled.</summary>
            <returns>The index of the previous window, or <c>C#INDEX_UNSET</c> if this is the first window.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Timeline.GetUidOfPeriod(System.Int32)">
            <param name="periodIndex">The index of the period.</param>
            <summary>Returns the unique id of the period identified by its index in the timeline.</summary>
            <returns>The unique id of the period.</returns>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.TimelineInvoker.PeriodCount">
            <summary>Returns the number of periods in the timeline.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.TimelineInvoker.WindowCount">
            <summary>Returns the number of windows in the timeline.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.TimelineInvoker.GetIndexOfPeriod(Java.Lang.Object)">
            <param name="uid">A unique identifier for a period.</param>
            <summary>Returns the index of the period identified by its unique <c>Period#uid</c>, or <c>C#INDEX_UNSET</c> if the period is not in the timeline.</summary>
            <returns>The index of the period, or <c>C#INDEX_UNSET</c> if the period was not found.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.TimelineInvoker.GetUidOfPeriod(System.Int32)">
            <param name="periodIndex">The index of the period.</param>
            <summary>Returns the unique id of the period identified by its index in the timeline.</summary>
            <returns>The unique id of the period.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Tracks">
            <summary>Information about groups of tracks.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Tracks.Empty">
            <summary>Empty tracks.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Tracks.#ctor(System.Collections.Generic.IList{Com.Google.Android.Exoplayer2.Tracks.Group})">
            <param name="groups">The <c>Group groups</c> of tracks.</param>
            <summary>Constructs an instance.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Tracks.IsEmpty">
            <summary>Returns <c>true</c> if there are no tracks, and <c>false</c> otherwise.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Tracks.ContainsType(System.Int32)">
            <summary>Returns true if there are tracks of type <c>trackType</c>, and false otherwise.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Tracks.IsTypeSelected(System.Int32)">
            <summary>Returns true if at least one track of the type <c>trackType</c> is selected for playback.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Tracks.IsTypeSupported(System.Int32)">
            <summary>Returns true if at least one track of type <c>trackType</c> is <c>Group#isTrackSupported(int) supported</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Tracks.IsTypeSupported(System.Int32,System.Boolean)">
            <param name="allowExceedsCapabilities">Whether to consider the track as supported if it has a
                supported <c>Format#sampleMimeType MIME type</c>, but otherwise exceeds the advertised
                capabilities of the device. For example, a video track for which there's a corresponding
                decoder whose maximum advertised resolution is exceeded by the resolution of the track.
                Such tracks may be playable in some cases.</param>
            <summary>Returns true if at least one track of type <c>trackType</c> is <c>Group#isTrackSupported(int, boolean) supported</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionOverride">
            <summary>A track selection override, consisting of a <c>TrackGroup</c> and the indices of the tracks
            within the group that should be selected.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionOverride.MediaTrackGroup">
            <summary>The media <c>TrackGroup</c> whose <c>#trackIndices</c> are forced to be selected.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionOverride.#ctor(Com.Google.Android.Exoplayer2.Source.TrackGroup,System.Int32)">
            <param name="mediaTrackGroup">The media <c>TrackGroup</c> for which to override the track selection.</param>
            <param name="trackIndex">The index of the track in the <c>TrackGroup</c> to select.</param>
            <summary>Constructs an instance to force <c>trackIndex</c> in <c>trackGroup</c> to be selected.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionOverride.#ctor(Com.Google.Android.Exoplayer2.Source.TrackGroup,System.Collections.Generic.IList{Java.Lang.Integer})">
            <param name="mediaTrackGroup">The media <c>TrackGroup</c> for which to override the track selection.</param>
            <param name="trackIndices">The indices of the tracks in the <c>TrackGroup</c> to select.</param>
            <summary>Constructs an instance to force <c>trackIndices</c> in <c>trackGroup</c> to be selected.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionOverride.Type">
            <summary>Returns the <c>C.TrackType</c> of the overridden track group.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters">
            <summary>Parameters for controlling track selection.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.DefaultWithoutContext">
            <summary>An instance with default values, except those obtained from the <c>Context</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.FieldCustomIdBase">
            <summary>Defines a minimum field ID value for subclasses to use when implementing <c>#toBundle()</c>
            and <c>Bundleable.Creator</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.ForceHighestSupportedBitrate">
            <summary>Whether to force selection of the highest bitrate audio and video tracks that comply with all
            other constraints.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.ForceLowestBitrate">
            <summary>Whether to force selection of the single lowest bitrate audio and video tracks that comply with
            all other constraints.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.IgnoredTextSelectionFlags">
            <summary>Bitmask of selection flags that are ignored for text track selections.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.MaxAudioBitrate">
            <summary>Maximum allowed audio bitrate in bits per second.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.MaxAudioChannelCount">
            <summary>Maximum allowed audio channel count.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.MaxVideoBitrate">
            <summary>Maximum allowed video bitrate in bits per second.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.MaxVideoFrameRate">
            <summary>Maximum allowed video frame rate in hertz.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.MaxVideoHeight">
            <summary>Maximum allowed video height in pixels.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.MaxVideoWidth">
            <summary>Maximum allowed video width in pixels.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.MinVideoBitrate">
            <summary>Minimum allowed video bitrate in bits per second.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.MinVideoFrameRate">
            <summary>Minimum allowed video frame rate in hertz.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.MinVideoHeight">
            <summary>Minimum allowed video height in pixels.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.MinVideoWidth">
            <summary>Minimum allowed video width in pixels.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.PreferredAudioRoleFlags">
            <summary>The preferred <c>C.RoleFlags</c> for audio tracks.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.PreferredTextRoleFlags">
            <summary>The preferred <c>C.RoleFlags</c> for text tracks.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.PreferredVideoRoleFlags">
            <summary>The preferred <c>C.RoleFlags</c> for video tracks.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.SelectUndeterminedTextLanguage">
            <summary>Whether a text track with undetermined language should be selected if no track with <c>#preferredTextLanguages</c> is available, or if <c>#preferredTextLanguages</c> is unset.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.ViewportHeight">
            <summary>Viewport height in pixels.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.ViewportOrientationMayChange">
            <summary>Whether the viewport orientation may change during playback.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.ViewportWidth">
            <summary>Viewport width in pixels.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Trackselection.TrackSelectionParameters.KeyForField(System.Int32)">
            <summary>Converts the given field number to a string which can be used as a field key when implementing
            <c>#toBundle()</c> and <c>Bundleable.Creator</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.UI.AdOverlayInfo">
            <summary>Provides information about an overlay view shown on top of an ad view group.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.UI.AdOverlayInfo.Purpose">
            <summary>The purpose of the overlay view.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.UI.AdOverlayInfo.PurposeCloseAd">
            <summary>Purpose for ad close buttons overlaying the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.UI.AdOverlayInfo.PurposeControls">
            <summary>Purpose for playback controls overlaying the player.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.UI.AdOverlayInfo.PurposeNotVisible">
            <summary>Purpose for overlays that are not visible.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.UI.AdOverlayInfo.PurposeOther">
            <summary>Purpose for other overlays.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.UI.AdOverlayInfo.ReasonDetail">
            <summary>An optional, detailed reason that the overlay view is needed.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.UI.IAdViewProvider">
            <summary>Provides information about views for the ad playback UI.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.UI.IAdViewProvider.AdOverlayInfos">
            <summary>Returns a list of <c>AdOverlayInfo</c> instances describing views that are on top of the ad
            view group, but that are essential for controlling playback and should be excluded from ad
            viewability measurements.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Upstream.IDataReader">
            <summary>Reads bytes from a data stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Upstream.IDataReader.Read(System.Byte[],System.Int32,System.Int32)">
            <param name="buffer">A target array into which data should be written.</param>
            <param name="offset">The offset into the target array at which to write.</param>
            <param name="length">The maximum number of bytes to read from the input.</param>
            <summary>Reads up to <c>length</c> bytes of data from the input.</summary>
            <returns>The number of bytes read, or <c>C#RESULT_END_OF_INPUT</c> if the input has ended. This
                may be less than <c>length</c> because the end of the input (or available data) was
                reached, the method was interrupted, or the operation was aborted early for another reason.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.Assertions">
            <summary>Provides methods for asserting the truth of expressions and properties.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Assertions.CheckArgument(System.Boolean)">
            <param name="expression">The expression to evaluate.</param>
            <summary>Throws <c>IllegalArgumentException</c> if <c>expression</c> evaluates to false.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Assertions.CheckArgument(System.Boolean,Java.Lang.Object)">
            <param name="expression">The expression to evaluate.</param>
            <param name="errorMessage">The exception message if an exception is thrown. The message is converted
                to a <c>String</c> using <c>String#valueOf(Object)</c>.</param>
            <summary>Throws <c>IllegalArgumentException</c> if <c>expression</c> evaluates to false.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Assertions.CheckIndex(System.Int32,System.Int32,System.Int32)">
            <param name="index">The index to test.</param>
            <param name="start">The start of the allowed range (inclusive).</param>
            <param name="limit">The end of the allowed range (exclusive).</param>
            <summary>Throws <c>IndexOutOfBoundsException</c> if <c>index</c> falls outside the specified bounds.</summary>
            <returns>The <c>index</c> that was validated.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Assertions.CheckMainThread">
            <summary>Throws <c>IllegalStateException</c> if the calling thread is not the application's main
            thread.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Assertions.CheckNotEmpty(System.String)">
            <param name="string">The string to check.</param>
            <summary>Throws <c>IllegalArgumentException</c> if <c>string</c> is null or zero length.</summary>
            <returns>The non-null, non-empty string that was validated.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Assertions.CheckNotEmpty(System.String,Java.Lang.Object)">
            <param name="string">The string to check.</param>
            <param name="errorMessage">The exception message to use if the check fails. The message is converted
                to a string using <c>String#valueOf(Object)</c>.</param>
            <summary>Throws <c>IllegalArgumentException</c> if <c>string</c> is null or zero length.</summary>
            <returns>The non-null, non-empty string that was validated.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Assertions.CheckNotNull(Java.Lang.Object)">
            <param name="&lt;T&gt;&lt;T&gt;">The type of the reference.</param>
            <param name="reference">The reference.</param>
            <summary>Throws <c>NullPointerException</c> if <c>reference</c> is null.</summary>
            <returns>The non-null reference that was validated.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Assertions.CheckNotNull(Java.Lang.Object,Java.Lang.Object)">
            <param name="&lt;T&gt;&lt;T&gt;">The type of the reference.</param>
            <param name="reference">The reference.</param>
            <param name="errorMessage">The exception message to use if the check fails. The message is converted
                to a string using <c>String#valueOf(Object)</c>.</param>
            <summary>Throws <c>NullPointerException</c> if <c>reference</c> is null.</summary>
            <returns>The non-null reference that was validated.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Assertions.CheckState(System.Boolean)">
            <param name="expression">The expression to evaluate.</param>
            <summary>Throws <c>IllegalStateException</c> if <c>expression</c> evaluates to false.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Assertions.CheckState(System.Boolean,Java.Lang.Object)">
            <param name="expression">The expression to evaluate.</param>
            <param name="errorMessage">The exception message if an exception is thrown. The message is converted
                to a <c>String</c> using <c>String#valueOf(Object)</c>.</param>
            <summary>Throws <c>IllegalStateException</c> if <c>expression</c> evaluates to false.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Assertions.CheckStateNotNull(Java.Lang.Object)">
            <param name="&lt;T&gt;&lt;T&gt;">The type of the reference.</param>
            <param name="reference">The reference.</param>
            <summary>Throws <c>IllegalStateException</c> if <c>reference</c> is null.</summary>
            <returns>The non-null reference that was validated.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Assertions.CheckStateNotNull(Java.Lang.Object,Java.Lang.Object)">
            <param name="&lt;T&gt;&lt;T&gt;">The type of the reference.</param>
            <param name="reference">The reference.</param>
            <param name="errorMessage">The exception message to use if the check fails. The message is converted
                to a string using <c>String#valueOf(Object)</c>.</param>
            <summary>Throws <c>IllegalStateException</c> if <c>reference</c> is null.</summary>
            <returns>The non-null reference that was validated.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.AtomicFile">
            <summary>A helper class for performing atomic operations on a file by creating a backup file until a write
            has successfully completed.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.AtomicFile.#ctor(Java.IO.File)">
            <summary>Create a new AtomicFile for a file located at the given File path.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.AtomicFile.Delete">
            <summary>Delete the atomic file.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.AtomicFile.EndWrite(System.IO.Stream)">
            <param name="str">Outer-most wrapper OutputStream used to write to the stream returned by <c>#startWrite()</c>.</param>
            <summary>Call when you have successfully finished writing to the stream returned by <c>#startWrite()</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.AtomicFile.Exists">
            <summary>Returns whether the file or its backup exists.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.AtomicFile.OpenRead">
            <summary>Open the atomic file for reading.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.AtomicFile.StartWrite">
            <summary>Start a new write operation on the file.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.BundleableUtil">
            <summary>Utilities for <c>Bundleable</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.BundleUtil">
            <summary>Utilities for <c>Bundle</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.CodecSpecificDataUtil">
            <summary>Provides utilities for handling various types of codec-specific data.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.CodecSpecificDataUtil.BuildAvcCodecString(System.Int32,System.Int32,System.Int32)">
            <param name="profileIdc">The encoding profile.</param>
            <param name="constraintsFlagsAndReservedZero2Bits">The constraint flags followed by the reserved zero
                2 bits, all contained in the least significant byte of the integer.</param>
            <param name="levelIdc">The encoding level.</param>
            <summary>Builds an RFC 6381 AVC codec string using the provided parameters.</summary>
            <returns>An RFC 6381 AVC codec string built using the provided parameters.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.CodecSpecificDataUtil.BuildCea708InitializationData(System.Boolean)">
            <param name="isWideAspectRatio">Whether the CEA-708 closed caption service is formatted for displays
                with 16:9 aspect ratio.</param>
            <summary>Returns initialization data for formats with MIME type <c>MimeTypes#APPLICATION_CEA708</c>.</summary>
            <returns>Initialization data for formats with MIME type <c>MimeTypes#APPLICATION_CEA708</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.CodecSpecificDataUtil.BuildHevcCodecString(System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32[],System.Int32)">
            <summary>Builds an RFC 6381 HEVC codec string using the provided parameters.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.CodecSpecificDataUtil.BuildNalUnit(System.Byte[],System.Int32,System.Int32)">
            <param name="data">An array containing the data that should follow the NAL start code.</param>
            <param name="offset">The start offset into <c>data</c>.</param>
            <param name="length">The number of bytes to copy from <c>data</c></param>
            <summary>Constructs a NAL unit consisting of the NAL start code followed by the specified data.</summary>
            <returns>The constructed NAL unit.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.CodecSpecificDataUtil.ParseCea708InitializationData(System.Collections.Generic.IList{System.Byte[]})">
            <param name="initializationData">The initialization data to parse.</param>
            <summary>Returns whether the CEA-708 closed caption service with the given initialization data is
            formatted for displays with 16:9 aspect ratio.</summary>
            <returns>Whether the CEA-708 closed caption service is formatted for displays with 16:9 aspect
                ratio.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.CodecSpecificDataUtil.SplitNalUnits(System.Byte[])">
            <param name="data">An array of data.</param>
            <summary>Splits an array of NAL units.</summary>
            <returns>The individual NAL units, or null if the input did not consist of NAL start code
                delimited units.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.ColorParser">
            <summary>Parser for color expressions found in styling formats, e.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ColorParser.ParseCssColor(System.String)">
            <param name="colorExpression">The color expression.</param>
            <summary>Parses a CSS color expression.</summary>
            <returns>The parsed ARGB color.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ColorParser.ParseTtmlColor(System.String)">
            <param name="colorExpression">The color expression.</param>
            <summary>Parses a TTML color expression.</summary>
            <returns>The parsed ARGB color.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.ConditionVariable">
            <summary>An interruptible condition variable.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ConditionVariable.#ctor">
            <summary>Creates an instance using <c>Clock#DEFAULT</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ConditionVariable.#ctor(Com.Google.Android.Exoplayer2.Util.IClock)">
            <param name="clock">The <c>Clock</c> whose <c>Clock#elapsedRealtime()</c> method is used to
                determine when <c>#block(long)</c> should time out.</param>
            <summary>Creates an instance, which starts closed.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.ConditionVariable.IsOpen">
            <summary>Returns whether the condition is opened.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ConditionVariable.Block">
            <summary>Blocks until the condition is opened.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ConditionVariable.Block(System.Int64)">
            <param name="timeoutMs">The maximum time to wait in milliseconds. If <c>timeoutMs &lt;= 0</c> then the
                call will return immediately without blocking.</param>
            <summary>Blocks until the condition is opened or until <c>timeoutMs</c> have passed.</summary>
            <returns>True if the condition was opened, false if the call returns because of the timeout.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ConditionVariable.BlockUninterruptible">
            <summary>Blocks until the condition is open.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ConditionVariable.Close">
            <summary>Closes the condition.</summary>
            <returns>True if the condition variable was closed. False if it was already closed.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ConditionVariable.Open">
            <summary>Opens the condition and releases all threads that are blocked.</summary>
            <returns>True if the condition variable was opened. False if it was already open.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.CopyOnWriteMultiset">
            <param name="&lt;E&gt;&lt;E&gt;">The type of element being stored.</param>
            <summary>An unordered collection of elements that allows duplicates, but also allows access to a set of
            unique elements.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.CopyOnWriteMultiset.Add(Java.Lang.Object)">
            <param name="element">The element to be added.</param>
            <summary>Adds <c>element</c> to the multiset.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.CopyOnWriteMultiset.Count(Java.Lang.Object)">
            <summary>Returns the number of occurrences of an element in this multiset.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.CopyOnWriteMultiset.ElementSet">
            <summary>Returns a snapshot of the unique elements currently in this multiset.</summary>
            <returns>An unmodifiable set containing the unique elements in this multiset.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.CopyOnWriteMultiset.Iterator">
            <summary>Returns an iterator over a snapshot of all the elements currently in this multiset (including
            duplicates).</summary>
            <returns>An unmodifiable iterator over all the elements in this multiset (including duplicates).</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.CopyOnWriteMultiset.Remove(Java.Lang.Object)">
            <param name="element">The element to be removed.</param>
            <summary>Removes <c>element</c> from the multiset.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.EGLSurfaceTexture">
            <summary>Generates a <c>SurfaceTexture</c> using EGL/GLES functions.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.EGLSurfaceTexture.SecureModeNone">
            <summary>No secure EGL surface and context required.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.EGLSurfaceTexture.SecureModeProtectedPbuffer">
            <summary>Creating a secure surface backed by a pixel buffer.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.EGLSurfaceTexture.SecureModeSurfacelessContext">
            <summary>Creating a surfaceless, secured EGL context.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.EGLSurfaceTexture.Init(System.Int32)">
            <param name="secureMode">The <c>SecureMode</c> to be used for EGL surface.</param>
            <summary>Initializes required EGL parameters and creates the <c>SurfaceTexture</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.EGLSurfaceTexture.Release">
            <summary>Releases all allocated resources.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.FileTypes">
            <summary>Defines common file type constants and helper methods.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Ac3">
            <summary>File type for the AC-3 and E-AC-3 formats.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Ac4">
            <summary>File type for the AC-4 format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Adts">
            <summary>File type for the ADTS format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Amr">
            <summary>File type for the AMR format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Avi">
            <summary>File type for the AVI format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Flac">
            <summary>File type for the FLAC format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Flv">
            <summary>File type for the FLV format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Jpeg">
            <summary>File type for the JPEG format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Matroska">
            <summary>File type for the Matroska and WebM formats.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Midi">
            <summary>File type for the MIDI format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Mp3">
            <summary>File type for the MP3 format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Mp4">
            <summary>File type for the MP4 format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Ogg">
            <summary>File type for the Ogg format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Ps">
            <summary>File type for the MPEG-PS format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Ts">
            <summary>File type for the MPEG-TS format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Unknown">
            <summary>Unknown file type.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Wav">
            <summary>File type for the WAV format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.FileTypes.Webvtt">
            <summary>File type for the WebVTT format.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.FileTypes.InferFileTypeFromMimeType(System.String)">
            <summary>Returns the <c>Type</c> corresponding to the MIME type provided.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.FileTypes.InferFileTypeFromResponseHeaders(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}})">
            <summary>Returns the <c>Type</c> corresponding to the response headers provided.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.FlagSet">
            <summary>A set of integer flags.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.FlagSet.Contains(System.Int32)">
            <param name="flag">The flag.</param>
            <summary>Returns whether the set contains the given flag.</summary>
            <returns>Whether the set contains the flag.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.FlagSet.ContainsAny(System.Int32[])">
            <param name="flags">The flags.</param>
            <summary>Returns whether the set contains at least one of the given flags.</summary>
            <returns>Whether the set contains at least one of the flags.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.FlagSet.Get(System.Int32)">
            <param name="index">The index. Must be between 0 (inclusive) and <c>#size()</c> (exclusive).</param>
            <summary>Returns the flag at the given index.</summary>
            <returns>The flag at the given index.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.FlagSet.Size">
            <summary>Returns the number of flags in this set.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.GlProgram">
            <summary>Represents a GLSL shader program.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlProgram.#ctor(System.String,System.String)">
            <param name="vertexShaderGlsl">The vertex shader program.</param>
            <param name="fragmentShaderGlsl">The fragment shader program.</param>
            <summary>Creates a GL shader program from vertex and fragment shader GLSL GLES20 code.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlProgram.BindAttributesAndUniforms">
            <summary>Binds all attributes and uniforms in the program.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlProgram.Delete">
            <summary>Deletes the program.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlProgram.GetAttributeArrayLocationAndEnable(System.String)">
            <summary>Returns the location of an <c>Attribute</c>, which has been enabled as a vertex attribute
            array.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlProgram.GetUniformLocation(System.String)">
            <summary>Returns the location of a <c>Uniform</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlProgram.SetBufferAttribute(System.String,System.Single[],System.Int32)">
            <summary>Sets a float buffer type attribute.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlProgram.SetFloatUniform(System.String,System.Single)">
            <summary>Sets a float type uniform.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlProgram.SetFloatsUniform(System.String,System.Single[])">
            <summary>Sets a float array type uniform.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlProgram.SetSamplerTexIdUniform(System.String,System.Int32,System.Int32)">
            <param name="name">The uniform's name.</param>
            <param name="texId">The texture identifier.</param>
            <param name="texUnitIndex">The texture unit index. Use a different index (0, 1, 2, ...) for each
                texture sampler in the program.</param>
            <summary>Sets a texture sampler type uniform.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlProgram.Use">
            <summary>Uses the program.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.GlUtil">
            <summary>OpenGL ES utilities.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.GlUtil.GlAssertionsEnabled">
            <summary>Whether to throw a <c>GlException</c> in case of an OpenGL error.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.GlUtil.HomogeneousCoordinateVectorSize">
            <summary>Number of elements in a 3d homogeneous coordinate vector describing a vertex.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.GlUtil.LengthNdc">
            <summary>Length of the normalized device coordinate (NDC) space, which spans from -1 to 1.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.GlUtil.IsSurfacelessContextExtensionSupported">
            <summary>Returns whether the <c>#EXTENSION_SURFACELESS_CONTEXT</c> extension is supported.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlUtil.AssertValidTextureSize(System.Int32,System.Int32)">
            <param name="width">The width for a texture.</param>
            <param name="height">The height for a texture.</param>
            <summary>Asserts the texture size is valid.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlUtil.BindTexture(System.Int32,System.Int32)">
            <param name="texId">The texture identifier.</param>
            <param name="textureTarget">The target to which the texture is bound, e.g. <c>GLES20#GL_TEXTURE_2D</c> for a two-dimensional texture or <c>GLES11Ext#GL_TEXTURE_EXTERNAL_OES</c> for an external texture.</param>
            <summary>Binds the texture of the given type with default configuration of GL_LINEAR filtering and
            GL_CLAMP_TO_EDGE wrapping.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlUtil.CheckGlError">
            <summary>If there is an OpenGl error, logs the error and if <c>#glAssertionsEnabled</c> is true throws
            a <c>GlException</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlUtil.CreateBuffer(System.Single[])">
            <param name="data">Used to initialize the new buffer.</param>
            <summary>Allocates a FloatBuffer with the given data.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlUtil.CreateBuffer(System.Int32)">
            <param name="capacity">The new buffer's capacity, in floats.</param>
            <summary>Allocates a FloatBuffer.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlUtil.CreateExternalTexture">
            <summary>Creates a GL_TEXTURE_EXTERNAL_OES with default configuration of GL_LINEAR filtering and
            GL_CLAMP_TO_EDGE wrapping.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlUtil.CreateFboForTexture(System.Int32)">
            <param name="texId">The identifier of the texture to attach to the framebuffer.</param>
            <summary>Returns a new framebuffer for the texture.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlUtil.CreateTexture(System.Int32,System.Int32)">
            <param name="width">of the new texture in pixels</param>
            <param name="height">of the new texture in pixels</param>
            <summary>Returns the texture identifier for a newly-allocated texture with the specified dimensions.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlUtil.CreateVertexBuffer(System.Collections.Generic.IList{System.Single[]})">
            <summary>Flattens the list of 4 element NDC coordinate vectors into a buffer.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlUtil.DeleteTexture(System.Int32)">
            <param name="textureId">The ID of the texture to delete.</param>
            <summary>Deletes a GL texture.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlUtil.GetNormalizedCoordinateBounds">
            <summary>Bounds of normalized device coordinates, commonly used for defining viewport boundaries.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.GlUtil.GetTextureCoordinateBounds">
            <summary>Typical bounds used for sampling from textures.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.Clock.Default">
            <summary>Default <c>Clock</c> to use for all non-test cases.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.IClock">
            <summary>An interface through which system clocks can be read and <c>HandlerWrapper</c>s created.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.IClock.Default">
            <summary>Default <c>Clock</c> to use for all non-test cases.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.IClock.CurrentTimeMillis">
            <summary>Returns the current time in milliseconds since the Unix Epoch.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.IClock.OnThreadBlocked">
            <summary>Notifies the clock that the current thread is about to be blocked and won't return until a
            condition on another thread becomes true.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.IConsumer">
            <summary>Represents an operation that accepts a single input argument and returns no result.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.IConsumer.Accept(Java.Lang.Object)">
            <summary>Performs this operation on the given argument.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.IErrorMessageProvider">
            <summary>Converts throwables into error codes and user readable error messages.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.IHandlerWrapper">
            <summary>An interface to call through to a <c>Handler</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.IHandlerWrapper.HasMessages(System.Int32)">
            <summary>See <c>Handler#hasMessages(int)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.IHandlerWrapper.Post(Java.Lang.IRunnable)">
            <summary>See <c>Handler#post(Runnable)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.IHandlerWrapper.PostAtFrontOfQueue(Java.Lang.IRunnable)">
            <summary>See <c>android.os.Handler#postAtFrontOfQueue(Runnable)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.IHandlerWrapper.PostDelayed(Java.Lang.IRunnable,System.Int64)">
            <summary>See <c>Handler#postDelayed(Runnable, long)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.IHandlerWrapper.RemoveCallbacksAndMessages(Java.Lang.Object)">
            <summary>See <c>Handler#removeCallbacksAndMessages(Object)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.IHandlerWrapper.RemoveMessages(System.Int32)">
            <summary>See <c>Handler#removeMessages(int)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.IHandlerWrapper.SendEmptyMessage(System.Int32)">
            <summary>See <c>Handler#sendEmptyMessage(int)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.IHandlerWrapper.SendEmptyMessageAtTime(System.Int32,System.Int64)">
            <summary>See <c>Handler#sendEmptyMessageAtTime(int, long)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.IHandlerWrapper.SendEmptyMessageDelayed(System.Int32,System.Int32)">
            <summary>See <c>Handler#sendEmptyMessageDelayed(int, long)</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.INonNullApi">
            <summary>Annotation to declare all type usages in the annotated instance as <c>Nonnull</c>, unless
            explicitly marked with a nullable annotation.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.IUnknownNull">
            <summary>Annotation for specifying unknown nullness.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.LibraryLoader">
            <summary>Configurable loader for native libraries.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.LibraryLoader.IsAvailable">
            <summary>Returns whether the underlying libraries are available, loading them if necessary.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.LibraryLoader.LoadLibrary(System.String)">
            <param name="name">The name of the library to load.</param>
            <summary>Should be implemented to call <c>System.loadLibrary(name)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.LibraryLoaderInvoker.LoadLibrary(System.String)">
            <param name="name">The name of the library to load.</param>
            <summary>Should be implemented to call <c>System.loadLibrary(name)</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.ListenerSet">
            <param name="&lt;T&gt;&lt;T&gt;">The listener type.</param>
            <summary>A set of listeners.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ListenerSet.Add(Java.Lang.Object)">
            <param name="listener">The listener to be added.</param>
            <summary>Adds a listener to the set.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ListenerSet.Clear">
            <summary>Removes all listeners from the set.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ListenerSet.FlushEvents">
            <summary>Notifies listeners of events previously enqueued with <c>#queueEvent(int, Event)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ListenerSet.Release">
            <summary>Releases the set of listeners immediately.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ListenerSet.Remove(Java.Lang.Object)">
            <param name="listener">The listener to be removed.</param>
            <summary>Removes a listener from the set.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ListenerSet.Size">
            <summary>Returns the number of added listeners.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.Log">
            <summary>Wrapper around <c>android.util.Log</c> which allows to set the log level and to specify a custom
            log output.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.Log.LogLevelAll">
            <summary>Log level to log all messages.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.Log.LogLevelError">
            <summary>Log level to only log error messages.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.Log.LogLevelInfo">
            <summary>Log level to only log informative, warning and error messages.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.Log.LogLevelOff">
            <summary>Log level to disable all logging.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.Log.LogLevelWarning">
            <summary>Log level to only log warning and error messages.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.Log.LogLevel">
            <summary>Returns current <c>LogLevel</c> for ExoPlayer logcat logging. -or- Sets the <c>LogLevel</c> for ExoPlayer logcat logging.</summary>
            <param name="logLevel">The new <c>LogLevel</c>.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Log.SetLogStackTraces(System.Boolean)">
            <param name="logStackTraces">Whether stack traces will be logged.</param>
            <summary>Sets whether stack traces of <c>Throwable</c>s will be logged to logcat.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.LongArray">
            <summary>An append-only, auto-growing <c>long[]</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.LongArray.#ctor(System.Int32)">
            <param name="initialCapacity">The initial capacity of the array.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.LongArray.Add(System.Int64)">
            <param name="value">The value to append.</param>
            <summary>Appends a value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.LongArray.Get(System.Int32)">
            <param name="index">The index.</param>
            <summary>Returns the value at a specified index.</summary>
            <returns>The corresponding value.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.LongArray.Size">
            <summary>Returns the current size of the array.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.LongArray.ToArray">
            <summary>Copies the current values into a newly allocated primitive array.</summary>
            <returns>The primitive array containing the copied values.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.MediaFormatUtil">
            <summary>Helper class containing utility methods for managing <c>MediaFormat</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.MediaFormatUtil.KeyMaxBitRate">
            <summary>The <c>MediaFormat</c> key for the maximum bitrate in bits per second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.MediaFormatUtil.KeyPcmEncodingExtended">
            <summary>Custom <c>MediaFormat</c> key associated with an integer representing the PCM encoding.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.MediaFormatUtil.KeyPixelWidthHeightRatioFloat">
            <summary>Custom <c>MediaFormat</c> key associated with a float representing the ratio between a pixel's
            width and height.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.MimeTypes">
            <summary>Defines common MIME types and helper methods.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.MimeTypes.CodecEAc3Joc">
            <summary>A non-standard codec string for E-AC3-JOC.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.AllSamplesAreSyncSamples(System.String,System.String)">
            <param name="mimeType">The MIME type of the stream.</param>
            <param name="codec">The RFC 6381 codec string of the stream, or <c>null</c> if unknown.</param>
            <summary>Returns true if it is known that all samples in a stream of the given MIME type and codec are
            guaranteed to be sync samples (i.</summary>
            <returns>Whether it is known that all samples in the stream are guaranteed to be sync samples.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.ContainsCodecsCorrespondingToMimeType(System.String,System.String)">
            <param name="codecs">An RFC 6381 codecs string.</param>
            <param name="mimeType">A MIME type to look for.</param>
            <summary>Returns whether the given <c>codecs</c> string contains a codec which corresponds to the given
            <c>mimeType</c>.</summary>
            <returns>Whether the given <c>codecs</c> string contains a codec which corresponds to the given
                <c>mimeType</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.GetAudioMediaMimeType(System.String)">
            <param name="codecs">An RFC 6381 codecs string.</param>
            <summary>Returns the first audio MIME type derived from an RFC 6381 codecs string.</summary>
            <returns>The first derived audio MIME type, or <c>null</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.GetCodecsCorrespondingToMimeType(System.String,System.String)">
            <param name="codecs">An RFC 6381 codecs string.</param>
            <param name="mimeType">A MIME type to look for.</param>
            <summary>Returns a subsequence of <c>codecs</c> containing the codec strings that correspond to the
            given <c>mimeType</c>.</summary>
            <returns>A subsequence of <c>codecs</c> containing the codec strings that correspond to the
                given <c>mimeType</c>. Returns null if <c>mimeType</c> is null, <c>codecs</c> is null,
                or <c>codecs</c> does not contain a codec that corresponds to <c>mimeType</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.GetEncoding(System.String,System.String)">
            <param name="mimeType">A MIME type.</param>
            <param name="codec">An RFC 6381 codec string, or <c>null</c> if unknown or not applicable.</param>
            <summary>Returns the <c>C.Encoding</c> constant corresponding to the specified audio MIME type and RFC
            6381 codec string, or <c>C#ENCODING_INVALID</c> if the corresponding <c>C.Encoding</c> cannot
            be determined.</summary>
            <returns>The corresponding <c>C.Encoding</c>, or <c>C#ENCODING_INVALID</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.GetMediaMimeType(System.String)">
            <param name="codec">An RFC 6381 codec string.</param>
            <summary>Returns the MIME type corresponding to an RFC 6381 codec string, or <c>null</c> if it could
            not be determined.</summary>
            <returns>The corresponding MIME type, or <c>null</c> if it could not be determined.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.GetMimeTypeFromMp4ObjectType(System.Int32)">
            <param name="objectType">An MP4 object type identifier.</param>
            <summary>Returns the MIME type corresponding to an MP4 object type identifier, as defined in RFC 6381
            and https://mp4ra.</summary>
            <returns>The corresponding MIME type, or <c>null</c> if it could not be determined.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.GetTextMediaMimeType(System.String)">
            <param name="codecs">An RFC 6381 codecs string.</param>
            <summary>Returns the first text MIME type derived from an RFC 6381 codecs string.</summary>
            <returns>The first derived text MIME type, or <c>null</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.GetTrackType(System.String)">
            <param name="mimeType">A MIME type.</param>
            <summary>Returns the <c>C.TrackType track type</c> constant corresponding to a specified MIME type,
            which may be <c>C#TRACK_TYPE_UNKNOWN</c> if it could not be determined.</summary>
            <returns>The corresponding <c>C.TrackType track type</c>, which may be <c>C#TRACK_TYPE_UNKNOWN</c> if it could not be determined.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.GetTrackTypeOfCodec(System.String)">
            <param name="codec">An RFC 6381 codec string.</param>
            <summary>Equivalent to <c>getTrackType(getMediaMimeType(codec))</c>.</summary>
            <returns>The corresponding <c>C.TrackType track type</c>, which may be <c>C#TRACK_TYPE_UNKNOWN</c> if it could not be determined.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.GetVideoMediaMimeType(System.String)">
            <param name="codecs">An RFC 6381 codecs string.</param>
            <summary>Returns the first video MIME type derived from an RFC 6381 codecs string.</summary>
            <returns>The first derived video MIME type, or <c>null</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.IsAudio(System.String)">
            <summary>Returns whether the given string is an audio MIME type.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.IsImage(System.String)">
            <summary>Returns whether the given string is an image MIME type.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.IsMatroska(System.String)">
            <summary>Returns whether the given <c>mimeType</c> is a Matroska MIME type, including WebM.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.IsText(System.String)">
            <summary>Returns whether the given string is a text MIME type, including known text types that use
            &amp;quot;application&amp;quot; as their base type.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.IsVideo(System.String)">
            <summary>Returns whether the given string is a video MIME type.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.NormalizeMimeType(System.String)">
            <param name="mimeType">A MIME type to normalize.</param>
            <summary>Normalizes the MIME type provided so that equivalent MIME types are uniquely represented.</summary>
            <returns>The normalized MIME type, or the argument MIME type if its normalized form is unknown.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.MimeTypes.RegisterCustomMimeType(System.String,System.String,System.Int32)">
            <param name="mimeType">The custom MIME type to register.</param>
            <param name="codecPrefix">The RFC 6381 codec string prefix associated with the MIME type.</param>
            <param name="trackType">The <c>C.TrackType track type</c> associated with the MIME type. This value
                is ignored if the top-level type of <c>mimeType</c> is audio, video or text.</param>
            <summary>Registers a custom MIME type.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.NetworkTypeObserver">
            <summary>Observer for network type changes.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.NetworkTypeObserver.NetworkType">
            <summary>Returns the current network type.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.NetworkTypeObserver.ResetForTests">
            <summary>Resets the network type observer for tests.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.NotificationUtil">
            <summary>Utility methods for displaying <c>Notification Notifications</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.ParsableBitArray">
            <summary>Wraps a byte array, providing methods that allow it to be read as a bitstream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.#ctor">
            <summary>Creates a new instance that initially has no backing data.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.#ctor(System.Byte[])">
            <param name="data">The data to wrap.</param>
            <summary>Creates a new instance that wraps an existing array.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.#ctor(System.Byte[],System.Int32)">
            <param name="data">The data to wrap.</param>
            <param name="limit">The limit in bytes.</param>
            <summary>Creates a new instance that wraps an existing array.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.BytePosition">
            <summary>Returns the current byte offset.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.Position">
            <summary>Returns the current bit offset. -or- Sets the current bit offset.</summary>
            <param name="position">The position to set.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.BitsLeft">
            <summary>Returns the number of bits yet to be read.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.ByteAlign">
            <summary>Aligns the position to the next byte boundary.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.PutInt(System.Int32,System.Int32)">
            <param name="value">The integer whose <c>numBits</c> least significant bits are written into <c>#data</c>.</param>
            <param name="numBits">The number of bits to write.</param>
            <summary>Overwrites <c>numBits</c> from this array using the <c>numBits</c> least significant bits
            from <c>value</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.ReadBit">
            <summary>Reads a single bit.</summary>
            <returns>Whether the bit is set.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.ReadBits(System.Byte[],System.Int32,System.Int32)">
            <param name="buffer">The array into which the read data should be written. The trailing <c>numBits
                % 8</c> bits are written into the most significant bits of the last modified <c>buffer</c>
                byte. The remaining ones are unmodified.</param>
            <param name="offset">The offset in <c>buffer</c> at which the read data should be written.</param>
            <param name="numBits">The number of bits to read.</param>
            <summary>Reads <c>numBits</c> bits into <c>buffer</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.ReadBits(System.Int32)">
            <param name="numBits">The number of bits to read.</param>
            <summary>Reads up to 32 bits.</summary>
            <returns>An integer whose bottom <c>numBits</c> bits hold the read data.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.ReadBitsToLong(System.Int32)">
            <param name="numBits">The number of bits to read.</param>
            <summary>Reads up to 64 bits.</summary>
            <returns>A long whose bottom <c>numBits</c> bits hold the read data.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.ReadBytes(System.Byte[],System.Int32,System.Int32)">
            <param name="buffer">The array into which the read data should be written.</param>
            <param name="offset">The offset in <c>buffer</c> at which the read data should be written.</param>
            <param name="length">The number of bytes to read.</param>
            <summary>Reads the next <c>length</c> bytes into <c>buffer</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.ReadBytesAsString(System.Int32)">
            <param name="length">The number of bytes to read.</param>
            <summary>Reads the next <c>length</c> bytes as a UTF-8 string.</summary>
            <returns>The string encoded by the bytes in UTF-8.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.ReadBytesAsString(System.Int32,Java.Nio.Charset.Charset)">
            <param name="length">The number of bytes to read.</param>
            <param name="charset">The character set of the encoded characters.</param>
            <summary>Reads the next <c>length</c> bytes as a string encoded in <c>Charset</c>.</summary>
            <returns>The string encoded by the bytes in the specified character set.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.Reset(System.Byte[])">
            <param name="data">The array to wrap.</param>
            <summary>Updates the instance to wrap <c>data</c>, and resets the position to zero.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.Reset(System.Byte[],System.Int32)">
            <param name="data">The array to wrap.</param>
            <param name="limit">The limit in bytes.</param>
            <summary>Updates the instance to wrap <c>data</c>, and resets the position to zero.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.Reset(Com.Google.Android.Exoplayer2.Util.ParsableByteArray)">
            <param name="parsableByteArray">The <c>ParsableByteArray</c>.</param>
            <summary>Sets this instance's data, position and limit to match the provided <c>parsableByteArray</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.SkipBit">
            <summary>Skips a single bit.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.SkipBits(System.Int32)">
            <param name="numBits">The number of bits to skip.</param>
            <summary>Skips bits and moves current reading position forward.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableBitArray.SkipBytes(System.Int32)">
            <param name="length">The number of bytes to read.</param>
            <summary>Skips the next <c>length</c> bytes.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.ParsableByteArray">
            <summary>Wraps a byte array, providing a set of methods for parsing data from it.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.#ctor">
            <summary>Creates a new instance that initially has no backing data.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.#ctor(System.Byte[])">
            <param name="data">The array to wrap.</param>
            <summary>Creates a new instance wrapping <c>data</c>, and sets the limit to <c>data.length</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.#ctor(System.Byte[],System.Int32)">
            <param name="data">The data to wrap.</param>
            <param name="limit">The limit to set.</param>
            <summary>Creates a new instance that wraps an existing array.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.#ctor(System.Int32)">
            <param name="limit">The limit to set.</param>
            <summary>Creates a new instance with <c>limit</c> bytes and sets the limit.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.Position">
            <summary>Returns the current offset in the array, in bytes. -or- Sets the reading offset in the array.</summary>
            <param name="position">Byte offset in the array from which to read.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.BytesLeft">
            <summary>Returns the number of bytes yet to be read.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.Capacity">
            <summary>Returns the capacity of the array, which may be larger than the limit.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.EnsureCapacity(System.Int32)">
            <summary>Ensures the backing array is at least <c>requiredCapacity</c> long.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.GetData">
            <summary>Returns the underlying array.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.Limit">
            <summary>Returns the limit.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.PeekChar">
            <summary>Peeks at the next char.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.PeekUnsignedByte">
            <summary>Peeks at the next byte as an unsigned value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadBytes(System.Byte[],System.Int32,System.Int32)">
            <param name="buffer">The array into which the read data should be written.</param>
            <param name="offset">The offset in <c>buffer</c> at which the read data should be written.</param>
            <param name="length">The number of bytes to read.</param>
            <summary>Reads the next <c>length</c> bytes into <c>buffer</c> at <c>offset</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadBytes(Com.Google.Android.Exoplayer2.Util.ParsableBitArray,System.Int32)">
            <param name="bitArray">The <c>ParsableBitArray</c> into which the bytes should be read.</param>
            <param name="length">The number of bytes to write.</param>
            <summary>Reads the next <c>length</c> bytes into <c>bitArray</c>, and resets the position of <c>bitArray</c> to zero.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadBytes(Java.Nio.ByteBuffer,System.Int32)">
            <param name="buffer">The <c>ByteBuffer</c> into which the read data should be written.</param>
            <param name="length">The number of bytes to read.</param>
            <summary>Reads the next <c>length</c> bytes into <c>buffer</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadDelimiterTerminatedString(System.Char)">
            <summary>Reads up to the next delimiter byte (or the limit) as UTF-8 characters.</summary>
            <returns>The string not including any terminating delimiter byte, or null if the end of the data
                has already been reached.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadDouble">
            <summary>Reads the next eight bytes as a 64-bit floating point value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadFloat">
            <summary>Reads the next four bytes as a 32-bit floating point value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadInt">
            <summary>Reads the next four bytes as a signed value</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadInt24">
            <summary>Reads the next three bytes as a signed value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadLine">
            <summary>Reads a line of text.</summary>
            <returns>The line not including any line-termination characters, or null if the end of the data
                has already been reached.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadLittleEndianInt">
            <summary>Reads the next four bytes as a signed value in little endian order.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadLittleEndianInt24">
            <summary>Reads the next three bytes as a signed value in little endian order.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadLittleEndianLong">
            <summary>Reads the next eight bytes as a signed value in little endian order.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadLittleEndianShort">
            <summary>Reads the next two bytes as a signed value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadLittleEndianUnsignedInt">
            <summary>Reads the next four bytes as an unsigned value in little endian order.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadLittleEndianUnsignedInt24">
            <summary>Reads the next three bytes as an unsigned value in little endian order.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadLittleEndianUnsignedIntToInt">
            <summary>Reads the next four bytes as a little endian unsigned integer into an integer, if the top bit
            is a zero.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadLittleEndianUnsignedShort">
            <summary>Reads the next two bytes as an unsigned value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadLong">
            <summary>Reads the next eight bytes as a signed value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadNullTerminatedString">
            <summary>Reads up to the next NUL byte (or the limit) as UTF-8 characters.</summary>
            <returns>The string not including any terminating NUL byte, or null if the end of the data has
                already been reached.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadNullTerminatedString(System.Int32)">
            <param name="length">The number of bytes to read.</param>
            <summary>Reads the next <c>length</c> bytes as UTF-8 characters.</summary>
            <returns>The string, not including any terminating NUL byte.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadShort">
            <summary>Reads the next two bytes as a signed value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadString(System.Int32)">
            <param name="length">The number of bytes to read.</param>
            <summary>Reads the next <c>length</c> bytes as UTF-8 characters.</summary>
            <returns>The string encoded by the bytes.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadString(System.Int32,Java.Nio.Charset.Charset)">
            <param name="length">The number of bytes to read.</param>
            <param name="charset">The character set of the encoded characters.</param>
            <summary>Reads the next <c>length</c> bytes as characters in the specified <c>Charset</c>.</summary>
            <returns>The string encoded by the bytes in the specified character set.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadSynchSafeInt">
            <summary>Reads a Synchsafe integer.</summary>
            <returns>The parsed value.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadUnsignedByte">
            <summary>Reads the next byte as an unsigned value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadUnsignedFixedPoint1616">
            <summary>Reads the next four bytes, returning the integer portion of the fixed point 16.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadUnsignedInt">
            <summary>Reads the next four bytes as an unsigned value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadUnsignedInt24">
            <summary>Reads the next three bytes as an unsigned value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadUnsignedIntToInt">
            <summary>Reads the next four bytes as an unsigned integer into an integer, if the top bit is a zero.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadUnsignedLongToLong">
            <summary>Reads the next eight bytes as an unsigned long into a long, if the top bit is a zero.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadUnsignedShort">
            <summary>Reads the next two bytes as an unsigned value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.ReadUtf8EncodedLong">
            <summary>Reads a long value encoded by UTF-8 encoding</summary>
            <returns>Decoded long value</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.Reset(System.Byte[])">
            <param name="data">The array to wrap.</param>
            <summary>Updates the instance to wrap <c>data</c>, and resets the position to zero and the limit to
            <c>data.length</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.Reset(System.Byte[],System.Int32)">
            <param name="data">The array to wrap.</param>
            <param name="limit">The limit to set.</param>
            <summary>Updates the instance to wrap <c>data</c>, and resets the position to zero.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.Reset(System.Int32)">
            <param name="limit">The limit to set.</param>
            <summary>Resets the position to zero and the limit to the specified value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.SetLimit(System.Int32)">
            <param name="limit">The limit to set.</param>
            <summary>Sets the limit.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableByteArray.SkipBytes(System.Int32)">
            <param name="bytes">The number of bytes to skip.</param>
            <summary>Moves the reading offset by <c>bytes</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.PriorityTaskManager">
            <summary>Allows tasks with associated priorities to control how they proceed relative to one another.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.PriorityTaskManager.Add(System.Int32)">
            <param name="priority">The priority of the task. Larger values indicate higher priorities.</param>
            <summary>Register a new task.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.PriorityTaskManager.Proceed(System.Int32)">
            <param name="priority">The priority of the task.</param>
            <summary>Blocks until the task is allowed to proceed.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.PriorityTaskManager.ProceedNonBlocking(System.Int32)">
            <param name="priority">The priority of the task.</param>
            <summary>A non-blocking variant of <c>#proceed(int)</c>.</summary>
            <returns>Whether the task is allowed to proceed.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.PriorityTaskManager.ProceedOrThrow(System.Int32)">
            <param name="priority">The priority of the task.</param>
            <summary>A throwing variant of <c>#proceed(int)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.PriorityTaskManager.Remove(System.Int32)">
            <param name="priority">The priority of the task.</param>
            <summary>Unregister a task.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.RepeatModeUtil">
            <summary>Util class for repeat mode handling.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.RepeatModeUtil.RepeatToggleModeNone">
            <summary>All repeat mode buttons disabled.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.RepeatModeUtil.RepeatToggleModeOne">
            <summary>"Repeat One" button enabled.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.RepeatModeUtil.GetNextRepeatMode(System.Int32,System.Int32)">
            <param name="currentMode">The current repeat mode.</param>
            <param name="enabledModes">Bitmask of enabled modes.</param>
            <summary>Gets the next repeat mode out of <c>enabledModes</c> starting from <c>currentMode</c>.</summary>
            <returns>The next repeat mode.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.RepeatModeUtil.IsRepeatModeEnabled(System.Int32,System.Int32)">
            <param name="repeatMode">The mode to check.</param>
            <param name="enabledModes">The bitmask representing the enabled modes.</param>
            <summary>Verifies whether a given <c>repeatMode</c> is enabled in the bitmask <c>enabledModes</c>.</summary>
            <returns>
              <c>true</c> if enabled.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.RunnableFutureTask">
            <param name="&lt;R&gt;&lt;R&gt;">The type of the result.</param>
            <param name="&lt;E&gt;&lt;E&gt;">The type of any <c>ExecutionException</c> cause.</param>
            <summary>A <c>RunnableFuture</c> that supports additional uninterruptible operations to query whether
            execution has started and finished.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.RunnableFutureTask.BlockUntilFinished">
            <summary>Blocks until the task has finished, or has been canceled without having been started.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.RunnableFutureTask.BlockUntilStarted">
            <summary>Blocks until the task has started, or has been canceled without having been started.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.RunnableFutureTask.CancelWork">
            <summary>Cancels any work being done by <c>#doWork()</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.RunnableFutureTask.DoWork">
            <summary>Performs the work or computation.</summary>
            <returns>The computed result.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.RunnableFutureTaskInvoker.DoWork">
            <summary>Performs the work or computation.</summary>
            <returns>The computed result.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.SystemClock">
            <summary>The standard implementation of <c>Clock</c>, an instance of which is available via <c>SystemClock#DEFAULT</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.SystemClock.InterfaceConsts.Default">
            <summary>Default <c>Clock</c> to use for all non-test cases.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.TimedValueQueue">
            <summary>A utility class to keep a queue of values with timestamps.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimedValueQueue.#ctor(System.Int32)">
            <summary>Creates a TimedValueBuffer with the given initial buffer size.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimedValueQueue.Add(System.Int64,Java.Lang.Object)">
            <summary>Associates the specified value with the specified timestamp.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimedValueQueue.Clear">
            <summary>Removes all of the values.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimedValueQueue.Poll(System.Int64)">
            <param name="timestamp">The timestamp value.</param>
            <summary>Returns the value with the closest timestamp to the given timestamp.</summary>
            <returns>The value with the closest timestamp or null if the buffer is empty.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimedValueQueue.PollFirst">
            <summary>Removes and returns the first value in the queue, or null if the queue is empty.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimedValueQueue.PollFloor(System.Int64)">
            <param name="timestamp">The timestamp value.</param>
            <summary>Returns the value with the greatest timestamp which is less than or equal to the given
            timestamp.</summary>
            <returns>The value with the greatest timestamp which is less than or equal to the given
                timestamp or null if there is no such value.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimedValueQueue.Size">
            <summary>Returns number of the values buffered.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster">
            <summary>Adjusts and offsets sample timestamps.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster.ModeNoOffset">
            <summary>A special <c>firstSampleTimestampUs</c> value indicating that presentation timestamps should
            not be offset.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster.ModeShared">
            <summary>A special <c>firstSampleTimestampUs</c> value indicating that the adjuster will be shared by
            multiple threads.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster.#ctor(System.Int64)">
            <param name="firstSampleTimestampUs">The desired value of the first adjusted sample timestamp in
                microseconds, or <c>#MODE_NO_OFFSET</c> if timestamps should not be offset, or <c>#MODE_SHARED</c> if the adjuster will be used in shared mode.</param>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster.FirstSampleTimestampUs">
            <summary>Returns the value of the first adjusted sample timestamp in microseconds, or <c>C#TIME_UNSET</c> if timestamps will not be offset or if the adjuster is in shared mode.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster.LastAdjustedTimestampUs">
            <summary>Returns the last adjusted timestamp, in microseconds.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster.TimestampOffsetUs">
            <summary>Returns the offset between the input of <c>#adjustSampleTimestamp(long)</c> and its output, or
            <c>C#TIME_UNSET</c> if the offset has not yet been determined.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster.AdjustSampleTimestamp(System.Int64)">
            <param name="timeUs">The timestamp to adjust in microseconds.</param>
            <summary>Offsets a timestamp in microseconds.</summary>
            <returns>The adjusted timestamp in microseconds.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster.AdjustTsTimestamp(System.Int64)">
            <param name="pts90Khz">A 90 kHz clock MPEG-2 TS presentation timestamp.</param>
            <summary>Scales and offsets an MPEG-2 TS presentation timestamp considering wraparound.</summary>
            <returns>The adjusted timestamp in microseconds.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster.PtsToUs(System.Int64)">
            <param name="pts">A 90 kHz clock timestamp.</param>
            <summary>Converts a 90 kHz clock timestamp to a timestamp in microseconds.</summary>
            <returns>The corresponding value in microseconds.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster.Reset(System.Int64)">
            <param name="firstSampleTimestampUs">The desired value of the first adjusted sample timestamp after
                this reset in microseconds, or <c>#MODE_NO_OFFSET</c> if timestamps should not be offset,
                or <c>#MODE_SHARED</c> if the adjuster will be used in shared mode.</param>
            <summary>Resets the instance.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster.SharedInitializeOrWait(System.Boolean,System.Int64)">
            <param name="canInitialize">Whether the caller is able to initialize the adjuster, if needed.</param>
            <param name="nextSampleTimestampUs">The desired timestamp for the next sample loaded by the calling
                thread, in microseconds. Only used if <c>canInitialize</c> is <c>true</c>.</param>
            <summary>For shared timestamp adjusters, performs necessary initialization actions for a caller.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster.UsToNonWrappedPts(System.Int64)">
            <param name="us">A value in microseconds.</param>
            <summary>Converts a timestamp in microseconds to a 90 kHz clock timestamp.</summary>
            <returns>The corresponding value as a 90 kHz clock timestamp.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TimestampAdjuster.UsToWrappedPts(System.Int64)">
            <param name="us">A value in microseconds.</param>
            <summary>Converts a timestamp in microseconds to a 90 kHz clock timestamp, performing wraparound to keep
            the result within 33-bits.</summary>
            <returns>The corresponding value as a 90 kHz clock timestamp, wrapped to 33 bits.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.TraceUtil">
            <summary>Calls through to <c>android.os.Trace</c> methods on supported API levels.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TraceUtil.BeginSection(System.String)">
            <param name="sectionName">The name of the code section to appear in the trace. This may be at most 127
                Unicode code units long.</param>
            <summary>Writes a trace message to indicate that a given section of code has begun.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.TraceUtil.EndSection">
            <summary>Writes a trace message to indicate that a given section of code has ended.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.UriUtil">
            <summary>Utility methods for manipulating URIs.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.UriUtil.IsAbsolute(System.String)">
            <summary>Returns true if the URI is starting with a scheme component, false otherwise.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.UriUtil.Resolve(System.String,System.String)">
            <param name="baseUri">The base URI.</param>
            <param name="referenceUri">The reference URI to resolve.</param>
            <summary>Performs relative resolution of a <c>referenceUri</c> with respect to a <c>baseUri</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.Util">
            <summary>Miscellaneous utility methods.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.Util.Device">
            <summary>Like <c>Build#DEVICE</c>, but in a place where it can be conveniently overridden for local
            testing.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.Util.DeviceDebugInfo">
            <summary>A concise description of the device that it can be useful to log for debugging purposes.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.Util.EmptyByteArray">
            <summary>An empty byte array.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.Util.Manufacturer">
            <summary>Like <c>Build#MANUFACTURER</c>, but in a place where it can be conveniently overridden for
            local testing.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.Util.Model">
            <summary>Like <c>Build#MODEL</c>, but in a place where it can be conveniently overridden for local
            testing.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.Util.SdkInt">
            <summary>Like <c>android.os.Build.VERSION#SDK_INT</c>, but in a place where it can be conveniently
            overridden for local testing.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.Util.DefaultDisplayLocale">
            <summary>Returns the default <c>Locale.Category#DISPLAY DISPLAY</c><c>Locale</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.AddWithOverflowDefault(System.Int64,System.Int64,System.Int64)">
            <param name="x">The first value.</param>
            <param name="y">The second value.</param>
            <param name="overflowResult">The return value if <c>x + y</c> overflows.</param>
            <summary>Returns the sum of two arguments, or a third argument if the result overflows.</summary>
            <returns>
              <c>x + y</c>, or <c>overflowResult</c> if the result overflows.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.AreEqual(Java.Lang.Object,Java.Lang.Object)">
            <param name="o1">The first object.</param>
            <param name="o2">The second object.</param>
            <summary>Tests two objects for <c>Object#equals(Object)</c> equality, handling the case where one or
            both may be null.</summary>
            <returns>
              <c>o1 == null ? o2 == null : o1.equals(o2)</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.BinarySearchCeil(System.Int32[],System.Int32,System.Boolean,System.Boolean)">
            <param name="array">The array to search.</param>
            <param name="value">The value being searched for.</param>
            <param name="inclusive">If the value is present in the array, whether to return the corresponding
                index. If false then the returned index corresponds to the smallest element strictly
                greater than the value.</param>
            <param name="stayInBounds">If true, then <c>(a.length - 1)</c> will be returned in the case that the
                value is greater than the largest element in the array. If false then <c>a.length</c> will
                be returned.</param>
            <summary>Returns the index of the smallest element in <c>array</c> that is greater than (or optionally
            equal to) a specified <c>value</c>.</summary>
            <returns>The index of the smallest element in <c>array</c> that is greater than (or optionally
                equal to) <c>value</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.BinarySearchCeil(System.Collections.Generic.IList{Java.Lang.IComparable},Java.Lang.Object,System.Boolean,System.Boolean)">
            <param name="&lt;T&gt;&lt;T&gt;">The type of values being searched.</param>
            <param name="list">The list to search.</param>
            <param name="value">The value being searched for.</param>
            <param name="inclusive">If the value is present in the list, whether to return the corresponding
                index. If false then the returned index corresponds to the smallest element strictly
                greater than the value.</param>
            <param name="stayInBounds">If true, then <c>(list.size() - 1)</c> will be returned in the case that
                the value is greater than the largest element in the list. If false then <c>list.size()</c> will be returned.</param>
            <summary>Returns the index of the smallest element in <c>list</c> that is greater than (or optionally
            equal to) a specified value.</summary>
            <returns>The index of the smallest element in <c>list</c> that is greater than (or optionally
                equal to) <c>value</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.BinarySearchCeil(System.Int64[],System.Int64,System.Boolean,System.Boolean)">
            <param name="array">The array to search.</param>
            <param name="value">The value being searched for.</param>
            <param name="inclusive">If the value is present in the array, whether to return the corresponding
                index. If false then the returned index corresponds to the smallest element strictly
                greater than the value.</param>
            <param name="stayInBounds">If true, then <c>(a.length - 1)</c> will be returned in the case that the
                value is greater than the largest element in the array. If false then <c>a.length</c> will
                be returned.</param>
            <summary>Returns the index of the smallest element in <c>array</c> that is greater than (or optionally
            equal to) a specified <c>value</c>.</summary>
            <returns>The index of the smallest element in <c>array</c> that is greater than (or optionally
                equal to) <c>value</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.BinarySearchFloor(Com.Google.Android.Exoplayer2.Util.LongArray,System.Int64,System.Boolean,System.Boolean)">
            <param name="longArray">The array to search.</param>
            <param name="value">The value being searched for.</param>
            <param name="inclusive">If the value is present in the array, whether to return the corresponding
                index. If false then the returned index corresponds to the largest element strictly less
                than the value.</param>
            <param name="stayInBounds">If true, then 0 will be returned in the case that the value is smaller than
                the smallest element in the array. If false then -1 will be returned.</param>
            <summary>Returns the index of the largest element in <c>longArray</c> that is less than (or optionally
            equal to) a specified <c>value</c>.</summary>
            <returns>The index of the largest element in <c>array</c> that is less than (or optionally
                equal to) <c>value</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.BinarySearchFloor(System.Int32[],System.Int32,System.Boolean,System.Boolean)">
            <param name="array">The array to search.</param>
            <param name="value">The value being searched for.</param>
            <param name="inclusive">If the value is present in the array, whether to return the corresponding
                index. If false then the returned index corresponds to the largest element strictly less
                than the value.</param>
            <param name="stayInBounds">If true, then 0 will be returned in the case that the value is smaller than
                the smallest element in the array. If false then -1 will be returned.</param>
            <summary>Returns the index of the largest element in <c>array</c> that is less than (or optionally
            equal to) a specified <c>value</c>.</summary>
            <returns>The index of the largest element in <c>array</c> that is less than (or optionally
                equal to) <c>value</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.BinarySearchFloor(System.Collections.Generic.IList{Java.Lang.IComparable},Java.Lang.Object,System.Boolean,System.Boolean)">
            <param name="&lt;T&gt;&lt;T&gt;">The type of values being searched.</param>
            <param name="list">The list to search.</param>
            <param name="value">The value being searched for.</param>
            <param name="inclusive">If the value is present in the list, whether to return the corresponding
                index. If false then the returned index corresponds to the largest element strictly less
                than the value.</param>
            <param name="stayInBounds">If true, then 0 will be returned in the case that the value is smaller than
                the smallest element in the list. If false then -1 will be returned.</param>
            <summary>Returns the index of the largest element in <c>list</c> that is less than (or optionally equal
            to) a specified <c>value</c>.</summary>
            <returns>The index of the largest element in <c>list</c> that is less than (or optionally equal
                to) <c>value</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.BinarySearchFloor(System.Int64[],System.Int64,System.Boolean,System.Boolean)">
            <param name="array">The array to search.</param>
            <param name="value">The value being searched for.</param>
            <param name="inclusive">If the value is present in the array, whether to return the corresponding
                index. If false then the returned index corresponds to the largest element strictly less
                than the value.</param>
            <param name="stayInBounds">If true, then 0 will be returned in the case that the value is smaller than
                the smallest element in the array. If false then -1 will be returned.</param>
            <summary>Returns the index of the largest element in <c>array</c> that is less than (or optionally
            equal to) a specified <c>value</c>.</summary>
            <returns>The index of the largest element in <c>array</c> that is less than (or optionally
                equal to) <c>value</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.CastNonNull(Java.Lang.Object)">
            <summary>Casts a nullable variable to a non-null variable without runtime null check.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.CastNonNullTypeArray(Java.Lang.Object[])">
            <summary>Casts a nullable type array to a non-null type array without runtime null check.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.CeilDivide(System.Int32,System.Int32)">
            <param name="numerator">The numerator to divide.</param>
            <param name="denominator">The denominator to divide by.</param>
            <summary>Divides a <c>numerator</c> by a <c>denominator</c>, returning the ceiled result.</summary>
            <returns>The ceiled result of the division.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.CeilDivide(System.Int64,System.Int64)">
            <param name="numerator">The numerator to divide.</param>
            <param name="denominator">The denominator to divide by.</param>
            <summary>Divides a <c>numerator</c> by a <c>denominator</c>, returning the ceiled result.</summary>
            <returns>The ceiled result of the division.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.CloseQuietly(Java.IO.ICloseable)">
            <param name="closeable">The <c>Closeable</c> to close.</param>
            <summary>Closes a <c>Closeable</c>, suppressing any <c>IOException</c> that may occur.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.CompareLong(System.Int64,System.Int64)">
            <param name="left">The left operand.</param>
            <param name="right">The right operand.</param>
            <summary>Compares two long values and returns the same value as <c>Long.compare(long, long)</c>.</summary>
            <returns>0, if left == right, a negative value if left &amp;lt; right, or a positive value if left
                &amp;gt; right.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.ConstrainValue(System.Single,System.Single,System.Single)">
            <param name="value">The value to constrain.</param>
            <param name="min">The lower bound.</param>
            <param name="max">The upper bound.</param>
            <summary>Constrains a value to the specified bounds.</summary>
            <returns>The constrained value <c>Math.max(min, Math.min(value, max))</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.ConstrainValue(System.Int32,System.Int32,System.Int32)">
            <param name="value">The value to constrain.</param>
            <param name="min">The lower bound.</param>
            <param name="max">The upper bound.</param>
            <summary>Constrains a value to the specified bounds.</summary>
            <returns>The constrained value <c>Math.max(min, Math.min(value, max))</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.ConstrainValue(System.Int64,System.Int64,System.Int64)">
            <param name="value">The value to constrain.</param>
            <param name="min">The lower bound.</param>
            <param name="max">The upper bound.</param>
            <summary>Constrains a value to the specified bounds.</summary>
            <returns>The constrained value <c>Math.max(min, Math.min(value, max))</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.Contains(Java.Lang.Object[],Java.Lang.Object)">
            <param name="items">The array of items to search.</param>
            <param name="item">The item to search for.</param>
            <summary>Tests whether an <c>items</c> array contains an object equal to <c>item</c>, according to
            <c>Object#equals(Object)</c>.</summary>
            <returns>True if the array contains an object equal to the item being searched for.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.Crc32(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <param name="bytes">Array containing the bytes to update the crc value with.</param>
            <param name="start">The index to the first byte in the byte range to update the crc with.</param>
            <param name="end">The index after the last byte in the byte range to update the crc with.</param>
            <param name="initialValue">The initial value for the crc calculation.</param>
            <summary>Returns the result of updating a CRC-32 with the specified bytes in a "most significant bit
            first" order.</summary>
            <returns>The result of updating the initial value with the specified bytes.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.Crc8(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <param name="bytes">Array containing the bytes to update the crc value with.</param>
            <param name="start">The index to the first byte in the byte range to update the crc with.</param>
            <param name="end">The index after the last byte in the byte range to update the crc with.</param>
            <param name="initialValue">The initial value for the crc calculation.</param>
            <summary>Returns the result of updating a CRC-8 with the specified bytes in a "most significant bit
            first" order.</summary>
            <returns>The result of updating the initial value with the specified bytes.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.EscapeFileName(System.String)">
            <param name="fileName">File name to be escaped.</param>
            <summary>Escapes a string so that it's safe for use as a file or directory name on at least FAT32
            filesystems.</summary>
            <returns>An escaped file name which will be safe for use on at least FAT32 filesystems.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.FromUtf8Bytes(System.Byte[])">
            <param name="bytes">The UTF-8 encoded bytes to decode.</param>
            <summary>Returns a new <c>String</c> constructed by decoding UTF-8 encoded bytes.</summary>
            <returns>The string.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.FromUtf8Bytes(System.Byte[],System.Int32,System.Int32)">
            <param name="bytes">The UTF-8 encoded bytes to decode.</param>
            <param name="offset">The index of the first byte to decode.</param>
            <param name="length">The number of bytes to decode.</param>
            <summary>Returns a new <c>String</c> constructed by decoding UTF-8 encoded bytes in a subarray.</summary>
            <returns>The string.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetAdaptiveMimeTypeForContentType(System.Int32)">
            <summary>Returns the MIME type corresponding to the given adaptive <c>ContentType</c>, or <c>null</c>
            if the content type is not adaptive.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetAudioContentTypeForStreamType(System.Int32)">
            <summary>Returns the <c>C.AudioContentType</c> corresponding to the specified <c>C.StreamType</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetAudioTrackChannelConfig(System.Int32)">
            <param name="channelCount">The number of channels in the input audio.</param>
            <summary>Returns the audio track channel configuration for the given channel count, or <c>AudioFormat#CHANNEL_INVALID</c> if output is not possible.</summary>
            <returns>The channel configuration or <c>AudioFormat#CHANNEL_INVALID</c> if output is not
                possible.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetAudioUsageForStreamType(System.Int32)">
            <summary>Returns the <c>C.AudioUsage</c> corresponding to the specified <c>C.StreamType</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetBigEndianInt(Java.Nio.ByteBuffer,System.Int32)">
            <param name="buffer">The buffer from which to read an int in big endian.</param>
            <param name="index">The index from which the bytes will be read.</param>
            <summary>Absolute <i>get</i> method for reading an int value in <c>ByteOrder#BIG_ENDIAN</c> in a <c>ByteBuffer</c>.</summary>
            <returns>The int value at the given index with the buffer bytes ordered most significant to
                least significant.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetBytesFromHexString(System.String)">
            <param name="hexString">The hex string to convert to bytes.</param>
            <summary>Returns a byte array containing values parsed from the hex string provided.</summary>
            <returns>A byte array containing values parsed from the hex string provided.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetCodecCountOfType(System.String,System.Int32)">
            <summary>Returns the number of codec strings in <c>codecs</c> whose type matches <c>trackType</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetCodecsOfType(System.String,System.Int32)">
            <param name="codecs">A codec sequence string, as defined in RFC 6381.</param>
            <param name="trackType">The <c>C.TrackType track type</c>.</param>
            <summary>Returns a copy of <c>codecs</c> without the codecs whose track type doesn't match <c>trackType</c>.</summary>
            <returns>A copy of <c>codecs</c> without the codecs whose track type doesn't match <c>trackType</c>. If this ends up empty, or <c>codecs</c> is null, returns null.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetCommaDelimitedSimpleClassNames(Java.Lang.Object[])">
            <param name="objects">The objects whose simple class names should be comma delimited and returned.</param>
            <summary>Returns a string with comma delimited simple names of each object's class.</summary>
            <returns>A string with comma delimited simple names of each object's class.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetDrmUuid(System.String)">
            <param name="drmScheme">A UUID string, or <c>"widevine"</c>, <c>"playready"</c> or <c>"clearkey"</c>.</param>
            <summary>Derives a DRM <c>UUID</c> from <c>drmScheme</c>.</summary>
            <returns>The derived <c>UUID</c>, or <c>null</c> if one could not be derived.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetErrorCodeForMediaDrmErrorCode(System.Int32)">
            <summary>Returns a <c>PlaybackException.ErrorCode</c> value that corresponds to the provided <c>MediaDrm.ErrorCodes</c> value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetErrorCodeFromPlatformDiagnosticsInfo(System.String)">
            <param name="diagnosticsInfo">A string from which to parse the error code.</param>
            <summary>Attempts to parse an error code from a diagnostic string found in framework media exceptions.</summary>
            <returns>The parser error code, or 0 if an error code could not be parsed.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetFormatSupportString(System.Int32)">
            <param name="formatSupport">A <c>C.FormatSupport</c> flag.</param>
            <summary>Returns string representation of a <c>C.FormatSupport</c> flag.</summary>
            <returns>A string representation of the flag.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetIntegerCodeForString(System.String)">
            <param name="string">A string no more than four characters long.</param>
            <summary>Returns the integer equal to the big-endian concatenation of the characters in <c>string</c>
            as bytes.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetLocaleLanguageTag(Java.Util.Locale)">
            <param name="locale">A <c>Locale</c>.</param>
            <summary>Returns the language tag for a <c>Locale</c>.</summary>
            <returns>The language tag.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetMediaDurationForPlayoutDuration(System.Int64,System.Single)">
            <param name="playoutDuration">The duration to scale.</param>
            <param name="speed">The factor by which playback is sped up.</param>
            <summary>Returns the duration of media that will elapse in <c>playoutDuration</c>.</summary>
            <returns>The scaled duration, in the same units as <c>playoutDuration</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetNowUnixTimeMs(System.Int64)">
            <param name="elapsedRealtimeEpochOffsetMs">The offset between <c>SystemClock#elapsedRealtime()</c>
                and the time since the Unix epoch, or <c>C#TIME_UNSET</c> if unknown.</param>
            <summary>Returns the current time in milliseconds since the epoch.</summary>
            <returns>The Unix time in milliseconds since the epoch.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetPcmEncoding(System.Int32)">
            <param name="bitDepth">The bit depth. Supported values are 8, 16, 24 and 32.</param>
            <summary>Converts a sample bit depth to a corresponding PCM encoding constant.</summary>
            <returns>The corresponding encoding. One of <c>C#ENCODING_PCM_8BIT</c>, <c>C#ENCODING_PCM_16BIT</c>, <c>C#ENCODING_PCM_24BIT</c> and <c>C#ENCODING_PCM_32BIT</c>. If
                the bit depth is unsupported then <c>C#ENCODING_INVALID</c> is returned.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetPcmFormat(System.Int32,System.Int32,System.Int32)">
            <param name="pcmEncoding">The <c>C.PcmEncoding</c>.</param>
            <param name="channels">The number of channels, or <c>Format#NO_VALUE</c> if unknown.</param>
            <param name="sampleRate">The sample rate in Hz, or <c>Format#NO_VALUE</c> if unknown.</param>
            <summary>Gets a PCM <c>Format</c> with the specified parameters.</summary>
            <returns>The PCM format.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetPcmFrameSize(System.Int32,System.Int32)">
            <param name="pcmEncoding">The encoding of the audio data.</param>
            <param name="channelCount">The channel count.</param>
            <summary>Returns the frame size for audio with <c>channelCount</c> channels in the specified encoding.</summary>
            <returns>The size of one audio frame in bytes.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetPlayoutDurationForMediaDuration(System.Int64,System.Single)">
            <param name="mediaDuration">The duration to scale.</param>
            <summary>Returns the playout duration of <c>mediaDuration</c> of media.</summary>
            <returns>The scaled duration, in the same units as <c>mediaDuration</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetStreamTypeForAudioUsage(System.Int32)">
            <summary>Returns the <c>C.StreamType</c> corresponding to the specified <c>C.AudioUsage</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetStringForTime(Java.Lang.StringBuilder,Java.Util.Formatter,System.Int64)">
            <param name="builder">The builder that <c>formatter</c> will write to.</param>
            <param name="formatter">The formatter.</param>
            <param name="timeMs">The time to format as a string, in milliseconds.</param>
            <summary>Returns the specified millisecond time formatted as a string.</summary>
            <returns>The time formatted as a string.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetSystemLanguageCodes">
            <summary>Returns a non-empty array of normalized IETF BCP 47 language tags for the system languages
            ordered by preference.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetTrackTypeString(System.Int32)">
            <param name="trackType">A <c>C.TrackType</c> constant,</param>
            <summary>Returns a string representation of a <c>C.TrackType</c>.</summary>
            <returns>A string representation of this constant.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.GetUtf8Bytes(System.String)">
            <param name="value">The <c>String</c> whose bytes should be obtained.</param>
            <summary>Returns a new byte array containing the code points of a <c>String</c> encoded using UTF-8.</summary>
            <returns>The code points encoding using UTF-8.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.Gzip(System.Byte[])">
            <summary>Compresses <c>input</c> using gzip and returns the result in a newly allocated byte array.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.InferContentTypeForExtension(System.String)">
            <param name="fileExtension">The extension of the file (excluding the '.').</param>
            <summary>Makes a best guess to infer the <c>ContentType</c> from a file extension.</summary>
            <returns>The content type.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.Inflate(Com.Google.Android.Exoplayer2.Util.ParsableByteArray,Com.Google.Android.Exoplayer2.Util.ParsableByteArray,Java.Util.Zip.Inflater)">
            <param name="input">Wraps the compressed input data.</param>
            <param name="output">Wraps an output buffer to be used to store the uncompressed data. If <c>output.data</c> isn't big enough to hold the uncompressed data, a new array is created. If
                <c>true</c> is returned then the output's position will be set to 0 and its limit will be
                set to the length of the uncompressed data.</param>
            <param name="inflater">If not null, used to uncompressed the input. Otherwise a new <c>Inflater</c>
                is created.</param>
            <summary>Uncompresses the data in <c>input</c>.</summary>
            <returns>Whether the input is uncompressed successfully.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.IsEncodingHighResolutionPcm(System.Int32)">
            <param name="encoding">The encoding of the audio data.</param>
            <summary>Returns whether <c>encoding</c> is high resolution (&amp;gt; 16-bit) PCM.</summary>
            <returns>Whether the encoding is high resolution PCM.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.IsEncodingLinearPcm(System.Int32)">
            <param name="encoding">The encoding of the audio data.</param>
            <summary>Returns whether <c>encoding</c> is one of the linear PCM encodings.</summary>
            <returns>Whether the encoding is one of the PCM encodings.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.IsLinebreak(System.Int32)">
            <param name="c">The character.</param>
            <summary>Returns whether the given character is a carriage return ('\r') or a line feed ('\n').</summary>
            <returns>Whether the given character is a linebreak.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.LinearSearch(System.Int32[],System.Int32)">
            <param name="array">The array to search.</param>
            <param name="value">The value to search for.</param>
            <summary>Returns the index of the first occurrence of <c>value</c> in <c>array</c>, or <c>C#INDEX_UNSET</c> if <c>value</c> is not contained in <c>array</c>.</summary>
            <returns>The index of the first occurrence of value in <c>array</c>, or <c>C#INDEX_UNSET</c>
                if <c>value</c> is not contained in <c>array</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.LinearSearch(System.Int64[],System.Int64)">
            <param name="array">The array to search.</param>
            <param name="value">The value to search for.</param>
            <summary>Returns the index of the first occurrence of <c>value</c> in <c>array</c>, or <c>C#INDEX_UNSET</c> if <c>value</c> is not contained in <c>array</c>.</summary>
            <returns>The index of the first occurrence of value in <c>array</c>, or <c>C#INDEX_UNSET</c>
                if <c>value</c> is not contained in <c>array</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.MoveItems(System.Collections.IList,System.Int32,System.Int32,System.Int32)">
            <param name="items">The list of which to move elements.</param>
            <param name="fromIndex">The index at which the items to move start.</param>
            <param name="toIndex">The index up to which elements should be moved (exclusive).</param>
            <param name="newFromIndex">The new from index.</param>
            <summary>Moves the elements starting at <c>fromIndex</c> to <c>newFromIndex</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.MsToUs(System.Int64)">
            <param name="timeMs">The time in milliseconds.</param>
            <summary>Converts a time in milliseconds to the corresponding time in microseconds, preserving <c>C#TIME_UNSET</c> values and <c>C#TIME_END_OF_SOURCE</c> values.</summary>
            <returns>The corresponding time in microseconds.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.NewSingleThreadExecutor(System.String)">
            <param name="threadName">The name of the thread.</param>
            <summary>Instantiates a new single threaded executor whose thread has the specified name.</summary>
            <returns>The executor.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.NormalizeLanguageCode(System.String)">
            <param name="language">A case-insensitive language code supported by <c>Locale#forLanguageTag(String)</c>.</param>
            <summary>Returns a normalized IETF BCP 47 language tag for <c>language</c>.</summary>
            <returns>The all-lowercase normalized code, or null if the input was null, or <c>language.toLowerCase()</c> if the language could not be normalized.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.NullSafeArrayAppend(Java.Lang.Object[],Java.Lang.Object)">
            <param name="original">The input array.</param>
            <param name="newElement">The element to append.</param>
            <summary>Creates a new array containing <c>original</c> with <c>newElement</c> appended.</summary>
            <returns>The new array.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.NullSafeArrayConcatenation(Java.Lang.Object[],Java.Lang.Object[])">
            <param name="first">The first array.</param>
            <param name="second">The second array.</param>
            <summary>Creates a new array containing the concatenation of two non-null type arrays.</summary>
            <returns>The concatenated result.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.NullSafeArrayCopy(Java.Lang.Object[],System.Int32)">
            <param name="input">The input array.</param>
            <param name="length">The output array length. Must be less or equal to the length of the input array.</param>
            <summary>Copies and optionally truncates an array.</summary>
            <returns>The copied array.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.NullSafeArrayCopyOfRange(Java.Lang.Object[],System.Int32,System.Int32)">
            <param name="input">The input array.</param>
            <param name="from">The start the range to be copied, inclusive</param>
            <param name="to">The end of the range to be copied, exclusive.</param>
            <summary>Copies a subset of an array.</summary>
            <returns>The copied array.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.NullSafeListToArray(System.Collections.IList,Java.Lang.Object[])">
            <param name="list">The list to copy items from.</param>
            <param name="array">The array to copy items to.</param>
            <summary>Copies the contents of <c>list</c> into <c>array</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.ParseXsDateTime(System.String)">
            <param name="value">The attribute value to decode.</param>
            <summary>Parses an xs:dateTime attribute value, returning the parsed timestamp in milliseconds since the
            epoch.</summary>
            <returns>The parsed timestamp in milliseconds since the epoch.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.ParseXsDuration(System.String)">
            <param name="value">The attribute value to decode.</param>
            <summary>Parses an xs:duration attribute value, returning the parsed duration in milliseconds.</summary>
            <returns>The parsed duration in milliseconds.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.RecursiveDelete(Java.IO.File)">
            <summary>Recursively deletes a directory and its content.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.RemoveRange(System.Collections.IList,System.Int32,System.Int32)">
            <param name="list">The List to remove the range from.</param>
            <param name="fromIndex">The first index to be removed (inclusive).</param>
            <param name="toIndex">The last index to be removed (exclusive).</param>
            <summary>Removes an indexed range from a List.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.ScaleLargeTimestamp(System.Int64,System.Int64,System.Int64)">
            <param name="timestamp">The timestamp to scale.</param>
            <param name="multiplier">The multiplier.</param>
            <param name="divisor">The divisor.</param>
            <summary>Scales a large timestamp.</summary>
            <returns>The scaled timestamp.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.ScaleLargeTimestamps(System.Collections.Generic.IList{Java.Lang.Long},System.Int64,System.Int64)">
            <param name="timestamps">The timestamps to scale.</param>
            <param name="multiplier">The multiplier.</param>
            <param name="divisor">The divisor.</param>
            <summary>Applies <c>#scaleLargeTimestamp(long, long, long)</c> to a list of unscaled timestamps.</summary>
            <returns>The scaled timestamps.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.ScaleLargeTimestampsInPlace(System.Int64[],System.Int64,System.Int64)">
            <param name="timestamps">The timestamps to scale.</param>
            <param name="multiplier">The multiplier.</param>
            <param name="divisor">The divisor.</param>
            <summary>Applies <c>#scaleLargeTimestamp(long, long, long)</c> to an array of unscaled timestamps.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.SneakyThrow(Java.Lang.Throwable)">
            <summary>A hacky method that always throws <c>t</c> even if <c>t</c> is a checked exception, and is
            not declared to be thrown.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.Split(System.String,System.String)">
            <param name="value">The string to split.</param>
            <param name="regex">A delimiting regular expression.</param>
            <summary>Splits a string using <c>value.split(regex, -1</c>).</summary>
            <returns>The array of strings resulting from splitting the string.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.SplitAtFirst(System.String,System.String)">
            <param name="value">The string.</param>
            <param name="regex">A delimiting regular expression.</param>
            <summary>Splits the string at the first occurrence of the delimiter <c>regex</c>.</summary>
            <returns>The string split by the first occurrence of the delimiter.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.SplitCodecs(System.String)">
            <param name="codecs">A codec sequence string, as defined in RFC 6381.</param>
            <summary>Splits a codecs sequence string, as defined in RFC 6381, into individual codec strings.</summary>
            <returns>The split codecs, or an array of length zero if the input was empty or null.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.SubtractWithOverflowDefault(System.Int64,System.Int64,System.Int64)">
            <param name="x">The first value.</param>
            <param name="y">The second value.</param>
            <param name="overflowResult">The return value if <c>x - y</c> overflows.</param>
            <summary>Returns the difference between two arguments, or a third argument if the result overflows.</summary>
            <returns>
              <c>x - y</c>, or <c>overflowResult</c> if the result overflows.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.Sum(System.Int64[])">
            <param name="summands">The summands to calculate the sum from.</param>
            <summary>Returns the sum of all summands of the given array.</summary>
            <returns>The sum of all summands.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.ToByteArray(System.IO.Stream)">
            <param name="inputStream">the <c>InputStream</c> to be read. The input stream is not closed by this
                method.</param>
            <summary>Converts the entirety of an <c>InputStream</c> to a byte array.</summary>
            <returns>a byte array containing all of the inputStream's bytes.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.ToHexString(System.Byte[])">
            <param name="bytes">The byte data to convert to hex.</param>
            <summary>Returns a string containing a lower-case hex representation of the bytes provided.</summary>
            <returns>A String containing the hex representation of <c>bytes</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.ToLong(System.Int32,System.Int32)">
            <param name="mostSignificantBits">The 32 most significant bits of the long to return.</param>
            <param name="leastSignificantBits">The 32 least significant bits of the long to return.</param>
            <summary>Returns the long that is composed of the bits of the 2 specified integers.</summary>
            <returns>a long where its 32 most significant bits are <c>mostSignificantBits</c> bits and its
                32 least significant bits are <c>leastSignificantBits</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.ToUnsignedLong(System.Int32)">
            <summary>Converts an integer to a long by unsigned conversion.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.TruncateAsciiFormatted(Java.Lang.ICharSequence,System.Int32)">
            <param name="sequence">The character sequence to truncate.</param>
            <param name="maxLength">The max length to truncate to.</param>
            <summary>Truncates a sequence of ASCII characters to a maximum length.</summary>
            <returns>
              <c>sequence</c> directly if <c>sequence.length() &lt;= maxLength</c>, otherwise <c>sequence.subsequence(0, maxLength</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.TruncateAscii(System.String,System.Int32)">
            <param name="sequence">The character sequence to truncate.</param>
            <param name="maxLength">The max length to truncate to.</param>
            <summary>Truncates a sequence of ASCII characters to a maximum length.</summary>
            <returns>
              <c>sequence</c> directly if <c>sequence.length() &lt;= maxLength</c>, otherwise <c>sequence.subsequence(0, maxLength</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.UnescapeFileName(System.String)">
            <param name="fileName">File name to be unescaped.</param>
            <summary>Unescapes an escaped file or directory name back to its original value.</summary>
            <returns>The original value of the file name before it was escaped, or null if the escaped
                fileName seems invalid.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.Util.UsToMs(System.Int64)">
            <param name="timeUs">The time in microseconds.</param>
            <summary>Converts a time in microseconds to the corresponding time in milliseconds, preserving <c>C#TIME_UNSET</c> and <c>C#TIME_END_OF_SOURCE</c> values.</summary>
            <returns>The corresponding time in milliseconds.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.XmlPullParserUtil">
            <summary>
              <c>XmlPullParser</c> utility methods.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Video.ColorInfo">
            <summary>Stores color info.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.ColorInfo.ColorRange">
            <summary>The color range of the video.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.ColorInfo.ColorSpace">
            <summary>The color space of the video.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.ColorInfo.ColorTransfer">
            <summary>The color transfer characteristics of the video.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.ColorInfo.HdrStaticInfo">
            <summary>HdrStaticInfo as defined in CTA-861.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Video.ColorInfo.#ctor(System.Int32,System.Int32,System.Int32,System.Byte[])">
            <param name="colorSpace">The color space of the video.</param>
            <param name="colorRange">The color range of the video.</param>
            <param name="colorTransfer">The color transfer characteristics of the video.</param>
            <param name="hdrStaticInfo">HdrStaticInfo as defined in CTA-861.3, or null if none specified.</param>
            <summary>Constructs the ColorInfo.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Video.ColorInfo.IsoColorPrimariesToColorSpace(System.Int32)">
            <summary>Returns the <c>C.ColorSpace</c> corresponding to the given ISO color primary code, as per
            table A.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Video.ColorInfo.IsoTransferCharacteristicsToColorTransfer(System.Int32)">
            <summary>Returns the <c>C.ColorTransfer</c> corresponding to the given ISO transfer characteristics
            code, as per table A.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Video.VideoSize">
            <summary>Represents the video size.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.VideoSize.Height">
            <summary>The video height in pixels, 0 when unknown.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.VideoSize.PixelWidthHeightRatio">
            <summary>The width to height ratio of each pixel, 1 if unknown.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.VideoSize.UnappliedRotationDegrees">
            <summary>Clockwise rotation in degrees that the application should apply for the video for it to be
            rendered in the correct orientation.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.VideoSize.Width">
            <summary>The video width in pixels, 0 when unknown.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Video.VideoSize.#ctor(System.Int32,System.Int32)">
            <param name="width">The video width in pixels.</param>
            <param name="height">The video height in pixels.</param>
            <summary>Creates a VideoSize without unapplied rotation or anamorphic content.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Video.VideoSize.#ctor(System.Int32,System.Int32,System.Int32,System.Single)">
            <param name="width">The video width in pixels.</param>
            <param name="height">The video height in pixels.</param>
            <param name="unappliedRotationDegrees">Clockwise rotation in degrees that the application should apply
                for the video for it to be rendered in the correct orientation. See <c>#unappliedRotationDegrees</c>.</param>
            <param name="pixelWidthHeightRatio">The width to height ratio of each pixel. For the normal case of
                square pixels this will be equal to 1.0. Different values are indicative of anamorphic
                content.</param>
            <summary>Creates a VideoSize.</summary>
        </member>
    </members>
</doc>
