<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ExoPlayer.Extractor</name>
    </assembly>
    <members>
        <member name="T:Com.Google.Android.Exoplayer2.Audio.AacUtil">
            <summary>Utility methods for handling AAC audio streams.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.AacUtil.AacEldMaxRateBytesPerSecond">
            <summary>Maximum rate for an AAC ELD audio stream, in bytes per second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.AacUtil.AacHeAudioSampleCount">
            <summary>Number of raw audio samples that are produced per channel when decoding an AAC HE access unit.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.AacUtil.AacHeV1MaxRateBytesPerSecond">
            <summary>Maximum rate for an AAC HE V1 audio stream, in bytes per second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.AacUtil.AacHeV2MaxRateBytesPerSecond">
            <summary>Maximum rate for an AAC HE V2 audio stream, in bytes per second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.AacUtil.AacLcAudioSampleCount">
            <summary>Number of raw audio samples that are produced per channel when decoding an AAC LC access unit.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.AacUtil.AacLcMaxRateBytesPerSecond">
            <summary>Maximum rate for an AAC LC audio stream, in bytes per second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.AacUtil.AacLdAudioSampleCount">
            <summary>Number of raw audio samples that are produced per channel when decoding an AAC LD access unit.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.AacUtil.AacXheAudioSampleCount">
            <summary>Number of raw audio samples that are produced per channel when decoding an AAC XHE access unit.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.AacUtil.AacXheMaxRateBytesPerSecond">
            <summary>Maximum rate for an AAC XHE audio stream, in bytes per second.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.AacUtil.BuildAacLcAudioSpecificConfig(System.Int32,System.Int32)">
            <param name="sampleRate">The sample rate in Hz.</param>
            <param name="channelCount">The channel count.</param>
            <summary>Builds a simple AAC LC AudioSpecificConfig, as defined in ISO 14496-3 1.</summary>
            <returns>The AudioSpecificConfig.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.AacUtil.BuildAudioSpecificConfig(System.Int32,System.Int32,System.Int32)">
            <param name="audioObjectType">The audio object type.</param>
            <param name="sampleRateIndex">The sample rate index.</param>
            <param name="channelConfig">The channel configuration.</param>
            <summary>Builds a simple AudioSpecificConfig, as defined in ISO 14496-3 1.</summary>
            <returns>The AudioSpecificConfig.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Audio.Ac3Util">
            <summary>Utility methods for parsing Dolby TrueHD and (E-)AC-3 syncframes.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.Ac3Util.Ac3MaxRateBytesPerSecond">
            <summary>Maximum rate for an AC-3 audio stream, in bytes per second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.Ac3Util.EAc3MaxRateBytesPerSecond">
            <summary>Maximum rate for an E-AC-3 audio stream, in bytes per second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.Ac3Util.TruehdMaxRateBytesPerSecond">
            <summary>Maximum rate for a TrueHD audio stream, in bytes per second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.Ac3Util.TruehdRechunkSampleCount">
            <summary>The number of samples to store in each output chunk when rechunking TrueHD streams.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.Ac3Util.TruehdSyncframePrefixLength">
            <summary>The number of bytes that must be parsed from a TrueHD syncframe to calculate the sample count.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.Ac3Util.FindTrueHdSyncframeOffset(Java.Nio.ByteBuffer)">
            <param name="buffer">The <c>ByteBuffer</c> within which to find a syncframe.</param>
            <summary>Returns the offset relative to the buffer's position of the start of a TrueHD syncframe, or
            <c>C#INDEX_UNSET</c> if no syncframe was found.</summary>
            <returns>The offset relative to the buffer's position of the start of a TrueHD syncframe, or
                <c>C#INDEX_UNSET</c> if no syncframe was found.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.Ac3Util.ParseAc3SyncframeAudioSampleCount(Java.Nio.ByteBuffer)">
            <param name="buffer">The <c>ByteBuffer</c> from which to read the syncframe.</param>
            <summary>Reads the number of audio samples represented by the given (E-)AC-3 syncframe.</summary>
            <returns>The number of audio samples represented by the syncframe.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.Ac3Util.ParseAc3SyncframeSize(System.Byte[])">
            <param name="data">The syncframe to parse.</param>
            <summary>Returns the size in bytes of the given (E-)AC-3 syncframe.</summary>
            <returns>The syncframe size in bytes. <c>C#LENGTH_UNSET</c> if the input is invalid.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.Ac3Util.ParseTrueHdSyncframeAudioSampleCount(System.Byte[])">
            <param name="syncframe">The bytes from which to read the syncframe. Must be at least <c>#TRUEHD_SYNCFRAME_PREFIX_LENGTH</c> bytes long.</param>
            <summary>Returns the number of audio samples represented by the given TrueHD syncframe, or 0 if the
            buffer is not the start of a syncframe.</summary>
            <returns>The number of audio samples represented by the syncframe, or 0 if the buffer doesn't
                contain the start of a syncframe.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.Ac3Util.ParseTrueHdSyncframeAudioSampleCount(Java.Nio.ByteBuffer,System.Int32)">
            <param name="buffer">The <c>ByteBuffer</c> from which to read the syncframe.</param>
            <param name="offset">The offset of the start of the syncframe relative to the buffer's position.</param>
            <summary>Reads the number of audio samples represented by a TrueHD syncframe.</summary>
            <returns>The number of audio samples represented by the syncframe.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Audio.Ac4Util">
            <summary>Utility methods for parsing AC-4 frames, which are access units in AC-4 bitstreams.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.Ac4Util.HeaderSizeForParser">
            <summary>The header size for AC-4 parser.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.Ac4Util.MaxRateBytesPerSecond">
            <summary>Maximum rate for an AC-4 audio stream, in bytes per second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.Ac4Util.SampleHeaderSize">
            <summary>The AC-4 sync frame header size for extractor.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.Ac4Util.ParseAc4SyncframeAudioSampleCount(Java.Nio.ByteBuffer)">
            <param name="buffer">The <c>ByteBuffer</c> from which to read the syncframe.</param>
            <summary>Reads the number of audio samples represented by the given AC-4 syncframe.</summary>
            <returns>The number of audio samples represented by the syncframe.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.Ac4Util.ParseAc4SyncframeSize(System.Byte[],System.Int32)">
            <param name="data">The syncframe to parse.</param>
            <param name="syncword">The syncword value for the syncframe.</param>
            <summary>Returns the size in bytes of the given AC-4 syncframe.</summary>
            <returns>The syncframe size in bytes, or <c>C#LENGTH_UNSET</c> if the input is invalid.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Audio.DtsUtil">
            <summary>Utility methods for parsing DTS frames.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.DtsUtil.DtsHdMaxRateBytesPerSecond">
            <summary>Maximum rate for a DTS-HD audio stream, in bytes per second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.DtsUtil.DtsMaxRateBytesPerSecond">
            <summary>Maximum rate for a DTS audio stream, in bytes per second.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.DtsUtil.GetDtsFrameSize(System.Byte[])">
            <param name="data">The frame to parse.</param>
            <summary>Returns the size in bytes of the given DTS frame.</summary>
            <returns>The frame's size in bytes.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.DtsUtil.IsSyncWord(System.Int32)">
            <param name="word">An integer.</param>
            <summary>Returns whether a given integer matches a DTS sync word.</summary>
            <returns>Whether a given integer matches a DTS sync word.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.DtsUtil.ParseDtsAudioSampleCount(System.Byte[])">
            <param name="data">The frame to parse.</param>
            <summary>Returns the number of audio samples represented by the given DTS frame.</summary>
            <returns>The number of audio samples represented by the frame.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.DtsUtil.ParseDtsAudioSampleCount(Java.Nio.ByteBuffer)">
            <param name="buffer">The <c>ByteBuffer</c> from which to read.</param>
            <summary>Like <c>#parseDtsAudioSampleCount(byte[])</c> but reads from a <c>ByteBuffer</c>.</summary>
            <returns>The number of audio samples represented by the syncframe.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Audio.MpegAudioUtil">
            <summary>Utility methods for handling MPEG audio streams.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.MpegAudioUtil.MaxFrameSizeBytes">
            <summary>Theoretical maximum frame size for an MPEG audio stream, which occurs when playing a Layer 2
            MPEG 2.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.MpegAudioUtil.MaxRateBytesPerSecond">
            <summary>Maximum rate for an MPEG audio stream corresponding to MPEG-1 layer III (320 kbit/s), in bytes
            per second.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.MpegAudioUtil.GetFrameSize(System.Int32)">
            <summary>Returns the size of the frame associated with <c>header</c>, or <c>C#LENGTH_UNSET</c> if it
            is invalid.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.MpegAudioUtil.ParseMpegAudioFrameSampleCount(System.Int32)">
            <summary>Returns the number of samples per frame associated with <c>headerData</c>, or <c>C#LENGTH_UNSET</c> if it is invalid.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Audio.OpusUtil">
            <summary>Utility methods for handling Opus audio streams.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.OpusUtil.SampleRate">
            <summary>Opus streams are always 48000 Hz.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.OpusUtil.BuildInitializationData(System.Byte[])">
            <param name="header">An Opus Identification Header, as defined by RFC 7845.</param>
            <summary>Builds codec initialization data from an Opus Identification Header.</summary>
            <returns>Codec initialization data suitable for an Opus <see href="https://developer.android.com/reference/android/media/MediaCodec#initialization">MediaCodec</see>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.OpusUtil.GetChannelCount(System.Byte[])">
            <param name="header">An Opus Identification Header, as defined by RFC 7845.</param>
            <summary>Parses the channel count from an Opus Identification Header.</summary>
            <returns>The parsed channel count.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Audio.WavUtil">
            <summary>Utilities for handling WAVE files.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.WavUtil.DataFourcc">
            <summary>Four character code for "data".</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.WavUtil.Ds64Fourcc">
            <summary>Four character code for "ds64".</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.WavUtil.FmtFourcc">
            <summary>Four character code for "fmt ".</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.WavUtil.Rf64Fourcc">
            <summary>Four character code for "RF64".</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.WavUtil.RiffFourcc">
            <summary>Four character code for "RIFF".</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.WavUtil.TypeAlaw">
            <summary>WAVE type value for 8-bit ITU-T G.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.WavUtil.TypeFloat">
            <summary>WAVE type value for float PCM audio data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.WavUtil.TypeImaAdpcm">
            <summary>WAVE type value for IMA ADPCM audio data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.WavUtil.TypeMlaw">
            <summary>WAVE type value for 8-bit ITU-T G.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.WavUtil.TypePcm">
            <summary>WAVE type value for integer PCM audio data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.WavUtil.TypeWaveFormatExtensible">
            <summary>WAVE type value for extended WAVE format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Audio.WavUtil.WaveFourcc">
            <summary>Four character code for "WAVE".</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.WavUtil.GetPcmEncodingForType(System.Int32,System.Int32)">
            <summary>Returns the <c>C.PcmEncoding</c> for the given WAVE format type value, or <c>C#ENCODING_INVALID</c> if the type is not a known PCM type.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Audio.WavUtil.GetTypeForPcmEncoding(System.Int32)">
            <param name="pcmEncoding">The <c>C.PcmEncoding</c> value.</param>
            <summary>Returns the WAVE format type value for the given <c>C.PcmEncoding</c>.</summary>
            <returns>The corresponding WAVE format type.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Amr.AmrExtractor">
            <summary>Extracts data from the AMR containers format (either AMR or AMR-WB).</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Amr.AmrExtractor.Factory">
            <summary>Factory for <c>AmrExtractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Amr.AmrExtractor.FlagEnableConstantBitrateSeeking">
            <summary>Flag to force enable seeking using a constant bitrate assumption in cases where seeking would
            otherwise not be possible.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Amr.AmrExtractor.FlagEnableConstantBitrateSeekingAlways">
            <summary>Like <c>#FLAG_ENABLE_CONSTANT_BITRATE_SEEKING</c>, except that seeking is also enabled in
            cases where the content length (and hence the duration of the media) is unknown.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Amr.AmrExtractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Amr.AmrExtractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Amr.AmrExtractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Amr.AmrExtractor.#ctor(System.Int32)">
            <param name="flags">Flags that control the extractor's behavior.</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Avi.AviExtractor">
            <summary>Extracts data from the AVI container format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Avi.AviExtractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Avi.AviExtractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Avi.AviExtractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.BinarySearchSeeker">
            <summary>A seeker that supports seeking within a stream by searching for the target frame using binary
            search.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.BinarySearchSeeker.IsSeeking">
            <summary>Returns whether the last operation set by <c>#setSeekTargetUs(long)</c> is still pending.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.BinarySearchSeeker.SeekMap">
            <summary>Returns the seek map for the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.BinarySearchSeeker.HandlePendingSeek(Com.Google.Android.Exoplayer2.Extractor.IExtractorInput,Com.Google.Android.Exoplayer2.Extractor.PositionHolder)">
            <param name="input">The <c>ExtractorInput</c> from which data should be read.</param>
            <param name="seekPositionHolder">If <c>Extractor#RESULT_SEEK</c> is returned, this holder is updated
                to hold the position of the required seek.</param>
            <summary>Continues to handle the pending seek operation.</summary>
            <returns>One of the <c>RESULT_</c> values defined in <c>Extractor</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.BinarySearchSeeker.SetSeekTargetUs(System.Int64)">
            <param name="timeUs">The target time in microseconds within the stream.</param>
            <summary>Sets the target time in microseconds within the stream to seek to.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.CeaUtil">
            <summary>Utility methods for handling CEA-608/708 messages.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.ChunkIndex">
            <summary>Defines chunks of samples within a media stream.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.ChunkIndex.DurationsUs">
            <summary>The chunk durations, in microseconds.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.ChunkIndex.Length">
            <summary>The number of chunks.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.ChunkIndex.Offsets">
            <summary>The chunk byte offsets.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.ChunkIndex.Sizes">
            <summary>The chunk sizes, in bytes.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.ChunkIndex.TimesUs">
            <summary>The start time of each chunk, in microseconds.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.ChunkIndex.#ctor(System.Int32[],System.Int64[],System.Int64[],System.Int64[])">
            <param name="sizes">The chunk sizes, in bytes.</param>
            <param name="offsets">The chunk byte offsets.</param>
            <param name="durationsUs">The chunk durations, in microseconds.</param>
            <param name="timesUs">The start time of each chunk, in microseconds.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.ChunkIndex.GetChunkIndex(System.Int64)">
            <param name="timeUs">The time, in microseconds.</param>
            <summary>Obtains the index of the chunk corresponding to a given time.</summary>
            <returns>The index of the corresponding chunk.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.ConstantBitrateSeekMap">
            <summary>A <c>SeekMap</c> implementation that assumes the stream has a constant bitrate and consists of
            multiple independent frames of the same size.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.ConstantBitrateSeekMap.#ctor(System.Int64,System.Int64,System.Int32,System.Int32)">
            <param name="inputLength">The length of the stream in bytes, or <c>C#LENGTH_UNSET</c> if unknown.</param>
            <param name="firstFrameBytePosition">The byte-position of the first frame in the stream.</param>
            <param name="bitrate">The bitrate (which is assumed to be constant in the stream).</param>
            <param name="frameSize">The size of each frame in the stream in bytes. May be <c>C#LENGTH_UNSET</c>
                if unknown.</param>
            <summary>Creates an instance with <c>allowSeeksIfLengthUnknown</c> set to <c>false</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.ConstantBitrateSeekMap.#ctor(System.Int64,System.Int64,System.Int32,System.Int32,System.Boolean)">
            <param name="inputLength">The length of the stream in bytes, or <c>C#LENGTH_UNSET</c> if unknown.</param>
            <param name="firstFrameBytePosition">The byte-position of the first frame in the stream.</param>
            <param name="bitrate">The bitrate (which is assumed to be constant in the stream).</param>
            <param name="frameSize">The size of each frame in the stream in bytes. May be <c>C#LENGTH_UNSET</c>
                if unknown.</param>
            <param name="allowSeeksIfLengthUnknown">Whether to allow seeking even if the length of the content is
                unknown.</param>
            <summary>Creates an instance.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.ConstantBitrateSeekMap.GetTimeUsAtPosition(System.Int64)">
            <param name="position">The stream byte-position.</param>
            <summary>Returns the stream time in microseconds for a given position.</summary>
            <returns>The stream time in microseconds for the given position.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorInput">
            <summary>An <c>ExtractorInput</c> that wraps a <c>DataReader</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory">
            <summary>An <c>ExtractorsFactory</c> that provides an array of extractors for the following formats:
            
            &lt;ul&gt;
              &lt;li&gt;MP4, including M4A (<c>Mp4Extractor</c>)
              &lt;li&gt;fMP4 (<c>FragmentedMp4Extractor</c>)
              &lt;li&gt;Matroska and WebM (<c>MatroskaExtractor</c>)
              &lt;li&gt;Ogg Vorbis/FLAC (<c>OggExtractor</c>&lt;li&gt;MP3 (<c>Mp3Extractor</c>)
              &lt;li&gt;AAC (<c>AdtsExtractor</c>)
              &lt;li&gt;MPEG TS (<c>TsExtractor</c>)
              &lt;li&gt;MPEG PS (<c>PsExtractor</c>)
              &lt;li&gt;FLV (<c>FlvExtractor</c>)
              &lt;li&gt;WAV (<c>WavExtractor</c>)
              &lt;li&gt;AC3 (<c>Ac3Extractor</c>)
              &lt;li&gt;AC4 (<c>Ac4Extractor</c>)
              &lt;li&gt;AMR (<c>AmrExtractor</c>)
              &lt;li&gt;FLAC
                  &lt;ul&gt;
                    &lt;li&gt;If available, the FLAC extension's <c>com.google.android.exoplayer2.ext.flac.FlacExtractor</c> is used.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory.InterfaceConsts.Empty">
            <summary>Extractor factory that returns an empty list of extractors.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory.SetAdtsExtractorFlags(System.Int32)">
            <param name="flags">The flags to use.</param>
            <summary>Sets flags for <c>AdtsExtractor</c> instances created by the factory.</summary>
            <returns>The factory, for convenience.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory.SetAmrExtractorFlags(System.Int32)">
            <param name="flags">The flags to use.</param>
            <summary>Sets flags for <c>AmrExtractor</c> instances created by the factory.</summary>
            <returns>The factory, for convenience.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory.SetConstantBitrateSeekingAlwaysEnabled(System.Boolean)">
            <param name="constantBitrateSeekingAlwaysEnabled">Whether approximate seeking using a constant bitrate
                assumption should be enabled for all extractors that support it, including when the content
                duration is unknown.</param>
            <summary>Convenience method to set whether approximate seeking using constant bitrate assumptions should
            be enabled for all extractors that support it, and if it should be enabled even if the content
            length (and hence the duration of the media) is unknown.</summary>
            <returns>The factory, for convenience.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory.SetConstantBitrateSeekingEnabled(System.Boolean)">
            <param name="constantBitrateSeekingEnabled">Whether approximate seeking using a constant bitrate
                assumption should be enabled for all extractors that support it.</param>
            <summary>Convenience method to set whether approximate seeking using constant bitrate assumptions should
            be enabled for all extractors that support it.</summary>
            <returns>The factory, for convenience.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory.SetFlacExtractorFlags(System.Int32)">
            <param name="flags">The flags to use.</param>
            <summary>Sets flags for <c>FlacExtractor</c> instances created by the factory.</summary>
            <returns>The factory, for convenience.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory.SetFragmentedMp4ExtractorFlags(System.Int32)">
            <param name="flags">The flags to use.</param>
            <summary>Sets flags for <c>FragmentedMp4Extractor</c> instances created by the factory.</summary>
            <returns>The factory, for convenience.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory.SetMatroskaExtractorFlags(System.Int32)">
            <param name="flags">The flags to use.</param>
            <summary>Sets flags for <c>MatroskaExtractor</c> instances created by the factory.</summary>
            <returns>The factory, for convenience.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory.SetMp3ExtractorFlags(System.Int32)">
            <param name="flags">The flags to use.</param>
            <summary>Sets flags for <c>Mp3Extractor</c> instances created by the factory.</summary>
            <returns>The factory, for convenience.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory.SetMp4ExtractorFlags(System.Int32)">
            <param name="flags">The flags to use.</param>
            <summary>Sets flags for <c>Mp4Extractor</c> instances created by the factory.</summary>
            <returns>The factory, for convenience.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory.SetTsExtractorFlags(System.Int32)">
            <param name="flags">The flags to use.</param>
            <summary>Sets flags for <c>DefaultTsPayloadReaderFactory</c>s used by <c>TsExtractor</c> instances
            created by the factory.</summary>
            <returns>The factory, for convenience.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory.SetTsExtractorMode(System.Int32)">
            <param name="mode">The mode to use.</param>
            <summary>Sets the mode for <c>TsExtractor</c> instances created by the factory.</summary>
            <returns>The factory, for convenience.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.DefaultExtractorsFactory.SetTsExtractorTimestampSearchBytes(System.Int32)">
            <param name="timestampSearchBytes">The number of search bytes to use.</param>
            <summary>Sets the number of bytes searched to find a timestamp for <c>TsExtractor</c> instances created
            by the factory.</summary>
            <returns>The factory, for convenience.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.DummyExtractorOutput">
            <summary>A fake <c>ExtractorOutput</c> implementation.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.DummyExtractorOutput.InterfaceConsts.Placeholder">
            <summary>Placeholder <c>ExtractorOutput</c> implementation throwing an <c>UnsupportedOperationException</c> in each method.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.DummyTrackOutput">
            <summary>A fake <c>TrackOutput</c> implementation.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.DummyTrackOutput.InterfaceConsts.SampleDataPartEncryption">
            <summary>Sample encryption data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.DummyTrackOutput.InterfaceConsts.SampleDataPartMain">
            <summary>Main media sample data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.DummyTrackOutput.InterfaceConsts.SampleDataPartSupplemental">
            <summary>Sample supplemental data.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.ExtractorUtil">
            <summary>Extractor related utility methods.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.ExtractorUtil.CheckContainerInput(System.Boolean,System.String)">
            <summary>If <c>expression</c> is false, throws a <c>ParserException#createForMalformedContainer
            container malformed ParserException</c> with the given message.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.ExtractorUtil.PeekFullyQuietly(Com.Google.Android.Exoplayer2.Extractor.IExtractorInput,System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>Peeks data from <c>input</c>, respecting <c>allowEndOfInput</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.ExtractorUtil.PeekToLength(Com.Google.Android.Exoplayer2.Extractor.IExtractorInput,System.Byte[],System.Int32,System.Int32)">
            <param name="input">The stream input to peek the data from.</param>
            <param name="target">A target array into which data should be written.</param>
            <param name="offset">The offset into the target array at which to write.</param>
            <param name="length">The maximum number of bytes to peek from the input.</param>
            <summary>Peeks <c>length</c> bytes from the input peek position, or all the bytes to the end of the
            input if there was less than <c>length</c> bytes left.</summary>
            <returns>The number of bytes peeked.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.ExtractorUtil.ReadFullyQuietly(Com.Google.Android.Exoplayer2.Extractor.IExtractorInput,System.Byte[],System.Int32,System.Int32)">
            <summary>Equivalent to <c>ExtractorInput#readFully(byte[], int, int)</c> except that it returns <c>false</c> instead of throwing an <c>EOFException</c> if the end of input is encountered without
            having fully satisfied the read.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.ExtractorUtil.SkipFullyQuietly(Com.Google.Android.Exoplayer2.Extractor.IExtractorInput,System.Int32)">
            <summary>Equivalent to <c>ExtractorInput#skipFully(int)</c> except that it returns <c>false</c>
            instead of throwing an <c>EOFException</c> if the end of input is encountered without having
            fully satisfied the skip.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacConstants">
            <summary>Defines constants used by the FLAC extractor.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacConstants.MaxFrameHeaderSize">
            <summary>Maximum size of a FLAC frame header in bytes.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacConstants.MetadataBlockHeaderSize">
            <summary>Size of the header of a FLAC metadata block in bytes.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacConstants.MetadataTypePicture">
            <summary>Picture metadata block type.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacConstants.MetadataTypeSeekTable">
            <summary>Seek table metadata block type.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacConstants.MetadataTypeStreamInfo">
            <summary>Stream info metadata block type.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacConstants.MetadataTypeVorbisComment">
            <summary>Vorbis comment metadata block type.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacConstants.MinFrameHeaderSize">
            <summary>Minimum size of a FLAC frame header in bytes.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacConstants.StreamInfoBlockSize">
            <summary>Size of the FLAC stream info block (header included) in bytes.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacConstants.StreamMarkerSize">
            <summary>Size of the FLAC stream marker in bytes.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacExtractor">
            <summary>Extracts data from FLAC container format.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacExtractor.Factory">
            <summary>Factory for <c>FlacExtractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacExtractor.FlagDisableId3Metadata">
            <summary>Flag to disable parsing of ID3 metadata.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacExtractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacExtractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacExtractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacExtractor.#ctor">
            <summary>Constructs an instance with <c>flags = 0</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Flac.FlacExtractor.#ctor(System.Int32)">
            <param name="flags">Flags that control the extractor's behavior. Possible flags are described by
                <c>Flags</c>.</param>
            <summary>Constructs an instance.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.FlacFrameReader">
            <summary>Reads and peeks FLAC frame elements according to the <see href="https://xiph.org/flac/format.html">FLAC format specification</see>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.FlacFrameReader.GetFirstSampleNumber(Com.Google.Android.Exoplayer2.Extractor.IExtractorInput,Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata)">
            <param name="input">Input stream to get the sample number from (starting from the read position).</param>
            <summary>Returns the number of the first sample in the given frame.</summary>
            <returns>The frame first sample number.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.FlacMetadataReader">
            <summary>Reads and peeks FLAC stream metadata elements according to the <see href="https://xiph.org/flac/format.html">FLAC format specification</see>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.FlacMetadataReader.CheckAndPeekStreamMarker(Com.Google.Android.Exoplayer2.Extractor.IExtractorInput)">
            <param name="input">Input stream to peek the stream marker from.</param>
            <summary>Peeks the FLAC stream marker.</summary>
            <returns>Whether the data peeked is the FLAC stream marker.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.FlacMetadataReader.GetFrameStartMarker(Com.Google.Android.Exoplayer2.Extractor.IExtractorInput)">
            <param name="input">Input stream to get the start marker from (starting from the read position).</param>
            <summary>Returns the frame start marker, consisting of the 2 first bytes of the first frame.</summary>
            <returns>The frame start marker (which must be the same for all the frames in the stream).</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.FlacMetadataReader.ReadStreamMarker(Com.Google.Android.Exoplayer2.Extractor.IExtractorInput)">
            <param name="input">Input stream to read the stream marker from.</param>
            <summary>Reads the FLAC stream marker.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.FlacSeekTableSeekMap">
            <summary>A <c>SeekMap</c> implementation for FLAC streams that contain a <see href="https://xiph.org/flac/format.html#metadata_block_seektable">seek table</see>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.FlacSeekTableSeekMap.#ctor(Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata,System.Int64)">
            <param name="flacStreamMetadata">The stream metadata.</param>
            <param name="firstFrameOffset">The byte offset of the first frame in the stream.</param>
            <summary>Creates a seek map from the FLAC stream seek table.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata">
            <summary>Holder for FLAC metadata.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.BitsPerSample">
            <summary>Number of bits per sample.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.BitsPerSampleLookupKey">
            <summary>Lookup key corresponding to the number of bits per sample of the stream, or <c>#NOT_IN_LOOKUP_TABLE</c> if it is not in the lookup table.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.Channels">
            <summary>Number of audio channels.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.MaxBlockSizeSamples">
            <summary>Maximum number of samples per block.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.MaxFrameSize">
            <summary>Maximum frame size in bytes, or 0 if the value is unknown.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.MinBlockSizeSamples">
            <summary>Minimum number of samples per block.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.MinFrameSize">
            <summary>Minimum frame size in bytes, or 0 if the value is unknown.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.NotInLookupTable">
            <summary>Indicates that a value is not in the corresponding lookup table.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.SampleRate">
            <summary>Sample rate in Hertz.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.SampleRateLookupKey">
            <summary>Lookup key corresponding to the stream sample rate, or <c>#NOT_IN_LOOKUP_TABLE</c> if it is
            not in the lookup table.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.TotalSamples">
            <summary>Total number of samples, or 0 if the value is unknown.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.#ctor(System.Byte[],System.Int32)">
            <param name="data">An array containing binary FLAC stream info block.</param>
            <param name="offset">The offset of the stream info block in <c>data</c>, excluding the header (i.e.
                the offset points to the first byte of the minimum block size).</param>
            <summary>Parses binary FLAC stream info metadata.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.ApproxBytesPerFrame">
            <summary>Returns the approximate number of bytes per frame for the current FLAC stream.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.DecodedBitrate">
            <summary>Returns the bitrate of the stream after it's decoded into PCM.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.DurationUs">
            <summary>Returns the duration of the FLAC stream in microseconds, or <c>C#TIME_UNSET</c> if the total
            number of samples if unknown.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.MaxDecodedFrameSize">
            <summary>Returns the maximum size for a decoded frame from the FLAC stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.CopyWithPictureFrames(System.Collections.Generic.IList{Com.Google.Android.Exoplayer2.Metadata.Flac.PictureFrame})">
            <summary>Returns a copy of <c>this</c> with the given picture frames added to the metadata.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.CopyWithVorbisComments(System.Collections.Generic.IList{System.String})">
            <summary>Returns a copy of <c>this</c> with the given Vorbis comments added to the metadata.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.FlacStreamMetadata.GetSampleNumber(System.Int64)">
            <param name="timeUs">Time position in microseconds in the FLAC stream.</param>
            <summary>Returns the sample number of the sample at a given time.</summary>
            <returns>The sample number corresponding to the time position.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Flv.FlvExtractor">
            <summary>Extracts data from the FLV container format.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Flv.FlvExtractor.Factory">
            <summary>Factory for <c>FlvExtractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flv.FlvExtractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flv.FlvExtractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Flv.FlvExtractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.ForwardingExtractorInput">
            <summary>An overridable <c>ExtractorInput</c> implementation forwarding all methods to another input.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.GaplessInfoHolder">
            <summary>Holder for gapless playback information.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.GaplessInfoHolder.EncoderDelay">
            <summary>The number of samples to trim from the start of the decoded audio stream, or <c>Format#NO_VALUE</c> if not set.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.GaplessInfoHolder.EncoderPadding">
            <summary>The number of samples to trim from the end of the decoded audio stream, or <c>Format#NO_VALUE</c> if not set.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.GaplessInfoHolder.#ctor">
            <summary>Creates a new holder for gapless playback information.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.GaplessInfoHolder.HasGaplessInfo">
            <summary>Returns whether <c>#encoderDelay</c> and <c>#encoderPadding</c> have been set.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.GaplessInfoHolder.SetFromXingHeaderValue(System.Int32)">
            <param name="value">The 24-bit value to decode.</param>
            <summary>Populates the holder with data from an MP3 Xing header, if valid and non-zero.</summary>
            <returns>Whether the holder was populated.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Id3Peeker">
            <summary>Peeks data from the beginning of an <c>ExtractorInput</c> to determine if there is any ID3 tag.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Extractor.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Extractor.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Extractor.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.IExtractor">
            <summary>Extracts media data from a container format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.IExtractor.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.IExtractor.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.IExtractor.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractor.Init(Com.Google.Android.Exoplayer2.Extractor.IExtractorOutput)">
            <param name="output">An <c>ExtractorOutput</c> to receive extracted data.</param>
            <summary>Initializes the extractor with an <c>ExtractorOutput</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractor.Read(Com.Google.Android.Exoplayer2.Extractor.IExtractorInput,Com.Google.Android.Exoplayer2.Extractor.PositionHolder)">
            <param name="input">The <c>ExtractorInput</c> from which data should be read.</param>
            <param name="seekPosition">If <c>#RESULT_SEEK</c> is returned, this holder is updated to hold the
                position of the required data.</param>
            <summary>Extracts data read from a provided <c>ExtractorInput</c>.</summary>
            <returns>One of the <c>RESULT_</c> values defined in this interface.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractor.Release">
            <summary>Releases all kept resources.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractor.Seek(System.Int64,System.Int64)">
            <param name="position">The byte offset in the stream from which data will be provided.</param>
            <param name="timeUs">The seek time in microseconds.</param>
            <summary>Notifies the extractor that a seek has occurred.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractor.Sniff(Com.Google.Android.Exoplayer2.Extractor.IExtractorInput)">
            <param name="input">The <c>ExtractorInput</c> from which data should be peeked/read.</param>
            <summary>Returns whether this extractor can extract samples from the <c>ExtractorInput</c>, which must
            provide data from the start of the stream.</summary>
            <returns>Whether this extractor can read the provided input.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput">
            <summary>Provides data to be consumed by an <c>Extractor</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput.AdvancePeekPosition(System.Int32)">
            <param name="length">The number of bytes to peek from the input.</param>
            <summary>Advances the peek position by <c>length</c> bytes.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput.AdvancePeekPosition(System.Int32,System.Boolean)">
            <param name="length">The number of bytes by which to advance the peek position.</param>
            <param name="allowEndOfInput">True if encountering the end of the input before advancing is allowed,
                and should result in <c>false</c> being returned. False if it should be considered an
                error, causing an <c>EOFException</c> to be thrown. See note in class Javadoc.</param>
            <summary>Advances the peek position by <c>length</c> bytes.</summary>
            <returns>True if advancing the peek position was successful. False if <c>allowEndOfInput=true</c> and the end of the input was encountered before advancing over any
                data.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput.Peek(System.Byte[],System.Int32,System.Int32)">
            <param name="target">A target array into which data should be written.</param>
            <param name="offset">The offset into the target array at which to write.</param>
            <param name="length">The maximum number of bytes to peek from the input.</param>
            <summary>Peeks up to <c>length</c> bytes from the peek position.</summary>
            <returns>The number of bytes peeked, or <c>C#RESULT_END_OF_INPUT</c> if the input has ended.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput.PeekFully(System.Byte[],System.Int32,System.Int32)">
            <param name="target">A target array into which data should be written.</param>
            <param name="offset">The offset into the target array at which to write.</param>
            <param name="length">The number of bytes to peek from the input.</param>
            <summary>Equivalent to <c>#peekFully(byte[], int, int, boolean) peekFully(target, offset, length,
            false)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput.PeekFully(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <param name="target">A target array into which data should be written.</param>
            <param name="offset">The offset into the target array at which to write.</param>
            <param name="length">The number of bytes to peek from the input.</param>
            <param name="allowEndOfInput">True if encountering the end of the input having peeked no data is
                allowed, and should result in <c>false</c> being returned. False if it should be
                considered an error, causing an <c>EOFException</c> to be thrown. See note in class
                Javadoc.</param>
            <summary>Like <c>#peek(byte[], int, int)</c>, but peeks the requested <c>length</c> in full.</summary>
            <returns>True if the peek was successful. False if <c>allowEndOfInput=true</c> and the end of
                the input was encountered having peeked no data.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput.Read(System.Byte[],System.Int32,System.Int32)">
            <param name="buffer">A target array into which data should be written.</param>
            <param name="offset">The offset into the target array at which to write.</param>
            <param name="length">The maximum number of bytes to read from the input.</param>
            <summary>Reads up to <c>length</c> bytes from the input and resets the peek position.</summary>
            <returns>The number of bytes read, or <c>C#RESULT_END_OF_INPUT</c> if the input has ended.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput.ReadFully(System.Byte[],System.Int32,System.Int32)">
            <param name="target">A target array into which data should be written.</param>
            <param name="offset">The offset into the target array at which to write.</param>
            <param name="length">The number of bytes to read from the input.</param>
            <summary>Equivalent to <c>#readFully(byte[], int, int, boolean) readFully(target, offset, length,
            false)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput.ReadFully(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <param name="target">A target array into which data should be written.</param>
            <param name="offset">The offset into the target array at which to write.</param>
            <param name="length">The number of bytes to read from the input.</param>
            <param name="allowEndOfInput">True if encountering the end of the input having read no data is
                allowed, and should result in <c>false</c> being returned. False if it should be
                considered an error, causing an <c>EOFException</c> to be thrown. See note in class
                Javadoc.</param>
            <summary>Like <c>#read(byte[], int, int)</c>, but reads the requested <c>length</c> in full.</summary>
            <returns>True if the read was successful. False if <c>allowEndOfInput=true</c> and the end of
                the input was encountered having read no data.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput.ResetPeekPosition">
            <summary>Resets the peek position to equal the current read position.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput.SetRetryPosition(System.Int64,Java.Lang.Object)">
            <param name="&lt;E&gt;&lt;E&gt;">Type of <c>Throwable</c> to be thrown.</param>
            <param name="position">The required retry position.</param>
            <param name="e">
              <c>Throwable</c> to be thrown.</param>
            <summary>Called when reading fails and the required retry position is different from the last position.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput.Skip(System.Int32)">
            <param name="length">The maximum number of bytes to skip from the input.</param>
            <summary>Like <c>#read(byte[], int, int)</c>, except the data is skipped instead of read.</summary>
            <returns>The number of bytes skipped, or <c>C#RESULT_END_OF_INPUT</c> if the input has ended.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput.SkipFully(System.Int32)">
            <param name="length">The number of bytes to skip from the input.</param>
            <summary>Like <c>#readFully(byte[], int, int)</c>, except the data is skipped instead of read.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorInput.SkipFully(System.Int32,System.Boolean)">
            <param name="length">The number of bytes to skip from the input.</param>
            <param name="allowEndOfInput">True if encountering the end of the input having skipped no data is
                allowed, and should result in <c>false</c> being returned. False if it should be
                considered an error, causing an <c>EOFException</c> to be thrown. See note in class
                Javadoc.</param>
            <summary>Like <c>#readFully(byte[], int, int, boolean)</c>, except the data is skipped instead of read.</summary>
            <returns>True if the skip was successful. False if <c>allowEndOfInput=true</c> and the end of
                the input was encountered having skipped no data.</returns>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.ExtractorOutput.Placeholder">
            <summary>Placeholder <c>ExtractorOutput</c> implementation throwing an <c>UnsupportedOperationException</c> in each method.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.IExtractorOutput">
            <summary>Receives stream level data extracted by an <c>Extractor</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.IExtractorOutput.Placeholder">
            <summary>Placeholder <c>ExtractorOutput</c> implementation throwing an <c>UnsupportedOperationException</c> in each method.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorOutput.EndTracks">
            <summary>Called when all tracks have been identified, meaning no new <c>trackId</c> values will be
            passed to <c>#track(int, int)</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorOutput.SeekMap(Com.Google.Android.Exoplayer2.Extractor.ISeekMap)">
            <param name="seekMap">The extracted <c>SeekMap</c>.</param>
            <summary>Called when a <c>SeekMap</c> has been extracted from the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorOutput.Track(System.Int32,System.Int32)">
            <param name="id">A track identifier.</param>
            <param name="type">The <c>C.TrackType track type</c>.</param>
            <summary>Called by the <c>Extractor</c> to get the <c>TrackOutput</c> for a specific track.</summary>
            <returns>The <c>TrackOutput</c> for the given track identifier.</returns>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.ExtractorsFactory.Empty">
            <summary>Extractor factory that returns an empty list of extractors.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.IExtractorsFactory">
            <summary>Factory for arrays of <c>Extractor</c> instances.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.IExtractorsFactory.Empty">
            <summary>Extractor factory that returns an empty list of extractors.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IExtractorsFactory.CreateExtractors">
            <summary>Returns an array of new <c>Extractor</c> instances.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.IndexSeekMap">
            <summary>A <c>SeekMap</c> implementation based on a mapping between times and positions in the input
            stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.IndexSeekMap.#ctor(System.Int64[],System.Int64[],System.Int64)">
            <param name="positions">The positions in the stream corresponding to <c>timesUs</c>, in bytes.</param>
            <param name="timesUs">The times corresponding to <c>positions</c>, in microseconds.</param>
            <param name="durationUs">The duration of the input stream, or <c>C#TIME_UNSET</c> if it is unknown.</param>
            <summary>Creates an instance.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.ISeekMap">
            <summary>Maps seek positions (in microseconds) to corresponding positions (byte offsets) in the stream.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TrackOutput.SampleDataPartEncryption">
            <summary>Sample encryption data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TrackOutput.SampleDataPartMain">
            <summary>Main media sample data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TrackOutput.SampleDataPartSupplemental">
            <summary>Sample supplemental data.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.ITrackOutput">
            <summary>Receives track level data extracted by an <c>Extractor</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.ITrackOutput.SampleDataPartEncryption">
            <summary>Sample encryption data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.ITrackOutput.SampleDataPartMain">
            <summary>Main media sample data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.ITrackOutput.SampleDataPartSupplemental">
            <summary>Sample supplemental data.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Jpeg.JpegExtractor">
            <summary>Extracts JPEG image using the Exif format.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Jpeg.JpegExtractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Jpeg.JpegExtractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Jpeg.JpegExtractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Jpeg.StartOffsetExtractorOutput">
            <summary>An extractor output that wraps another extractor output and applies a give start byte offset to
            seek positions.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Jpeg.StartOffsetExtractorOutput.InterfaceConsts.Placeholder">
            <summary>Placeholder <c>ExtractorOutput</c> implementation throwing an <c>UnsupportedOperationException</c> in each method.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Jpeg.StartOffsetExtractorOutput.#ctor(System.Int64,Com.Google.Android.Exoplayer2.Extractor.IExtractorOutput)">
            <summary>Creates a new wrapper reading from the given start byte offset.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.EbmlProcessor.ElementTypeBinary">
            <summary>Type for binary elements.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.EbmlProcessor.ElementTypeFloat">
            <summary>Type for IEEE floating point value elements of either 4 or 8 bytes.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.EbmlProcessor.ElementTypeMaster">
            <summary>Type for elements that contain child elements.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.EbmlProcessor.ElementTypeString">
            <summary>Type for string elements.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.EbmlProcessor.ElementTypeUnknown">
            <summary>Type for unknown elements.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.EbmlProcessor.ElementTypeUnsignedInt">
            <summary>Type for integer value elements of up to 8 bytes.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor">
            <summary>Defines EBML element IDs/types and processes events.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.ElementTypeBinary">
            <summary>Type for binary elements.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.ElementTypeFloat">
            <summary>Type for IEEE floating point value elements of either 4 or 8 bytes.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.ElementTypeMaster">
            <summary>Type for elements that contain child elements.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.ElementTypeString">
            <summary>Type for string elements.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.ElementTypeUnknown">
            <summary>Type for unknown elements.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.ElementTypeUnsignedInt">
            <summary>Type for integer value elements of up to 8 bytes.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.BinaryElement(System.Int32,System.Int32,Com.Google.Android.Exoplayer2.Extractor.IExtractorInput)">
            <param name="id">The element ID.</param>
            <param name="contentsSize">The element's content size.</param>
            <param name="input">The <c>ExtractorInput</c> from which data should be read.</param>
            <summary>Called when a binary element is encountered.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.EndMasterElement(System.Int32)">
            <param name="id">The element ID.</param>
            <summary>Called when the end of a master element is encountered.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.FloatElement(System.Int32,System.Double)">
            <param name="id">The element ID.</param>
            <param name="value">The float value that the element contains</param>
            <summary>Called when a float element is encountered.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.GetElementType(System.Int32)">
            <param name="id">The element ID to map.</param>
            <summary>Maps an element ID to a corresponding type.</summary>
            <returns>One of <c>#ELEMENT_TYPE_UNKNOWN</c>, <c>#ELEMENT_TYPE_MASTER</c>, <c>#ELEMENT_TYPE_UNSIGNED_INT</c>, <c>#ELEMENT_TYPE_STRING</c>, <c>#ELEMENT_TYPE_BINARY</c> and
                <c>#ELEMENT_TYPE_FLOAT</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.IntegerElement(System.Int32,System.Int64)">
            <param name="id">The element ID.</param>
            <param name="value">The integer value that the element contains.</param>
            <summary>Called when an integer element is encountered.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.IsLevel1Element(System.Int32)">
            <param name="id">The element ID.</param>
            <summary>Checks if the given id is that of a level 1 element.</summary>
            <returns>Whether the given id is that of a level 1 element.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.StartMasterElement(System.Int32,System.Int64,System.Int64)">
            <param name="id">The element ID.</param>
            <param name="contentPosition">The position of the start of the element's content in the stream.</param>
            <param name="contentSize">The size of the element's content in bytes.</param>
            <summary>Called when the start of a master element is encountered.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.IEbmlProcessor.StringElement(System.Int32,System.String)">
            <param name="id">The element ID.</param>
            <param name="value">The string value that the element contains.</param>
            <summary>Called when a string element is encountered.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor">
            <summary>Extracts data from the Matroska and WebM container formats.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor.Factory">
            <summary>Factory for <c>MatroskaExtractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor.FlagDisableSeekForCues">
            <summary>Flag to disable seeking for cues.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor.BinaryElement(System.Int32,System.Int32,Com.Google.Android.Exoplayer2.Extractor.IExtractorInput)">
            <summary>Called when a binary element is encountered.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor.EndMasterElement(System.Int32)">
            <summary>Called when the end of a master element is encountered.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor.FloatElement(System.Int32,System.Double)">
            <summary>Called when a float element is encountered.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor.GetElementType(System.Int32)">
            <summary>Maps an element ID to a corresponding type.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor.IntegerElement(System.Int32,System.Int64)">
            <summary>Called when an integer element is encountered.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor.IsLevel1Element(System.Int32)">
            <summary>Checks if the given id is that of a level 1 element.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor.StartMasterElement(System.Int32,System.Int64,System.Int64)">
            <summary>Called when the start of a master element is encountered.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mkv.MatroskaExtractor.StringElement(System.Int32,System.String)">
            <summary>Called when a string element is encountered.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Mp3.Mp3Extractor">
            <summary>Extracts data from the MP3 container format.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp3.Mp3Extractor.Factory">
            <summary>Factory for <c>Mp3Extractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp3.Mp3Extractor.FlagDisableId3Metadata">
            <summary>Flag to disable parsing of ID3 metadata.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp3.Mp3Extractor.FlagEnableConstantBitrateSeeking">
            <summary>Flag to force enable seeking using a constant bitrate assumption in cases where seeking would
            otherwise not be possible.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp3.Mp3Extractor.FlagEnableConstantBitrateSeekingAlways">
            <summary>Like <c>#FLAG_ENABLE_CONSTANT_BITRATE_SEEKING</c>, except that seeking is also enabled in
            cases where the content length (and hence the duration of the media) is unknown.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp3.Mp3Extractor.FlagEnableIndexSeeking">
            <summary>Flag to force index seeking, in which a time-to-byte mapping is built as the file is read.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp3.Mp3Extractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp3.Mp3Extractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp3.Mp3Extractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp3.Mp3Extractor.#ctor(System.Int32)">
            <param name="flags">Flags that control the extractor's behavior.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp3.Mp3Extractor.#ctor(System.Int32,System.Int64)">
            <param name="flags">Flags that control the extractor's behavior.</param>
            <param name="forcedFirstSampleTimestampUs">A timestamp to force for the first sample, or <c>C#TIME_UNSET</c> if forcing is not required.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp3.Mp3Extractor.DisableSeeking">
            <summary>Disables the extractor from being able to seek through the media.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Mp4.FragmentedMp4Extractor">
            <summary>Extracts data from the FMP4 container format.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.FragmentedMp4Extractor.Factory">
            <summary>Factory for <c>FragmentedMp4Extractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.FragmentedMp4Extractor.FlagEnableEmsgTrack">
            <summary>Flag to indicate that the extractor should output an event message metadata track.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.FragmentedMp4Extractor.FlagWorkaroundEveryVideoFrameIsSyncFrame">
            <summary>Flag to work around an issue in some video streams where every frame is marked as a sync frame.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.FragmentedMp4Extractor.FlagWorkaroundIgnoreTfdtBox">
            <summary>Flag to ignore any tfdt boxes in the stream.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.FragmentedMp4Extractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.FragmentedMp4Extractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.FragmentedMp4Extractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp4.FragmentedMp4Extractor.#ctor(System.Int32)">
            <param name="flags">Flags that control the extractor's behavior.</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Mp4.Mp4Extractor">
            <summary>Extracts data from the MP4 container format.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.Mp4Extractor.Factory">
            <summary>Factory for <c>Mp4Extractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.Mp4Extractor.FlagReadMotionPhotoMetadata">
            <summary>Flag to extract <c>MotionPhotoMetadata</c> from HEIC motion photos following the Google Photos
            Motion Photo File Format V1.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.Mp4Extractor.FlagReadSefData">
            <summary>Flag to extract <c>SlowMotionData</c> metadata from Samsung Extension Format (SEF) slow motion
            videos.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.Mp4Extractor.FlagWorkaroundIgnoreEditLists">
            <summary>Flag to ignore any edit lists in the stream.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.Mp4Extractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.Mp4Extractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.Mp4Extractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp4.Mp4Extractor.#ctor">
            <summary>Creates a new extractor for unfragmented MP4 streams.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp4.Mp4Extractor.#ctor(System.Int32)">
            <param name="flags">Flags that control the extractor's behavior.</param>
            <summary>Creates a new extractor for unfragmented MP4 streams, using the specified flags to control the
            extractor's behavior.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Mp4.PsshAtomUtil">
            <summary>Utility methods for handling PSSH atoms.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp4.PsshAtomUtil.BuildPsshAtom(Java.Util.UUID,System.Byte[])">
            <param name="systemId">The system id of the scheme.</param>
            <param name="data">The scheme specific data.</param>
            <summary>Builds a version 0 PSSH atom for a given system id, containing the given data.</summary>
            <returns>The PSSH atom.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp4.PsshAtomUtil.BuildPsshAtom(Java.Util.UUID,Java.Util.UUID[],System.Byte[])">
            <param name="systemId">The system id of the scheme.</param>
            <param name="keyIds">The key ids for a version 1 PSSH atom, or null for a version 0 PSSH atom.</param>
            <param name="data">The scheme specific data.</param>
            <summary>Builds a PSSH atom for the given system id, containing the given key ids and data.</summary>
            <returns>The PSSH atom.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp4.PsshAtomUtil.IsPsshAtom(System.Byte[])">
            <param name="data">The data to parse.</param>
            <summary>Returns whether the data is a valid PSSH atom.</summary>
            <returns>Whether the data is a valid PSSH atom.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp4.PsshAtomUtil.ParseSchemeSpecificData(System.Byte[],Java.Util.UUID)">
            <param name="atom">The atom to parse.</param>
            <param name="uuid">The required UUID of the PSSH atom, or null to accept any UUID.</param>
            <summary>Parses the scheme specific data from a PSSH atom.</summary>
            <returns>The parsed scheme specific data. Null if the input is not a valid PSSH atom, or if the
                PSSH atom has an unsupported version, or if the PSSH atom does not match the passed UUID.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp4.PsshAtomUtil.ParseUuid(System.Byte[])">
            <param name="atom">The atom to parse.</param>
            <summary>Parses the UUID from a PSSH atom.</summary>
            <returns>The parsed UUID. Null if the input is not a valid PSSH atom, or if the PSSH atom has an
                unsupported version.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp4.PsshAtomUtil.ParseVersion(System.Byte[])">
            <param name="atom">The atom to parse.</param>
            <summary>Parses the version from a PSSH atom.</summary>
            <returns>The parsed version. -1 if the input is not a valid PSSH atom, or if the PSSH atom has
                an unsupported version.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Mp4.Track">
            <summary>Encapsulates information describing an MP4 track.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.Track.DurationUs">
            <summary>The duration of the track in microseconds, or <c>C#TIME_UNSET</c> if unknown.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.Track.EditListDurations">
            <summary>Durations of edit list segments in the movie timescale.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.Track.EditListMediaTimes">
            <summary>Media times for edit list segments in the track timescale.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.Track.Id">
            <summary>The track identifier.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.Track.MovieTimescale">
            <summary>The movie timescale.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.Track.NalUnitLengthFieldLength">
            <summary>For H264 video tracks, the length in bytes of the NALUnitLength field in each sample.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.Track.SampleTransformation">
            <summary>One of <c>TRANSFORMATION_*</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.Track.Timescale">
            <summary>The track timescale, defined as the number of time units that pass in one second.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.Track.TransformationCea608Cdat">
            <summary>A transformation for caption samples in cdat atoms.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Mp4.Track.TransformationNone">
            <summary>A no-op sample transformation.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.Track.Type">
            <summary>One of <c>C#TRACK_TYPE_AUDIO</c>, <c>C#TRACK_TYPE_VIDEO</c> and <c>C#TRACK_TYPE_TEXT</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp4.Track.GetSampleDescriptionEncryptionBox(System.Int32)">
            <param name="sampleDescriptionIndex">The given sample description index</param>
            <summary>Returns the <c>TrackEncryptionBox</c> for the given sample description index.</summary>
            <returns>The <c>TrackEncryptionBox</c> for the given sample description index. Maybe null if no
                such entry exists.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Mp4.TrackEncryptionBox">
            <summary>Encapsulates information parsed from a track encryption (tenc) box or sample group description
            (sgpd) box in an MP4 stream.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.TrackEncryptionBox.DefaultInitializationVector">
            <summary>If <c>#perSampleIvSize</c> is 0, holds the default initialization vector as defined in the
            track encryption box or sample group description box.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.TrackEncryptionBox.IsEncrypted">
            <summary>Indicates the encryption state of the samples in the sample group.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.TrackEncryptionBox.PerSampleIvSize">
            <summary>The initialization vector size in bytes for the samples in the corresponding sample group.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Mp4.TrackEncryptionBox.SchemeType">
            <summary>The protection scheme type, as defined by the 'schm' box, or null if unknown.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.Mp4.TrackEncryptionBox.#ctor(System.Boolean,System.String,System.Int32,System.Byte[],System.Int32,System.Int32,System.Byte[])">
            <param name="isEncrypted">See <c>#isEncrypted</c>.</param>
            <param name="schemeType">See <c>#schemeType</c>.</param>
            <param name="perSampleIvSize">See <c>#perSampleIvSize</c>.</param>
            <param name="keyId">See <c>TrackOutput.CryptoData#encryptionKey</c>.</param>
            <param name="defaultEncryptedBlocks">See <c>TrackOutput.CryptoData#encryptedBlocks</c>.</param>
            <param name="defaultClearBlocks">See <c>TrackOutput.CryptoData#clearBlocks</c>.</param>
            <param name="defaultInitializationVector">See <c>#defaultInitializationVector</c>.</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Ogg.OggExtractor">
            <summary>Extracts data from the Ogg container format.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Ogg.OggExtractor.Factory">
            <summary>Factory for <c>OggExtractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Ogg.OggExtractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Ogg.OggExtractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Ogg.OggExtractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.PositionHolder">
            <summary>Holds a position in the stream.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.PositionHolder.Position">
            <summary>The held position.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.SeekPoint">
            <summary>Defines a seek point in a media stream.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.SeekPoint.Position">
            <summary>The byte offset of the seek point.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.SeekPoint.Start">
            <summary>A <c>SeekPoint</c> whose time and byte offset are both set to 0.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.SeekPoint.TimeUs">
            <summary>The time of the seek point, in microseconds.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.SeekPoint.#ctor(System.Int64,System.Int64)">
            <param name="timeUs">The time of the seek point, in microseconds.</param>
            <param name="position">The byte offset of the seek point.</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TrueHdSampleRechunker">
            <summary>Rechunks TrueHD sample data into groups of <c>Ac3Util#TRUEHD_RECHUNK_SAMPLE_COUNT</c> samples.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.Ac3Extractor">
            <summary>Extracts data from (E-)AC-3 bitstreams.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.TS.Ac3Extractor.Factory">
            <summary>Factory for <c>Ac3Extractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.Ac3Extractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.Ac3Extractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.Ac3Extractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.Ac3Extractor.#ctor">
            <summary>Creates a new extractor for AC-3 bitstreams.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.Ac3Reader">
            <summary>Parses a continuous (E-)AC-3 byte stream and extracts individual samples.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.Ac3Reader.#ctor">
            <summary>Constructs a new reader for (E-)AC-3 elementary streams.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.Ac3Reader.#ctor(System.String)">
            <param name="language">Track language.</param>
            <summary>Constructs a new reader for (E-)AC-3 elementary streams.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.Ac4Extractor">
            <summary>Extracts data from AC-4 bitstreams.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.TS.Ac4Extractor.Factory">
            <summary>Factory for <c>Ac4Extractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.Ac4Extractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.Ac4Extractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.Ac4Extractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.Ac4Extractor.#ctor">
            <summary>Creates a new extractor for AC-4 bitstreams.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.Ac4Reader">
            <summary>Parses a continuous AC-4 byte stream and extracts individual samples.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.Ac4Reader.#ctor">
            <summary>Constructs a new reader for AC-4 elementary streams.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.Ac4Reader.#ctor(System.String)">
            <param name="language">Track language.</param>
            <summary>Constructs a new reader for AC-4 elementary streams.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsExtractor">
            <summary>Extracts data from AAC bit streams with ADTS framing.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsExtractor.Factory">
            <summary>Factory for <c>AdtsExtractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsExtractor.FlagEnableConstantBitrateSeeking">
            <summary>Flag to force enable seeking using a constant bitrate assumption in cases where seeking would
            otherwise not be possible.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsExtractor.FlagEnableConstantBitrateSeekingAlways">
            <summary>Like <c>#FLAG_ENABLE_CONSTANT_BITRATE_SEEKING</c>, except that seeking is also enabled in
            cases where the content length (and hence the duration of the media) is unknown.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsExtractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsExtractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsExtractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsExtractor.#ctor">
            <summary>Creates a new extractor for ADTS bitstreams.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsExtractor.#ctor(System.Int32)">
            <param name="flags">Flags that control the extractor's behavior.</param>
            <summary>Creates a new extractor for ADTS bitstreams.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsReader">
            <summary>Parses a continuous ADTS byte stream and extracts individual frames.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsReader.#ctor(System.Boolean)">
            <param name="exposeId3">True if the reader should expose ID3 information.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsReader.#ctor(System.Boolean,System.String)">
            <param name="exposeId3">True if the reader should expose ID3 information.</param>
            <param name="language">Track language.</param>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsReader.SampleDurationUs">
            <summary>Returns the duration in microseconds per sample, or <c>C#TIME_UNSET</c> if the sample duration
            is not available.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.AdtsReader.IsAdtsSyncWord(System.Int32)">
            <summary>Returns whether an integer matches an ADTS SYNC word.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.DefaultTsPayloadReaderFactory">
            <summary>Default <c>TsPayloadReader.Factory</c> implementation.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.DefaultTsPayloadReaderFactory.FlagAllowNonIdrKeyframes">
            <summary>When extracting H.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.DefaultTsPayloadReaderFactory.FlagDetectAccessUnits">
            <summary>When extracting H.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.DefaultTsPayloadReaderFactory.FlagEnableHdmvDtsAudioStreams">
            <summary>Sets whether HDMV DTS audio streams will be handled.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.DefaultTsPayloadReaderFactory.FlagIgnoreAacStream">
            <summary>Prevents the creation of <c>AdtsReader</c> and <c>LatmReader</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.DefaultTsPayloadReaderFactory.FlagIgnoreH264Stream">
            <summary>Prevents the creation of <c>H264Reader</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.DefaultTsPayloadReaderFactory.FlagIgnoreSpliceInfoStream">
            <summary>Prevents the creation of <c>SectionPayloadReader</c>s for splice information sections
            (SCTE-35).</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.DefaultTsPayloadReaderFactory.FlagOverrideCaptionDescriptors">
            <summary>Whether the list of <c>closedCaptionFormats</c> passed to <c>DefaultTsPayloadReaderFactory#DefaultTsPayloadReaderFactory(int, List)</c> should be used in spite
            of any closed captions service descriptors.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.DefaultTsPayloadReaderFactory.#ctor(System.Int32)">
            <param name="flags">A combination of <c>FLAG_*</c> values that control the behavior of the created
                readers.</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.DtsReader">
            <summary>Parses a continuous DTS byte stream and extracts individual samples.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.DtsReader.#ctor(System.String)">
            <param name="language">Track language.</param>
            <summary>Constructs a new reader for DTS elementary streams.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.DvbSubtitleReader">
            <summary>Parses DVB subtitle data and extracts individual frames.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.DvbSubtitleReader.#ctor(System.Collections.Generic.IList{Com.Google.Android.Exoplayer2.Extractor.TS.ITsPayloadReader.DvbSubtitleInfo})">
            <param name="subtitleInfos">Information about the DVB subtitles associated to the stream.</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.H262Reader">
            <summary>Parses a continuous H262 byte stream and extracts individual frames.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.H263Reader">
            <summary>Parses an ISO/IEC 14496-2 (MPEG-4 Part 2) or ITU-T Recommendation H.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.H263Reader.#ctor">
            <summary>Creates a new reader.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.H264Reader">
            <summary>Parses a continuous H264 byte stream and extracts individual frames.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.H264Reader.#ctor(Com.Google.Android.Exoplayer2.Extractor.TS.SeiReader,System.Boolean,System.Boolean)">
            <param name="seiReader">An SEI reader for consuming closed caption channels.</param>
            <param name="allowNonIdrKeyframes">Whether to treat samples consisting of non-IDR I slices as
                synchronization samples (key-frames).</param>
            <param name="detectAccessUnits">Whether to split the input stream into access units (samples) based on
                slice headers. Pass <c>false</c> if the stream contains access unit delimiters (AUDs).</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.H265Reader">
            <summary>Parses a continuous H.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.H265Reader.#ctor(Com.Google.Android.Exoplayer2.Extractor.TS.SeiReader)">
            <param name="seiReader">An SEI reader for consuming closed caption channels.</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.Id3Reader">
            <summary>Parses ID3 data and extracts individual text information frames.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.IElementaryStreamReader">
            <summary>Extracts individual samples from an elementary media stream, preserving original order.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.IElementaryStreamReader.PacketFinished">
            <summary>Called when a packet ends.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.IElementaryStreamReader.PacketStarted(System.Int64,System.Int32)">
            <param name="pesTimeUs">The timestamp associated with the packet.</param>
            <param name="flags">See <c>TsPayloadReader.Flags</c>.</param>
            <summary>Called when a packet starts.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.IElementaryStreamReader.Seek">
            <summary>Notifies the reader that a seek has occurred.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.ISectionPayloadReader">
            <summary>Reads section data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.TsPayloadReader.FlagDataAlignmentIndicator">
            <summary>Indicates the presence of the data_alignment_indicator in the PES header.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.TsPayloadReader.FlagPayloadUnitStartIndicator">
            <summary>Indicates the presence of the payload_unit_start_indicator in the TS packet header.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.TsPayloadReader.FlagRandomAccessIndicator">
            <summary>Indicates the presence of the random_access_indicator in the TS packet header adaptation field.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.ITsPayloadReader">
            <summary>Parses TS packet payload data.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.ITsPayloadReader.FlagDataAlignmentIndicator">
            <summary>Indicates the presence of the data_alignment_indicator in the PES header.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.ITsPayloadReader.FlagPayloadUnitStartIndicator">
            <summary>Indicates the presence of the payload_unit_start_indicator in the TS packet header.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.ITsPayloadReader.FlagRandomAccessIndicator">
            <summary>Indicates the presence of the random_access_indicator in the TS packet header adaptation field.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.ITsPayloadReader.Seek">
            <summary>Notifies the reader that a seek has occurred.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.LatmReader">
            <summary>Parses and extracts samples from an AAC/LATM elementary stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.LatmReader.#ctor(System.String)">
            <param name="language">Track language.</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.MpegAudioReader">
            <summary>Parses a continuous MPEG Audio byte stream and extracts individual frames.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.PassthroughSectionPayloadReader">
            <summary>A <c>SectionPayloadReader</c> that directly outputs the section bytes as sample data.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.PassthroughSectionPayloadReader.#ctor(System.String)">
            <param name="mimeType">The MIME type set as <c>Format#sampleMimeType</c> on the created output track.</param>
            <summary>Create a new PassthroughSectionPayloadReader.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.PesReader">
            <summary>Parses PES packet data and extracts samples.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.PesReader.InterfaceConsts.FlagDataAlignmentIndicator">
            <summary>Indicates the presence of the data_alignment_indicator in the PES header.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.PesReader.InterfaceConsts.FlagPayloadUnitStartIndicator">
            <summary>Indicates the presence of the payload_unit_start_indicator in the TS packet header.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.PesReader.InterfaceConsts.FlagRandomAccessIndicator">
            <summary>Indicates the presence of the random_access_indicator in the TS packet header adaptation field.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.PsExtractor">
            <summary>Extracts data from the MPEG-2 PS container format.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.TS.PsExtractor.Factory">
            <summary>Factory for <c>PsExtractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.PsExtractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.PsExtractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.PsExtractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.SectionReader">
            <summary>Reads section data packets and feeds the whole sections to a given <c>SectionPayloadReader</c>.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.SectionReader.InterfaceConsts.FlagDataAlignmentIndicator">
            <summary>Indicates the presence of the data_alignment_indicator in the PES header.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.SectionReader.InterfaceConsts.FlagPayloadUnitStartIndicator">
            <summary>Indicates the presence of the payload_unit_start_indicator in the TS packet header.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.SectionReader.InterfaceConsts.FlagRandomAccessIndicator">
            <summary>Indicates the presence of the random_access_indicator in the TS packet header adaptation field.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.SeiReader">
            <summary>Consumes SEI buffers, outputting contained CEA-608/708 messages to a <c>TrackOutput</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.TsExtractor">
            <summary>Extracts data from the MPEG-2 TS container format.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.TS.TsExtractor.Factory">
            <summary>Factory for <c>TsExtractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.TsExtractor.ModeHls">
            <summary>Enable single PMT mode, map <c>TrackOutput</c>s by their type (instead of PID) and ignore
            continuity counters.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.TsExtractor.ModeMultiPmt">
            <summary>Behave as defined in ISO/IEC 13818-1.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.TsExtractor.ModeSinglePmt">
            <summary>Assume only one PMT will be contained in the stream, even if more are declared by the PAT.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.TsExtractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.TsExtractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.TS.TsExtractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.TsExtractor.#ctor(System.Int32)">
            <param name="defaultTsPayloadReaderFlags">A combination of <c>DefaultTsPayloadReaderFactory</c><c>FLAG_*</c> values that control the behavior of the payload readers.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.TsExtractor.#ctor(System.Int32,System.Int32,System.Int32)">
            <param name="mode">Mode for the extractor. One of <c>#MODE_MULTI_PMT</c>, <c>#MODE_SINGLE_PMT</c>
                and <c>#MODE_HLS</c>.</param>
            <param name="defaultTsPayloadReaderFlags">A combination of <c>DefaultTsPayloadReaderFactory</c><c>FLAG_*</c> values that control the behavior of the payload readers.</param>
            <param name="timestampSearchBytes">The number of bytes searched from a given position in the stream to
                find a PCR timestamp. If this value is too small, the duration might be unknown and seeking
                might not be supported for high bitrate progressive streams. Setting a large value for this
                field might be inefficient though because the extractor stores a buffer of <c>timestampSearchBytes</c> bytes when determining the duration or when performing a seek
                operation. The default value is <c>#DEFAULT_TIMESTAMP_SEARCH_BYTES</c>. If the number of
                bytes left in the stream from the current position is less than <c>timestampSearchBytes</c>, the search is performed on the bytes left.</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.TS.TsUtil">
            <summary>Utilities method for extracting MPEG-TS streams.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.TsUtil.FindSyncBytePosition(System.Byte[],System.Int32,System.Int32)">
            <summary>Returns the position of the first TS_SYNC_BYTE within the range [startPosition, limitPosition)
            from the provided data array, or returns limitPosition if sync byte could not be found.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.TS.TsUtil.IsStartOfTsPacket(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <param name="data">The array holding the data to search in.</param>
            <param name="start">The first valid position in <c>data</c> from which a sync byte can be read.</param>
            <param name="limit">The first invalid position in <c>data</c>, after which no data should be read.</param>
            <param name="searchPosition">The position to check for a TS packet start.</param>
            <summary>Returns whether a TS packet starts at <c>searchPosition</c> according to the MPEG-TS
            synchronization recommendations.</summary>
            <returns>Whether a TS packet starts at <c>searchPosition</c>.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.VorbisBitArray">
            <summary>Wraps a byte array, providing methods that allow it to be read as a Vorbis bitstream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.VorbisBitArray.#ctor(System.Byte[])">
            <param name="data">the array to wrap.</param>
            <summary>Creates a new instance that wraps an existing array.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.VorbisBitArray.Position">
            <summary>Returns the reading position in bits. -or- Sets the reading position in bits.</summary>
            <param name="position">The new reading position in bits.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.VorbisBitArray.BitsLeft">
            <summary>Returns the number of remaining bits.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.VorbisBitArray.ReadBit">
            <summary>Reads a single bit.</summary>
            <returns>
              <c>true</c> if the bit is set, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.VorbisBitArray.ReadBits(System.Int32)">
            <param name="numBits">The number of bits to read.</param>
            <summary>Reads up to 32 bits.</summary>
            <returns>An integer whose bottom <c>numBits</c> bits hold the read data.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.VorbisBitArray.Reset">
            <summary>Resets the reading position to zero.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.VorbisBitArray.SkipBits(System.Int32)">
            <param name="numBits">The number of bits to skip.</param>
            <summary>Skips <c>numberOfBits</c> bits.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.VorbisUtil">
            <summary>Utility methods for parsing Vorbis streams.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Extractor.VorbisUtil.ILog(System.Int32)">
            <param name="x">the value of which the ilog should be calculated.</param>
            <summary>Returns ilog(x), which is the index of the highest set bit in <c>x</c>.</summary>
            <returns>ilog(x)</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Extractor.Wav.WavExtractor">
            <summary>Extracts data from WAV byte streams.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Extractor.Wav.WavExtractor.Factory">
            <summary>Factory for <c>WavExtractor</c> instances.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Wav.WavExtractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Wav.WavExtractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Extractor.Wav.WavExtractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Dvbsi.AppInfoTable">
            <summary>A representation of a DVB Application Information Table (AIT).</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Metadata.Dvbsi.AppInfoTable.ControlCodeAutostart">
            <summary>The application shall be started when the service is selected, unless the application is
            already running.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Metadata.Dvbsi.AppInfoTable.ControlCodePresent">
            <summary>The application is allowed to run while the service is selected, however it shall not start
            automatically when the service becomes selected.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Dvbsi.AppInfoTableDecoder">
            <summary>Decoder for the DVB Application Information Table (AIT).</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Metadata.Dvbsi.AppInfoTableDecoder.ApplicationInformationTableId">
            <summary>See table 16 in section 5.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Emsg.EventMessage">
            <summary>An Event Message (emsg) as defined in ISO 23009-1.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Emsg.EventMessage.DurationMs">
            <summary>The duration of the event in milliseconds.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Emsg.EventMessage.Id">
            <summary>The instance identifier.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Metadata.Emsg.EventMessage.Id3SchemeIdAom">
            <summary>emsg scheme_id_uri from the <see href="https://aomediacodec.github.io/av1-id3/#semantics">CMAF
            spec</see>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Emsg.EventMessage.MessageData">
            <summary>The body of the message.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Emsg.EventMessage.SchemeIdUri">
            <summary>The message scheme.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Metadata.Emsg.EventMessage.Scte35SchemeId">
            <summary>scheme_id_uri from section 7.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Emsg.EventMessage.Value">
            <summary>The value for the event.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Emsg.EventMessage.#ctor(System.String,System.String,System.Int64,System.Int64,System.Byte[])">
            <param name="schemeIdUri">The message scheme.</param>
            <param name="value">The value for the event.</param>
            <param name="durationMs">The duration of the event in milliseconds.</param>
            <param name="id">The instance identifier.</param>
            <param name="messageData">The body of the message.</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Emsg.EventMessageDecoder">
            <summary>Decodes data encoded by <c>EventMessageEncoder</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Emsg.EventMessageEncoder">
            <summary>Encodes data that can be decoded by <c>EventMessageDecoder</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Emsg.EventMessageEncoder.Encode(Com.Google.Android.Exoplayer2.Metadata.Emsg.EventMessage)">
            <param name="eventMessage">The event message to be encoded.</param>
            <summary>Encodes an <c>EventMessage</c> to a byte array that can be decoded by <c>EventMessageDecoder</c>.</summary>
            <returns>The serialized byte array.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Flac.PictureFrame">
            <summary>A picture parsed from a Vorbis Comment or a FLAC picture block.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Flac.PictureFrame.Colors">
            <summary>For indexed-color pictures (e.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Flac.PictureFrame.Depth">
            <summary>The color depth of the picture in bits-per-pixel.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Flac.PictureFrame.Description">
            <summary>A description of the picture.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Flac.PictureFrame.Height">
            <summary>The height of the picture in pixels.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Flac.PictureFrame.MimeType">
            <summary>The mime type of the picture.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Flac.PictureFrame.PictureData">
            <summary>The encoded picture data.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Flac.PictureFrame.PictureType">
            <summary>The type of the picture.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Flac.PictureFrame.Width">
            <summary>The width of the picture in pixels.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Flac.VorbisComment.Key">
            <summary>The key.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Flac.VorbisComment.Value">
            <summary>The value.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Flac.VorbisComment.#ctor(System.String,System.String)">
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyDecoder">
            <summary>Decodes ICY stream information.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyHeaders">
            <summary>ICY headers.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyHeaders.Bitrate">
            <summary>Bitrate in bits per second (<c>(icy-br * 1000)</c>), or <c>Format#NO_VALUE</c> if the header
            was not present.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyHeaders.Genre">
            <summary>The genre (<c>icy-genre</c>).</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyHeaders.IsPublic">
            <summary>Whether the radio station is listed (<c>icy-pub</c>), or <c>false</c> if the header was not
            present.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyHeaders.MetadataInterval">
            <summary>The interval in bytes between metadata chunks (<c>icy-metaint</c>), or <c>C#LENGTH_UNSET</c>
            if the header was not present.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyHeaders.Name">
            <summary>The stream name (<c>icy-name</c>).</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyHeaders.Url">
            <summary>The URL of the radio station (<c>icy-url</c>).</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyHeaders.#ctor(System.Int32,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <param name="bitrate">See <c>#bitrate</c>.</param>
            <param name="genre">See <c>#genre</c>.</param>
            <param name="name">See <c>#name See</c>.</param>
            <param name="url">See <c>#url</c>.</param>
            <param name="isPublic">See <c>#isPublic</c>.</param>
            <param name="metadataInterval">See <c>#metadataInterval</c>.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyHeaders.Parse(System.Collections.Generic.IDictionary{System.String,System.Collections.Generic.IList{System.String}})">
            <param name="responseHeaders">The response headers.</param>
            <summary>Parses <c>IcyHeaders</c> from response headers.</summary>
            <returns>The parsed <c>IcyHeaders</c>, or <c>null</c> if no ICY headers were present.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyInfo">
            <summary>ICY in-stream information.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyInfo.RawMetadata">
            <summary>The complete metadata bytes used to construct this IcyInfo.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyInfo.Title">
            <summary>The stream title if present and decodable, or <c>null</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyInfo.Url">
            <summary>The stream URL if present and decodable, or <c>null</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Icy.IcyInfo.#ctor(System.Byte[],System.String,System.String)">
            <param name="rawMetadata">See <c>#rawMetadata</c>.</param>
            <param name="title">See <c>#title</c>.</param>
            <param name="url">See <c>#url</c>.</param>
            <summary>Construct a new IcyInfo from the source metadata, and optionally a StreamTitle and StreamUrl
            that have been extracted.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Id3.ApicFrame">
            <summary>APIC (Attached Picture) ID3 frame.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Id3.BinaryFrame">
            <summary>Binary ID3 frame.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Id3.ChapterFrame">
            <summary>Chapter information ID3 frame.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Id3.ChapterFrame.EndOffset">
            <summary>The byte offset of the end of the chapter, or <c>C#POSITION_UNSET</c> if not set.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Id3.ChapterFrame.StartOffset">
            <summary>The byte offset of the start of the chapter, or <c>C#POSITION_UNSET</c> if not set.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Id3.ChapterFrame.SubFrameCount">
            <summary>Returns the number of sub-frames.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Id3.ChapterFrame.GetSubFrame(System.Int32)">
            <summary>Returns the sub-frame at <c>index</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Id3.ChapterTocFrame">
            <summary>Chapter table of contents ID3 frame.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Id3.ChapterTocFrame.SubFrameCount">
            <summary>Returns the number of sub-frames.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Id3.ChapterTocFrame.GetSubFrame(System.Int32)">
            <summary>Returns the sub-frame at <c>index</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Id3.CommentFrame">
            <summary>Comment ID3 frame.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Id3.GeobFrame">
            <summary>GEOB (General Encapsulated Object) ID3 frame.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Id3.Id3Decoder">
            <summary>Decodes ID3 tags.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Metadata.Id3.Id3Decoder.Id3HeaderLength">
            <summary>Length of an ID3 tag header.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Metadata.Id3.Id3Decoder.Id3Tag">
            <summary>The first three bytes of a well formed ID3 tag header.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Id3.Id3Frame">
            <summary>Base class for ID3 frames.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Id3.Id3Frame.Id">
            <summary>The frame ID.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Id3.InternalFrame">
            <summary>Internal ID3 frame that is intended for use by the player.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Id3.MlltFrame">
            <summary>MPEG location lookup table frame.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Id3.PrivFrame">
            <summary>PRIV (Private) ID3 frame.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Id3.TextInformationFrame">
            <summary>Text information ID3 frame.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Id3.UrlLinkFrame">
            <summary>Url link ID3 frame.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.IMetadataDecoder">
            <summary>Decodes metadata from binary data.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.MetadataInputBuffer">
            <summary>A <c>DecoderInputBuffer</c> for a <c>MetadataDecoder</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.MetadataInputBuffer.SubsampleOffsetUs">
            <summary>An offset that must be added to the metadata's timestamps after it's been decoded, or <c>Format#OFFSET_SAMPLE_RELATIVE</c> if <c>#timeUs</c> should be added.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Mp4.MdtaMetadataEntry">
            <summary>Stores extensible metadata with handler type 'mdta'.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Mp4.MdtaMetadataEntry.Key">
            <summary>The metadata key name.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Metadata.Mp4.MdtaMetadataEntry.KeyAndroidCaptureFps">
            <summary>Key for the capture frame rate (in frames per second).</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Mp4.MdtaMetadataEntry.LocaleIndicator">
            <summary>The four byte locale indicator.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Mp4.MdtaMetadataEntry.TypeIndicator">
            <summary>The four byte type indicator.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Mp4.MdtaMetadataEntry.Value">
            <summary>The payload.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Mp4.MdtaMetadataEntry.#ctor(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>Creates a new metadata entry for the specified metadata key/value.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Mp4.MotionPhotoMetadata">
            <summary>Metadata of a motion photo file.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Mp4.MotionPhotoMetadata.PhotoPresentationTimestampUs">
            <summary>The presentation timestamp of the photo, in microseconds, or <c>C#TIME_UNSET</c> if unknown.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Mp4.MotionPhotoMetadata.PhotoSize">
            <summary>The size of the photo data, in bytes.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Mp4.MotionPhotoMetadata.PhotoStartPosition">
            <summary>The start offset of the photo data, in bytes.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Mp4.MotionPhotoMetadata.VideoSize">
            <summary>The size of the video data, in bytes.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Mp4.MotionPhotoMetadata.VideoStartPosition">
            <summary>The start offset of the video data, in bytes.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Mp4.MotionPhotoMetadata.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>Creates an instance.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Mp4.SlowMotionData">
            <summary>Holds information about the segments of slow motion playback within a track.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Mp4.SlowMotionData.#ctor(System.Collections.Generic.IList{Com.Google.Android.Exoplayer2.Metadata.Mp4.SlowMotionData.Segment})">
            <summary>Creates an instance with a list of <c>Segment</c>s.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Mp4.SmtaMetadataEntry">
            <summary>Stores metadata from the Samsung smta box.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Mp4.SmtaMetadataEntry.CaptureFrameRate">
            <summary>The capture frame rate, in fps, or <c>C#RATE_UNSET</c> if it is unknown.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Mp4.SmtaMetadataEntry.SvcTemporalLayerCount">
            <summary>The number of layers in the SVC extended frames.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Mp4.SmtaMetadataEntry.#ctor(System.Single,System.Int32)">
            <summary>Creates an instance.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Scte35.PrivateCommand">
            <summary>Represents a private command as defined in SCTE35, Section 9.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.PrivateCommand.CommandBytes">
            <summary>The private bytes as defined in SCTE35, Section 9.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.PrivateCommand.Identifier">
            <summary>The identifier as defined in SCTE35, Section 9.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.PrivateCommand.PtsAdjustment">
            <summary>The <c>pts_adjustment</c> as defined in SCTE35, Section 9.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceCommand">
            <summary>Superclass for SCTE35 splice commands.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInfoDecoder">
            <summary>Decodes splice info sections and produces splice commands.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand">
            <summary>Represents a splice insert command defined in SCTE35, Section 9.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand.AutoReturn">
            <summary>If <c>#breakDurationUs</c> is not <c>C#TIME_UNSET</c>, defines whether <c>#breakDurationUs</c> should be used to know when to return to the network feed.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand.AvailNum">
            <summary>Holds the value of <c>avail_num</c> as defined in SCTE35, Section 9.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand.AvailsExpected">
            <summary>Holds the value of <c>avails_expected</c> as defined in SCTE35, Section 9.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand.BreakDurationUs">
            <summary>The duration of the splice in microseconds, or <c>C#TIME_UNSET</c> if no duration is present.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand.ComponentSpliceList">
            <summary>If <c>#programSpliceFlag</c> is false, a non-empty list containing the <c>ComponentSplice</c>s.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand.OutOfNetworkIndicator">
            <summary>If true, the splice event is an opportunity to exit from the network feed.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand.ProgramSpliceFlag">
            <summary>Whether the splice mode is program splice mode, whereby all PIDs/components are to be spliced.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand.ProgramSplicePlaybackPositionUs">
            <summary>Equivalent to <c>#programSplicePts</c> but in the playback timebase.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand.ProgramSplicePts">
            <summary>If <c>#programSpliceFlag</c> is true, the PTS at which the program splice should occur.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand.SpliceEventCancelIndicator">
            <summary>True if the event with id <c>#spliceEventId</c> has been canceled.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand.SpliceEventId">
            <summary>The splice event id.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand.SpliceImmediateFlag">
            <summary>Whether splicing should be done at the nearest opportunity.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceInsertCommand.UniqueProgramId">
            <summary>The unique program id as defined in SCTE35, Section 9.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceNullCommand">
            <summary>Represents a splice null command as defined in SCTE35, Section 9.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceScheduleCommand">
            <summary>Represents a splice schedule command as defined in SCTE35, Section 9.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.SpliceScheduleCommand.Events">
            <summary>The list of scheduled events.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Scte35.TimeSignalCommand">
            <summary>Represents a time signal command as defined in SCTE35, Section 9.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.TimeSignalCommand.PlaybackPositionUs">
            <summary>Equivalent to <c>#ptsTime</c> but in the playback timebase.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Metadata.Scte35.TimeSignalCommand.PtsTime">
            <summary>A PTS value, as defined in SCTE35, Section 9.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.SimpleMetadataDecoder">
            <summary>A <c>MetadataDecoder</c> base class that validates input buffers and discards any for which
            <c>MetadataInputBuffer#isDecodeOnly()</c> is <c>true</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Metadata.Vorbis.VorbisComment">
            <summary>A vorbis comment, extracted from a FLAC or Ogg file.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Metadata.Vorbis.VorbisComment.#ctor(System.String,System.String)">
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Cea.Cea608Decoder">
            <summary>A <c>SubtitleDecoder</c> for CEA-608 (also known as "line 21 captions" and "EIA-608").</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.Cea.Cea608Decoder.MinDataChannelTimeoutMs">
            <summary>The minimum value for the <c>validDataChannelTimeoutMs</c> constructor parameter permitted by
            ANSI/CTA-608-E R-2014 Annex C.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.Cea.Cea608Decoder.#ctor(System.String,System.Int32,System.Int64)">
            <param name="mimeType">The MIME type of the CEA-608 data.</param>
            <param name="accessibilityChannel">The Accessibility channel, or <c>Format#NO_VALUE</c> if unknown.</param>
            <param name="validDataChannelTimeoutMs">The timeout (in milliseconds) permitted by ANSI/CTA-608-E
                R-2014 Annex C.9 to clear "stuck" captions where no removal control code is received. The
                timeout should be at least <c>#MIN_DATA_CHANNEL_TIMEOUT_MS</c> or <c>C#TIME_UNSET</c> for
                no timeout.</param>
            <summary>Constructs an instance.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Cea.Cea708Decoder">
            <summary>A <c>SubtitleDecoder</c> for CEA-708 (also known as "EIA-708").</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Cea.CeaDecoder">
            <summary>Base class for subtitle parsers for CEA captions.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.Cea.CeaDecoder.CreateSubtitle">
            <summary>Creates a <c>Subtitle</c> from the available data.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.Cea.CeaDecoder.Decode(Com.Google.Android.Exoplayer2.Text.SubtitleInputBuffer)">
            <summary>Filters and processes the raw data, providing <c>Subtitle</c>s via <c>#createSubtitle()</c>
            when sufficient data has been processed.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Cea.CeaDecoderInvoker.IsNewSubtitleDataAvailable">
            <summary>Returns whether there is data available to create a new <c>Subtitle</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.Cea.CeaDecoderInvoker.CreateSubtitle">
            <summary>Creates a <c>Subtitle</c> from the available data.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.Cea.CeaDecoderInvoker.Decode(Com.Google.Android.Exoplayer2.Text.SubtitleInputBuffer)">
            <summary>Filters and processes the raw data, providing <c>Subtitle</c>s via <c>#createSubtitle()</c>
            when sufficient data has been processed.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.CueDecoder">
            <summary>Decodes data encoded by <c>CueEncoder</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.CueEncoder">
            <summary>Encodes data that can be decoded by <c>CueDecoder</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Dvb.DvbSubtitle">
            <summary>A representation of a DVB subtitle.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.ISubtitle">
            <summary>A subtitle consisting of timed <c>Cue</c>s.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.ISubtitle.GetEventTime(System.Int32)">
            <param name="index">The index of the event time to obtain.</param>
            <summary>Returns the event time at a specified index.</summary>
            <returns>The event time in microseconds.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.ISubtitle.GetNextEventTimeIndex(System.Int64)">
            <param name="timeUs">The time in microseconds.</param>
            <summary>Returns the index of the first event that occurs after a given time (exclusive).</summary>
            <returns>The index of the next event, or <c>C#INDEX_UNSET</c> if there are no events after the
                specified time.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.ISubtitleDecoder">
            <summary>Decodes <c>Subtitle</c>s from <c>SubtitleInputBuffer</c>s.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.ISubtitleDecoder.SetPositionUs(System.Int64)">
            <param name="positionUs">The current playback position in microseconds.</param>
            <summary>Informs the decoder of the current playback position.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Ssa.SsaSubtitle">
            <summary>A representation of an SSA/ASS subtitle.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Subrip.SubripSubtitle">
            <summary>A representation of a SubRip subtitle.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.SubtitleDecoderException">
            <summary>Thrown when an error occurs decoding subtitle data.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.SubtitleDecoderException.#ctor(System.String)">
            <param name="message">The detail message for this exception.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.SubtitleDecoderException.#ctor(System.String,Java.Lang.Throwable)">
            <param name="message">The detail message for this exception.</param>
            <param name="cause">The cause of this exception, or <c>null</c>.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.SubtitleDecoderException.#ctor(Java.Lang.Throwable)">
            <param name="cause">The cause of this exception, or <c>null</c>.</param>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.SubtitleExtractor">
            <summary>Generic extractor for extracting subtitles from various subtitle formats.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.SubtitleExtractor.InterfaceConsts.ResultContinue">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data
            continuing from the position in the stream reached by the returning call.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.SubtitleExtractor.InterfaceConsts.ResultEndOfInput">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the end of the <c>ExtractorInput</c> was reached.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Text.SubtitleExtractor.InterfaceConsts.ResultSeek">
            <summary>Returned by <c>#read(ExtractorInput, PositionHolder)</c> if the <c>ExtractorInput</c> passed
            to the next <c>#read(ExtractorInput, PositionHolder)</c> is required to provide data starting
            from a specified position in the stream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.SubtitleExtractor.Release">
            <summary>Releases the extractor's resources, including the <c>SubtitleDecoder</c>.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.SubtitleInputBuffer">
            <summary>A <c>DecoderInputBuffer</c> for a <c>SubtitleDecoder</c>.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.SubtitleInputBuffer.SubsampleOffsetUs">
            <summary>An offset that must be added to the subtitle's event times after it's been decoded, or <c>Format#OFFSET_SAMPLE_RELATIVE</c> if <c>#timeUs</c> should be added.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.SubtitleOutputBuffer">
            <summary>Base class for <c>SubtitleDecoder</c> output buffers.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.SubtitleOutputBuffer.SetContent(System.Int64,Com.Google.Android.Exoplayer2.Text.ISubtitle,System.Int64)">
            <param name="timeUs">The time of the start of the subtitle in microseconds.</param>
            <param name="subtitle">The subtitle.</param>
            <param name="subsampleOffsetUs">An offset that must be added to the subtitle's event times, or <c>Format#OFFSET_SAMPLE_RELATIVE</c> if <c>timeUs</c> should be added.</param>
            <summary>Sets the content of the output buffer, consisting of a <c>Subtitle</c> and associated
            metadata.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Ttml.TtmlSubtitle">
            <summary>A representation of a TTML subtitle.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Webvtt.Mp4WebvttSubtitle">
            <summary>Representation of a Webvtt subtitle embedded in a MP4 container file.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Webvtt.WebvttCssStyle">
            <summary>Style object of a Css style block in a Webvtt file.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Text.Webvtt.WebvttCssStyle.Style">
            <summary>Returns the style or <c>#UNSPECIFIED</c> when no style information is given.</summary>
            <returns>
              <c>#UNSPECIFIED</c>, <c>#STYLE_NORMAL</c>, <c>#STYLE_BOLD</c>, <c>#STYLE_BOLD</c>
                or <c>#STYLE_BOLD_ITALIC</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.Webvtt.WebvttCssStyle.GetSpecificityScore(System.String,System.String,System.Collections.Generic.ICollection{System.String},System.String)">
            <param name="id">The id of the cue if present, <c>null</c> otherwise.</param>
            <param name="tag">Name of the tag, <c>null</c> if it refers to the entire cue.</param>
            <param name="classes">An array containing the classes the tag belongs to. Must not be null.</param>
            <param name="voice">Annotated voice if present, <c>null</c> otherwise.</param>
            <summary>Returns a value in a score system compliant with the CSS Specificity rules.</summary>
            <returns>The score of the match, zero if there is no match.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Webvtt.WebvttCueInfo">
            <summary>A representation of a WebVTT cue.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Webvtt.WebvttCueParser">
            <summary>Parser for WebVTT cues.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Webvtt.WebvttParserUtil">
            <summary>Utility methods for parsing WebVTT data.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.Webvtt.WebvttParserUtil.ParsePercentage(System.String)">
            <param name="s">The percentage string.</param>
            <summary>Parses a percentage string.</summary>
            <returns>The parsed value, where 1.0 represents 100%.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.Webvtt.WebvttParserUtil.ParseTimestampUs(System.String)">
            <param name="timestamp">The timestamp string.</param>
            <summary>Parses a WebVTT timestamp.</summary>
            <returns>The parsed timestamp in microseconds.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Text.Webvtt.WebvttSubtitle">
            <summary>A representation of a WebVTT subtitle.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Text.Webvtt.WebvttSubtitle.#ctor(System.Collections.Generic.IList{Com.Google.Android.Exoplayer2.Text.Webvtt.WebvttCueInfo})">
            <summary>Constructs a new WebvttSubtitle from a list of <c>WebvttCueInfo</c>s.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.NalUnitUtil">
            <summary>Utility methods for handling H.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.AspectRatioIdcValues">
            <summary>Aspect ratios indexed by aspect_ratio_idc, in H.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.ExtendedSar">
            <summary>Value for aspect_ratio_idc indicating an extended aspect ratio, in H.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.NalStartCode">
            <summary>Four initial bytes that must prefix NAL units for decoding.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.NalUnitTypeAud">
            <summary>Access unit delimiter.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.NalUnitTypeIdr">
            <summary>Coded slice of an IDR picture.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.NalUnitTypeNonIdr">
            <summary>Coded slice of a non-IDR picture.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.NalUnitTypePartitionA">
            <summary>Coded slice data partition A.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.NalUnitTypePps">
            <summary>Picture parameter set.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.NalUnitTypeSei">
            <summary>Supplemental enhancement information.</summary>
        </member>
        <member name="F:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.NalUnitTypeSps">
            <summary>Sequence parameter set.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.ClearPrefixFlags(System.Boolean[])">
            <param name="prefixFlags">The flags to clear.</param>
            <summary>Clears prefix flags, as used by <c>#findNalUnit(byte[], int, int, boolean[])</c>.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.DiscardToSps(Java.Nio.ByteBuffer)">
            <param name="data">Buffer containing start code delimited NAL units.</param>
            <summary>Discards data from the buffer up to the first SPS, where <c>data.position()</c> is interpreted
            as the length of the buffer.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.FindNalUnit(System.Byte[],System.Int32,System.Int32,System.Boolean[])">
            <param name="data">The data to search.</param>
            <param name="startOffset">The offset (inclusive) in the data to start the search.</param>
            <param name="endOffset">The offset (exclusive) in the data to end the search.</param>
            <param name="prefixFlags">A boolean array whose first three elements are used to store the state
                required to detect NAL units where the NAL unit prefix spans array boundaries. The array
                must be at least 3 elements long.</param>
            <summary>Finds the first NAL unit in <c>data</c>.</summary>
            <returns>The offset of the NAL unit, or <c>endOffset</c> if a NAL unit was not found.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.GetH265NalUnitType(System.Byte[],System.Int32)">
            <param name="data">The data to search.</param>
            <param name="offset">The start offset of a NAL unit. Must lie between <c>-3</c> (inclusive) and
                <c>data.length - 3</c> (exclusive).</param>
            <summary>Returns the type of the H.</summary>
            <returns>The type of the unit.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.GetNalUnitType(System.Byte[],System.Int32)">
            <param name="data">The data to search.</param>
            <param name="offset">The start offset of a NAL unit. Must lie between <c>-3</c> (inclusive) and
                <c>data.length - 3</c> (exclusive).</param>
            <summary>Returns the type of the NAL unit in <c>data</c> that starts at <c>offset</c>.</summary>
            <returns>The type of the unit.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.IsNalUnitSei(System.String,System.SByte)">
            <param name="mimeType">The sample MIME type, or <c>null</c> if unknown.</param>
            <param name="nalUnitHeaderFirstByte">The first byte of nal_unit().</param>
            <summary>Returns whether the NAL unit with the specified header contains supplemental enhancement
            information.</summary>
            <returns>Whether the NAL unit with the specified header is an SEI NAL unit. False is returned if
                the <c>MimeType</c> is <c>null</c>.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.NalUnitUtil.UnescapeStream(System.Byte[],System.Int32)">
            <param name="data">The data to unescape.</param>
            <param name="limit">The limit (exclusive) of the data to unescape.</param>
            <summary>Unescapes <c>data</c> up to the specified limit, replacing occurrences of [0, 0, 3] with [0,
            0].</summary>
            <returns>The length of the unescaped data.</returns>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Util.ParsableNalUnitBitArray">
            <summary>Wraps a byte array, providing methods that allow it to be read as a NAL unit bitstream.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableNalUnitBitArray.#ctor(System.Byte[],System.Int32,System.Int32)">
            <param name="data">The data to wrap.</param>
            <param name="offset">The byte offset in <c>data</c> to start reading from.</param>
            <param name="limit">The byte offset of the end of the bitstream in <c>data</c>.</param>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableNalUnitBitArray.CanReadBits(System.Int32)">
            <param name="numBits">The number of bits.</param>
            <summary>Returns whether it's possible to read <c>n</c> bits starting from the current offset.</summary>
            <returns>Whether it is possible to read <c>n</c> bits.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableNalUnitBitArray.CanReadExpGolombCodedNum">
            <summary>Returns whether it is possible to read an Exp-Golomb-coded integer starting from the current
            offset.</summary>
            <returns>Whether it is possible to read an Exp-Golomb-coded integer.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableNalUnitBitArray.ReadBit">
            <summary>Reads a single bit.</summary>
            <returns>Whether the bit is set.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableNalUnitBitArray.ReadBits(System.Int32)">
            <param name="numBits">The number of bits to read.</param>
            <summary>Reads up to 32 bits.</summary>
            <returns>An integer whose bottom n bits hold the read data.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableNalUnitBitArray.ReadSignedExpGolombCodedInt">
            <summary>Reads an signed Exp-Golomb-coded format integer.</summary>
            <returns>The value of the parsed Exp-Golomb-coded integer.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableNalUnitBitArray.ReadUnsignedExpGolombCodedInt">
            <summary>Reads an unsigned Exp-Golomb-coded format integer.</summary>
            <returns>The value of the parsed Exp-Golomb-coded integer.</returns>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableNalUnitBitArray.Reset(System.Byte[],System.Int32,System.Int32)">
            <param name="data">The data to wrap.</param>
            <param name="offset">The byte offset in <c>data</c> to start reading from.</param>
            <param name="limit">The byte offset of the end of the bitstream in <c>data</c>.</param>
            <summary>Resets the wrapped data, limit and offset.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableNalUnitBitArray.SkipBit">
            <summary>Skips a single bit.</summary>
        </member>
        <member name="M:Com.Google.Android.Exoplayer2.Util.ParsableNalUnitBitArray.SkipBits(System.Int32)">
            <param name="numBits">The number of bits to skip.</param>
            <summary>Skips bits and moves current reading position forward.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Video.AvcConfig">
            <summary>AVC configuration data.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.AvcConfig.Codecs">
            <summary>An RFC 6381 codecs string representing the video format, or <c>null</c> if not known.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.AvcConfig.Height">
            <summary>The height of each decoded frame, or <c>Format#NO_VALUE</c> if unknown.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.AvcConfig.InitializationData">
            <summary>List of buffers containing the codec-specific data to be provided to the decoder.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.AvcConfig.NalUnitLengthFieldLength">
            <summary>The length of the NAL unit length field in the bitstream's container, in bytes.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.AvcConfig.PixelWidthHeightRatio">
            <summary>The pixel width to height ratio.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.AvcConfig.Width">
            <summary>The width of each decoded frame, or <c>Format#NO_VALUE</c> if unknown.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Video.DolbyVisionConfig">
            <summary>Dolby Vision configuration data.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.DolbyVisionConfig.Codecs">
            <summary>The RFC 6381 codecs string.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.DolbyVisionConfig.Level">
            <summary>The level number.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.DolbyVisionConfig.Profile">
            <summary>The profile number.</summary>
        </member>
        <member name="T:Com.Google.Android.Exoplayer2.Video.HevcConfig">
            <summary>HEVC configuration data.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.HevcConfig.Codecs">
            <summary>An RFC 6381 codecs string representing the video format, or <c>null</c> if not known.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.HevcConfig.Height">
            <summary>The height of each decoded frame, or <c>Format#NO_VALUE</c> if unknown.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.HevcConfig.InitializationData">
            <summary>List of buffers containing the codec-specific data to be provided to the decoder.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.HevcConfig.NalUnitLengthFieldLength">
            <summary>The length of the NAL unit length field in the bitstream's container, in bytes.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.HevcConfig.PixelWidthHeightRatio">
            <summary>The pixel width to height ratio.</summary>
        </member>
        <member name="P:Com.Google.Android.Exoplayer2.Video.HevcConfig.Width">
            <summary>The width of each decoded frame, or <c>Format#NO_VALUE</c> if unknown.</summary>
        </member>
    </members>
</doc>
